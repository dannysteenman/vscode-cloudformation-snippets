{
  "AWS::ACMPCA::Certificate": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificate.html",
    "Properties": {
      "ApiPassthrough": "ApiPassthrough",
      "CertificateAuthorityArn": "String",
      "CertificateSigningRequest": "String",
      "SigningAlgorithm": "String",
      "TemplateArn": "String",
      "Validity": "Validity",
      "ValidityNotBefore": "Validity"
    }
  },
  "AWS::ACMPCA::CertificateAuthority": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthority.html",
    "Properties": {
      "CsrExtensions": "CsrExtensions",
      "KeyAlgorithm": "String",
      "KeyStorageSecurityStandard": "String",
      "RevocationConfiguration": "RevocationConfiguration",
      "SigningAlgorithm": "String",
      "Subject": "Subject",
      "Tags": "Tag",
      "Type": "String",
      "UsageMode": "String"
    }
  },
  "AWS::ACMPCA::CertificateAuthorityActivation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthorityactivation.html",
    "Properties": {
      "Certificate": "String",
      "CertificateAuthorityArn": "String",
      "CertificateChain": "String",
      "Status": "String"
    }
  },
  "AWS::ACMPCA::Permission": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-permission.html",
    "Properties": {
      "Actions": "String",
      "CertificateAuthorityArn": "String",
      "Principal": "String",
      "SourceAccount": "String"
    }
  },
  "AWS::APS::RuleGroupsNamespace": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-aps-rulegroupsnamespace.html",
    "Properties": {
      "Data": "String",
      "Name": "String",
      "Tags": "Tag",
      "Workspace": "String"
    }
  },
  "AWS::APS::Scraper": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-aps-scraper.html",
    "Properties": {
      "Alias": "String",
      "Destination": "Destination",
      "ScrapeConfiguration": "ScrapeConfiguration",
      "Source": "Source",
      "Tags": "Tag"
    }
  },
  "AWS::APS::Workspace": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-aps-workspace.html",
    "Properties": {
      "AlertManagerDefinition": "String",
      "Alias": "String",
      "KmsKeyArn": "String",
      "LoggingConfiguration": "LoggingConfiguration",
      "Tags": "Tag"
    }
  },
  "AWS::ARCZonalShift::AutoshiftObserverNotificationStatus": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-arczonalshift-autoshiftobservernotificationstatus.html",
    "Properties": {
      "Status": "String"
    }
  },
  "AWS::ARCZonalShift::ZonalAutoshiftConfiguration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-arczonalshift-zonalautoshiftconfiguration.html",
    "Properties": {
      "PracticeRunConfiguration": "PracticeRunConfiguration",
      "ResourceIdentifier": "String",
      "ZonalAutoshiftStatus": "String"
    }
  },
  "AWS::AccessAnalyzer::Analyzer": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-accessanalyzer-analyzer.html",
    "Properties": {
      "AnalyzerConfiguration": "AnalyzerConfiguration",
      "AnalyzerName": "String",
      "ArchiveRules": "ArchiveRule",
      "Tags": "Tag",
      "Type": "String"
    }
  },
  "AWS::AmazonMQ::Broker": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html",
    "Properties": {
      "AuthenticationStrategy": "String",
      "AutoMinorVersionUpgrade": "Boolean",
      "BrokerName": "String",
      "Configuration": "ConfigurationId",
      "DataReplicationMode": "String",
      "DataReplicationPrimaryBrokerArn": "String",
      "DeploymentMode": "String",
      "EncryptionOptions": "EncryptionOptions",
      "EngineType": "String",
      "EngineVersion": "String",
      "HostInstanceType": "String",
      "LdapServerMetadata": "LdapServerMetadata",
      "Logs": "LogList",
      "MaintenanceWindowStartTime": "MaintenanceWindow",
      "PubliclyAccessible": "Boolean",
      "SecurityGroups": "String",
      "StorageType": "String",
      "SubnetIds": "String",
      "Tags": "TagsEntry",
      "Users": "User"
    }
  },
  "AWS::AmazonMQ::Configuration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-configuration.html",
    "Properties": {
      "AuthenticationStrategy": "String",
      "Data": "String",
      "Description": "String",
      "EngineType": "String",
      "EngineVersion": "String",
      "Name": "String",
      "Tags": "TagsEntry"
    }
  },
  "AWS::AmazonMQ::ConfigurationAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-configurationassociation.html",
    "Properties": {
      "Broker": "String",
      "Configuration": "ConfigurationId"
    }
  },
  "AWS::Amplify::App": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-app.html",
    "Properties": {
      "AccessToken": "String",
      "AutoBranchCreationConfig": "AutoBranchCreationConfig",
      "BasicAuthConfig": "BasicAuthConfig",
      "BuildSpec": "String",
      "CacheConfig": "CacheConfig",
      "CustomHeaders": "String",
      "CustomRules": "CustomRule",
      "Description": "String",
      "EnableBranchAutoDeletion": "Boolean",
      "EnvironmentVariables": "EnvironmentVariable",
      "IAMServiceRole": "String",
      "Name": "String",
      "OauthToken": "String",
      "Platform": "String",
      "Repository": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Amplify::Branch": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-branch.html",
    "Properties": {
      "AppId": "String",
      "Backend": "Backend",
      "BasicAuthConfig": "BasicAuthConfig",
      "BranchName": "String",
      "BuildSpec": "String",
      "Description": "String",
      "EnableAutoBuild": "Boolean",
      "EnablePerformanceMode": "Boolean",
      "EnablePullRequestPreview": "Boolean",
      "EnvironmentVariables": "EnvironmentVariable",
      "Framework": "String",
      "PullRequestEnvironmentName": "String",
      "Stage": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Amplify::Domain": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-domain.html",
    "Properties": {
      "AppId": "String",
      "AutoSubDomainCreationPatterns": "String",
      "AutoSubDomainIAMRole": "String",
      "CertificateSettings": "CertificateSettings",
      "DomainName": "String",
      "EnableAutoSubDomain": "Boolean",
      "SubDomainSettings": "SubDomainSetting"
    }
  },
  "AWS::AmplifyUIBuilder::Component": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplifyuibuilder-component.html",
    "Properties": {
      "AppId": "String",
      "BindingProperties": "Map",
      "Children": "ComponentChild",
      "CollectionProperties": "Map",
      "ComponentType": "String",
      "EnvironmentName": "String",
      "Events": "Map",
      "Name": "String",
      "Overrides": "Json",
      "Properties": "Map",
      "SchemaVersion": "String",
      "SourceId": "String",
      "Tags": "Map",
      "Variants": "ComponentVariant"
    }
  },
  "AWS::AmplifyUIBuilder::Form": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplifyuibuilder-form.html",
    "Properties": {
      "AppId": "String",
      "Cta": "FormCTA",
      "DataType": "FormDataTypeConfig",
      "EnvironmentName": "String",
      "Fields": "Map",
      "FormActionType": "String",
      "LabelDecorator": "String",
      "Name": "String",
      "SchemaVersion": "String",
      "SectionalElements": "Map",
      "Style": "FormStyle",
      "Tags": "Map"
    }
  },
  "AWS::AmplifyUIBuilder::Theme": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplifyuibuilder-theme.html",
    "Properties": {
      "AppId": "String",
      "EnvironmentName": "String",
      "Name": "String",
      "Overrides": "ThemeValues",
      "Tags": "Map",
      "Values": "ThemeValues"
    }
  },
  "AWS::ApiGateway::Account": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-account.html",
    "Properties": {
      "CloudWatchRoleArn": "String"
    }
  },
  "AWS::ApiGateway::ApiKey": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-apikey.html",
    "Properties": {
      "CustomerId": "String",
      "Description": "String",
      "Enabled": "Boolean",
      "GenerateDistinctId": "Boolean",
      "Name": "String",
      "StageKeys": "StageKey",
      "Tags": "Tag",
      "Value": "String"
    }
  },
  "AWS::ApiGateway::Authorizer": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-authorizer.html",
    "Properties": {
      "AuthType": "String",
      "AuthorizerCredentials": "String",
      "AuthorizerResultTtlInSeconds": "Integer",
      "AuthorizerUri": "String",
      "IdentitySource": "String",
      "IdentityValidationExpression": "String",
      "Name": "String",
      "ProviderARNs": "String",
      "RestApiId": "String",
      "Type": "String"
    }
  },
  "AWS::ApiGateway::BasePathMapping": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-basepathmapping.html",
    "Properties": {
      "BasePath": "String",
      "DomainName": "String",
      "Id": "String",
      "RestApiId": "String",
      "Stage": "String"
    }
  },
  "AWS::ApiGateway::ClientCertificate": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-clientcertificate.html",
    "Properties": {
      "Description": "String",
      "Tags": "Tag"
    }
  },
  "AWS::ApiGateway::Deployment": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-deployment.html",
    "Properties": {
      "DeploymentCanarySettings": "DeploymentCanarySettings",
      "Description": "String",
      "RestApiId": "String",
      "StageDescription": "StageDescription",
      "StageName": "String"
    }
  },
  "AWS::ApiGateway::DocumentationPart": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-documentationpart.html",
    "Properties": {
      "Location": "Location",
      "Properties": "String",
      "RestApiId": "String"
    }
  },
  "AWS::ApiGateway::DocumentationVersion": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-documentationversion.html",
    "Properties": {
      "Description": "String",
      "DocumentationVersion": "String",
      "RestApiId": "String"
    }
  },
  "AWS::ApiGateway::DomainName": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-domainname.html",
    "Properties": {
      "CertificateArn": "String",
      "DomainName": "String",
      "EndpointConfiguration": "EndpointConfiguration",
      "MutualTlsAuthentication": "MutualTlsAuthentication",
      "OwnershipVerificationCertificateArn": "String",
      "RegionalCertificateArn": "String",
      "SecurityPolicy": "String",
      "Tags": "Tag"
    }
  },
  "AWS::ApiGateway::GatewayResponse": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-gatewayresponse.html",
    "Properties": {
      "ResponseParameters": "Map",
      "ResponseTemplates": "Map",
      "ResponseType": "String",
      "RestApiId": "String",
      "StatusCode": "String"
    }
  },
  "AWS::ApiGateway::Method": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
    "Properties": {
      "ApiKeyRequired": "Boolean",
      "AuthorizationScopes": "String",
      "AuthorizationType": "String",
      "AuthorizerId": "String",
      "HttpMethod": "String",
      "Integration": "Integration",
      "MethodResponses": "MethodResponse",
      "OperationName": "String",
      "RequestModels": "Map",
      "RequestParameters": "Map",
      "RequestValidatorId": "String",
      "ResourceId": "String",
      "RestApiId": "String"
    }
  },
  "AWS::ApiGateway::Model": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-model.html",
    "Properties": {
      "ContentType": "String",
      "Description": "String",
      "Name": "String",
      "RestApiId": "String",
      "Schema": "Json"
    }
  },
  "AWS::ApiGateway::RequestValidator": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-requestvalidator.html",
    "Properties": {
      "Name": "String",
      "RestApiId": "String",
      "ValidateRequestBody": "Boolean",
      "ValidateRequestParameters": "Boolean"
    }
  },
  "AWS::ApiGateway::Resource": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-resource.html",
    "Properties": {
      "ParentId": "String",
      "PathPart": "String",
      "RestApiId": "String"
    }
  },
  "AWS::ApiGateway::RestApi": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
    "Properties": {
      "ApiKeySourceType": "String",
      "BinaryMediaTypes": "String",
      "Body": "Json",
      "BodyS3Location": "S3Location",
      "CloneFrom": "String",
      "Description": "String",
      "DisableExecuteApiEndpoint": "Boolean",
      "EndpointConfiguration": "EndpointConfiguration",
      "FailOnWarnings": "Boolean",
      "MinimumCompressionSize": "Integer",
      "Mode": "String",
      "Name": "String",
      "Parameters": "Map",
      "Policy": "Json",
      "Tags": "Tag"
    }
  },
  "AWS::ApiGateway::Stage": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-stage.html",
    "Properties": {
      "AccessLogSetting": "AccessLogSetting",
      "CacheClusterEnabled": "Boolean",
      "CacheClusterSize": "String",
      "CanarySetting": "CanarySetting",
      "ClientCertificateId": "String",
      "DeploymentId": "String",
      "Description": "String",
      "DocumentationVersion": "String",
      "MethodSettings": "MethodSetting",
      "RestApiId": "String",
      "StageName": "String",
      "Tags": "Tag",
      "TracingEnabled": "Boolean",
      "Variables": "Map"
    }
  },
  "AWS::ApiGateway::UsagePlan": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-usageplan.html",
    "Properties": {
      "ApiStages": "ApiStage",
      "Description": "String",
      "Quota": "QuotaSettings",
      "Tags": "Tag",
      "Throttle": "ThrottleSettings",
      "UsagePlanName": "String"
    }
  },
  "AWS::ApiGateway::UsagePlanKey": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-usageplankey.html",
    "Properties": {
      "KeyId": "String",
      "KeyType": "String",
      "UsagePlanId": "String"
    }
  },
  "AWS::ApiGateway::VpcLink": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-vpclink.html",
    "Properties": {
      "Description": "String",
      "Name": "String",
      "Tags": "Tag",
      "TargetArns": "String"
    }
  },
  "AWS::ApiGatewayV2::Api": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-api.html",
    "Properties": {
      "ApiKeySelectionExpression": "String",
      "BasePath": "String",
      "Body": "Json",
      "BodyS3Location": "BodyS3Location",
      "CorsConfiguration": "Cors",
      "CredentialsArn": "String",
      "Description": "String",
      "DisableExecuteApiEndpoint": "Boolean",
      "DisableSchemaValidation": "Boolean",
      "FailOnWarnings": "Boolean",
      "Name": "String",
      "ProtocolType": "String",
      "RouteKey": "String",
      "RouteSelectionExpression": "String",
      "Tags": "Map",
      "Target": "String",
      "Version": "String"
    }
  },
  "AWS::ApiGatewayV2::ApiGatewayManagedOverrides": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-apigatewaymanagedoverrides.html",
    "Properties": {
      "ApiId": "String",
      "Integration": "IntegrationOverrides",
      "Route": "RouteOverrides",
      "Stage": "StageOverrides"
    }
  },
  "AWS::ApiGatewayV2::ApiMapping": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-apimapping.html",
    "Properties": {
      "ApiId": "String",
      "ApiMappingKey": "String",
      "DomainName": "String",
      "Stage": "String"
    }
  },
  "AWS::ApiGatewayV2::Authorizer": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-authorizer.html",
    "Properties": {
      "ApiId": "String",
      "AuthorizerCredentialsArn": "String",
      "AuthorizerPayloadFormatVersion": "String",
      "AuthorizerResultTtlInSeconds": "Integer",
      "AuthorizerType": "String",
      "AuthorizerUri": "String",
      "EnableSimpleResponses": "Boolean",
      "IdentitySource": "String",
      "IdentityValidationExpression": "String",
      "JwtConfiguration": "JWTConfiguration",
      "Name": "String"
    }
  },
  "AWS::ApiGatewayV2::Deployment": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-deployment.html",
    "Properties": {
      "ApiId": "String",
      "Description": "String",
      "StageName": "String"
    }
  },
  "AWS::ApiGatewayV2::DomainName": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-domainname.html",
    "Properties": {
      "DomainName": "String",
      "DomainNameConfigurations": "DomainNameConfiguration",
      "MutualTlsAuthentication": "MutualTlsAuthentication",
      "Tags": "Map"
    }
  },
  "AWS::ApiGatewayV2::Integration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-integration.html",
    "Properties": {
      "ApiId": "String",
      "ConnectionId": "String",
      "ConnectionType": "String",
      "ContentHandlingStrategy": "String",
      "CredentialsArn": "String",
      "Description": "String",
      "IntegrationMethod": "String",
      "IntegrationSubtype": "String",
      "IntegrationType": "String",
      "IntegrationUri": "String",
      "PassthroughBehavior": "String",
      "PayloadFormatVersion": "String",
      "RequestParameters": "Map",
      "RequestTemplates": "Map",
      "ResponseParameters": "Map",
      "TemplateSelectionExpression": "String",
      "TimeoutInMillis": "Integer",
      "TlsConfig": "TlsConfig"
    }
  },
  "AWS::ApiGatewayV2::IntegrationResponse": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-integrationresponse.html",
    "Properties": {
      "ApiId": "String",
      "ContentHandlingStrategy": "String",
      "IntegrationId": "String",
      "IntegrationResponseKey": "String",
      "ResponseParameters": "Json",
      "ResponseTemplates": "Json",
      "TemplateSelectionExpression": "String"
    }
  },
  "AWS::ApiGatewayV2::Model": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-model.html",
    "Properties": {
      "ApiId": "String",
      "ContentType": "String",
      "Description": "String",
      "Name": "String",
      "Schema": "Json"
    }
  },
  "AWS::ApiGatewayV2::Route": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-route.html",
    "Properties": {
      "ApiId": "String",
      "ApiKeyRequired": "Boolean",
      "AuthorizationScopes": "String",
      "AuthorizationType": "String",
      "AuthorizerId": "String",
      "ModelSelectionExpression": "String",
      "OperationName": "String",
      "RequestModels": "Json",
      "RequestParameters": "Json",
      "RouteKey": "String",
      "RouteResponseSelectionExpression": "String",
      "Target": "String"
    }
  },
  "AWS::ApiGatewayV2::RouteResponse": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-routeresponse.html",
    "Properties": {
      "ApiId": "String",
      "ModelSelectionExpression": "String",
      "ResponseModels": "Json",
      "ResponseParameters": "Map",
      "RouteId": "String",
      "RouteResponseKey": "String"
    }
  },
  "AWS::ApiGatewayV2::Stage": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-stage.html",
    "Properties": {
      "AccessLogSettings": "AccessLogSettings",
      "AccessPolicyId": "String",
      "ApiId": "String",
      "AutoDeploy": "Boolean",
      "ClientCertificateId": "String",
      "DefaultRouteSettings": "RouteSettings",
      "DeploymentId": "String",
      "Description": "String",
      "RouteSettings": "Json",
      "StageName": "String",
      "StageVariables": "Json",
      "Tags": "Json"
    }
  },
  "AWS::ApiGatewayV2::VpcLink": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-vpclink.html",
    "Properties": {
      "Name": "String",
      "SecurityGroupIds": "String",
      "SubnetIds": "String",
      "Tags": "Map"
    }
  },
  "AWS::AppConfig::Application": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-application.html",
    "Properties": {
      "Description": "String",
      "Name": "String",
      "Tags": "Tags"
    }
  },
  "AWS::AppConfig::ConfigurationProfile": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-configurationprofile.html",
    "Properties": {
      "ApplicationId": "String",
      "Description": "String",
      "KmsKeyIdentifier": "String",
      "LocationUri": "String",
      "Name": "String",
      "RetrievalRoleArn": "String",
      "Tags": "Tags",
      "Type": "String",
      "Validators": "Validators"
    }
  },
  "AWS::AppConfig::Deployment": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-deployment.html",
    "Properties": {
      "ApplicationId": "String",
      "ConfigurationProfileId": "String",
      "ConfigurationVersion": "String",
      "DeploymentStrategyId": "String",
      "Description": "String",
      "DynamicExtensionParameters": "DynamicExtensionParameters",
      "EnvironmentId": "String",
      "KmsKeyIdentifier": "String",
      "Tags": "Tags"
    }
  },
  "AWS::AppConfig::DeploymentStrategy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-deploymentstrategy.html",
    "Properties": {
      "DeploymentDurationInMinutes": "Double",
      "Description": "String",
      "FinalBakeTimeInMinutes": "Double",
      "GrowthFactor": "Double",
      "GrowthType": "String",
      "Name": "String",
      "ReplicateTo": "String",
      "Tags": "Tags"
    }
  },
  "AWS::AppConfig::Environment": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-environment.html",
    "Properties": {
      "ApplicationId": "String",
      "Description": "String",
      "Monitors": "Monitor",
      "Name": "String",
      "Tags": "Tag"
    }
  },
  "AWS::AppConfig::Extension": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-extension.html",
    "Properties": {
      "Actions": "Json",
      "Description": "String",
      "LatestVersionNumber": "Integer",
      "Name": "String",
      "Parameters": "Map",
      "Tags": "Tag"
    }
  },
  "AWS::AppConfig::ExtensionAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-extensionassociation.html",
    "Properties": {
      "ExtensionIdentifier": "String",
      "ExtensionVersionNumber": "Integer",
      "Parameters": "Map",
      "ResourceIdentifier": "String",
      "Tags": "Tag"
    }
  },
  "AWS::AppConfig::HostedConfigurationVersion": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-hostedconfigurationversion.html",
    "Properties": {
      "ApplicationId": "String",
      "ConfigurationProfileId": "String",
      "Content": "String",
      "ContentType": "String",
      "Description": "String",
      "LatestVersionNumber": "Integer",
      "VersionLabel": "String"
    }
  },
  "AWS::AppFlow::Connector": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appflow-connector.html",
    "Properties": {
      "ConnectorLabel": "String",
      "ConnectorProvisioningConfig": "ConnectorProvisioningConfig",
      "ConnectorProvisioningType": "String",
      "Description": "String"
    }
  },
  "AWS::AppFlow::ConnectorProfile": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appflow-connectorprofile.html",
    "Properties": {
      "ConnectionMode": "String",
      "ConnectorLabel": "String",
      "ConnectorProfileConfig": "ConnectorProfileConfig",
      "ConnectorProfileName": "String",
      "ConnectorType": "String",
      "KMSArn": "String"
    }
  },
  "AWS::AppFlow::Flow": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appflow-flow.html",
    "Properties": {
      "Description": "String",
      "DestinationFlowConfigList": "DestinationFlowConfig",
      "FlowName": "String",
      "FlowStatus": "String",
      "KMSArn": "String",
      "MetadataCatalogConfig": "MetadataCatalogConfig",
      "SourceFlowConfig": "SourceFlowConfig",
      "Tags": "Tag",
      "Tasks": "Task",
      "TriggerConfig": "TriggerConfig"
    }
  },
  "AWS::AppIntegrations::Application": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appintegrations-application.html",
    "Properties": {
      "ApplicationSourceConfig": "ApplicationSourceConfig",
      "Description": "String",
      "Name": "String",
      "Namespace": "String",
      "Permissions": "String",
      "Tags": "Tag"
    }
  },
  "AWS::AppIntegrations::DataIntegration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appintegrations-dataintegration.html",
    "Properties": {
      "Description": "String",
      "FileConfiguration": "FileConfiguration",
      "KmsKey": "String",
      "Name": "String",
      "ObjectConfiguration": "Json",
      "ScheduleConfig": "ScheduleConfig",
      "SourceURI": "String",
      "Tags": "Tag"
    }
  },
  "AWS::AppIntegrations::EventIntegration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appintegrations-eventintegration.html",
    "Properties": {
      "Description": "String",
      "EventBridgeBus": "String",
      "EventFilter": "EventFilter",
      "Name": "String",
      "Tags": "Tag"
    }
  },
  "AWS::AppMesh::GatewayRoute": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-gatewayroute.html",
    "Properties": {
      "GatewayRouteName": "String",
      "MeshName": "String",
      "MeshOwner": "String",
      "Spec": "GatewayRouteSpec",
      "Tags": "Tag",
      "VirtualGatewayName": "String"
    }
  },
  "AWS::AppMesh::Mesh": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-mesh.html",
    "Properties": {
      "MeshName": "String",
      "Spec": "MeshSpec",
      "Tags": "Tag"
    }
  },
  "AWS::AppMesh::Route": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-route.html",
    "Properties": {
      "MeshName": "String",
      "MeshOwner": "String",
      "RouteName": "String",
      "Spec": "RouteSpec",
      "Tags": "Tag",
      "VirtualRouterName": "String"
    }
  },
  "AWS::AppMesh::VirtualGateway": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-virtualgateway.html",
    "Properties": {
      "MeshName": "String",
      "MeshOwner": "String",
      "Spec": "VirtualGatewaySpec",
      "Tags": "Tag",
      "VirtualGatewayName": "String"
    }
  },
  "AWS::AppMesh::VirtualNode": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-virtualnode.html",
    "Properties": {
      "MeshName": "String",
      "MeshOwner": "String",
      "Spec": "VirtualNodeSpec",
      "Tags": "Tag",
      "VirtualNodeName": "String"
    }
  },
  "AWS::AppMesh::VirtualRouter": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-virtualrouter.html",
    "Properties": {
      "MeshName": "String",
      "MeshOwner": "String",
      "Spec": "VirtualRouterSpec",
      "Tags": "Tag",
      "VirtualRouterName": "String"
    }
  },
  "AWS::AppMesh::VirtualService": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-virtualservice.html",
    "Properties": {
      "MeshName": "String",
      "MeshOwner": "String",
      "Spec": "VirtualServiceSpec",
      "Tags": "Tag",
      "VirtualServiceName": "String"
    }
  },
  "AWS::AppRunner::AutoScalingConfiguration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-autoscalingconfiguration.html",
    "Properties": {
      "AutoScalingConfigurationName": "String",
      "MaxConcurrency": "Integer",
      "MaxSize": "Integer",
      "MinSize": "Integer",
      "Tags": "Tag"
    }
  },
  "AWS::AppRunner::ObservabilityConfiguration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-observabilityconfiguration.html",
    "Properties": {
      "ObservabilityConfigurationName": "String",
      "Tags": "Tag",
      "TraceConfiguration": "TraceConfiguration"
    }
  },
  "AWS::AppRunner::Service": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-service.html",
    "Properties": {
      "AutoScalingConfigurationArn": "String",
      "EncryptionConfiguration": "EncryptionConfiguration",
      "HealthCheckConfiguration": "HealthCheckConfiguration",
      "InstanceConfiguration": "InstanceConfiguration",
      "NetworkConfiguration": "NetworkConfiguration",
      "ObservabilityConfiguration": "ServiceObservabilityConfiguration",
      "ServiceName": "String",
      "SourceConfiguration": "SourceConfiguration",
      "Tags": "Tag"
    }
  },
  "AWS::AppRunner::VpcConnector": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-vpcconnector.html",
    "Properties": {
      "SecurityGroups": "String",
      "Subnets": "String",
      "Tags": "Tag",
      "VpcConnectorName": "String"
    }
  },
  "AWS::AppRunner::VpcIngressConnection": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-vpcingressconnection.html",
    "Properties": {
      "IngressVpcConfiguration": "IngressVpcConfiguration",
      "ServiceArn": "String",
      "Tags": "Tag",
      "VpcIngressConnectionName": "String"
    }
  },
  "AWS::AppStream::AppBlock": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-appblock.html",
    "Properties": {
      "Description": "String",
      "DisplayName": "String",
      "Name": "String",
      "PackagingType": "String",
      "PostSetupScriptDetails": "ScriptDetails",
      "SetupScriptDetails": "ScriptDetails",
      "SourceS3Location": "S3Location",
      "Tags": "Tag"
    }
  },
  "AWS::AppStream::AppBlockBuilder": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-appblockbuilder.html",
    "Properties": {
      "AccessEndpoints": "AccessEndpoint",
      "AppBlockArns": "String",
      "Description": "String",
      "DisplayName": "String",
      "EnableDefaultInternetAccess": "Boolean",
      "IamRoleArn": "String",
      "InstanceType": "String",
      "Name": "String",
      "Platform": "String",
      "Tags": "Tag",
      "VpcConfig": "VpcConfig"
    }
  },
  "AWS::AppStream::Application": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-application.html",
    "Properties": {
      "AppBlockArn": "String",
      "AttributesToDelete": "String",
      "Description": "String",
      "DisplayName": "String",
      "IconS3Location": "S3Location",
      "InstanceFamilies": "String",
      "LaunchParameters": "String",
      "LaunchPath": "String",
      "Name": "String",
      "Platforms": "String",
      "Tags": "Tag",
      "WorkingDirectory": "String"
    }
  },
  "AWS::AppStream::ApplicationEntitlementAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-applicationentitlementassociation.html",
    "Properties": {
      "ApplicationIdentifier": "String",
      "EntitlementName": "String",
      "StackName": "String"
    }
  },
  "AWS::AppStream::ApplicationFleetAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-applicationfleetassociation.html",
    "Properties": {
      "ApplicationArn": "String",
      "FleetName": "String"
    }
  },
  "AWS::AppStream::DirectoryConfig": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-directoryconfig.html",
    "Properties": {
      "CertificateBasedAuthProperties": "CertificateBasedAuthProperties",
      "DirectoryName": "String",
      "OrganizationalUnitDistinguishedNames": "String",
      "ServiceAccountCredentials": "ServiceAccountCredentials"
    }
  },
  "AWS::AppStream::Entitlement": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-entitlement.html",
    "Properties": {
      "AppVisibility": "String",
      "Attributes": "Attribute",
      "Description": "String",
      "Name": "String",
      "StackName": "String"
    }
  },
  "AWS::AppStream::Fleet": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html",
    "Properties": {
      "ComputeCapacity": "ComputeCapacity",
      "Description": "String",
      "DisconnectTimeoutInSeconds": "Integer",
      "DisplayName": "String",
      "DomainJoinInfo": "DomainJoinInfo",
      "EnableDefaultInternetAccess": "Boolean",
      "FleetType": "String",
      "IamRoleArn": "String",
      "IdleDisconnectTimeoutInSeconds": "Integer",
      "ImageArn": "String",
      "ImageName": "String",
      "InstanceType": "String",
      "MaxConcurrentSessions": "Integer",
      "MaxSessionsPerInstance": "Integer",
      "MaxUserDurationInSeconds": "Integer",
      "Name": "String",
      "Platform": "String",
      "SessionScriptS3Location": "S3Location",
      "StreamView": "String",
      "Tags": "Tag",
      "UsbDeviceFilterStrings": "String",
      "VpcConfig": "VpcConfig"
    }
  },
  "AWS::AppStream::ImageBuilder": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-imagebuilder.html",
    "Properties": {
      "AccessEndpoints": "AccessEndpoint",
      "AppstreamAgentVersion": "String",
      "Description": "String",
      "DisplayName": "String",
      "DomainJoinInfo": "DomainJoinInfo",
      "EnableDefaultInternetAccess": "Boolean",
      "IamRoleArn": "String",
      "ImageArn": "String",
      "ImageName": "String",
      "InstanceType": "String",
      "Name": "String",
      "Tags": "Tag",
      "VpcConfig": "VpcConfig"
    }
  },
  "AWS::AppStream::Stack": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stack.html",
    "Properties": {
      "AccessEndpoints": "AccessEndpoint",
      "ApplicationSettings": "ApplicationSettings",
      "AttributesToDelete": "String",
      "DeleteStorageConnectors": "Boolean",
      "Description": "String",
      "DisplayName": "String",
      "EmbedHostDomains": "String",
      "FeedbackURL": "String",
      "Name": "String",
      "RedirectURL": "String",
      "StorageConnectors": "StorageConnector",
      "StreamingExperienceSettings": "StreamingExperienceSettings",
      "Tags": "Tag",
      "UserSettings": "UserSetting"
    }
  },
  "AWS::AppStream::StackFleetAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stackfleetassociation.html",
    "Properties": {
      "FleetName": "String",
      "StackName": "String"
    }
  },
  "AWS::AppStream::StackUserAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stackuserassociation.html",
    "Properties": {
      "AuthenticationType": "String",
      "SendEmailNotification": "Boolean",
      "StackName": "String",
      "UserName": "String"
    }
  },
  "AWS::AppStream::User": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-user.html",
    "Properties": {
      "AuthenticationType": "String",
      "FirstName": "String",
      "LastName": "String",
      "MessageAction": "String",
      "UserName": "String"
    }
  },
  "AWS::AppSync::ApiCache": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-apicache.html",
    "Properties": {
      "ApiCachingBehavior": "String",
      "ApiId": "String",
      "AtRestEncryptionEnabled": "Boolean",
      "HealthMetricsConfig": "String",
      "TransitEncryptionEnabled": "Boolean",
      "Ttl": "Double",
      "Type": "String"
    }
  },
  "AWS::AppSync::ApiKey": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-apikey.html",
    "Properties": {
      "ApiId": "String",
      "ApiKeyId": "String",
      "Description": "String",
      "Expires": "Double"
    }
  },
  "AWS::AppSync::DataSource": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-datasource.html",
    "Properties": {
      "ApiId": "String",
      "Description": "String",
      "DynamoDBConfig": "DynamoDBConfig",
      "ElasticsearchConfig": "ElasticsearchConfig",
      "EventBridgeConfig": "EventBridgeConfig",
      "HttpConfig": "HttpConfig",
      "LambdaConfig": "LambdaConfig",
      "MetricsConfig": "String",
      "Name": "String",
      "OpenSearchServiceConfig": "OpenSearchServiceConfig",
      "RelationalDatabaseConfig": "RelationalDatabaseConfig",
      "ServiceRoleArn": "String",
      "Type": "String"
    }
  },
  "AWS::AppSync::DomainName": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-domainname.html",
    "Properties": {
      "CertificateArn": "String",
      "Description": "String",
      "DomainName": "String"
    }
  },
  "AWS::AppSync::DomainNameApiAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-domainnameapiassociation.html",
    "Properties": {
      "ApiId": "String",
      "DomainName": "String"
    }
  },
  "AWS::AppSync::FunctionConfiguration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html",
    "Properties": {
      "ApiId": "String",
      "Code": "String",
      "CodeS3Location": "String",
      "DataSourceName": "String",
      "Description": "String",
      "FunctionVersion": "String",
      "MaxBatchSize": "Integer",
      "Name": "String",
      "RequestMappingTemplate": "String",
      "RequestMappingTemplateS3Location": "String",
      "ResponseMappingTemplate": "String",
      "ResponseMappingTemplateS3Location": "String",
      "Runtime": "AppSyncRuntime",
      "SyncConfig": "SyncConfig"
    }
  },
  "AWS::AppSync::GraphQLApi": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlapi.html",
    "Properties": {
      "AdditionalAuthenticationProviders": "AdditionalAuthenticationProvider",
      "ApiType": "String",
      "AuthenticationType": "String",
      "EnhancedMetricsConfig": "EnhancedMetricsConfig",
      "EnvironmentVariables": "Json",
      "IntrospectionConfig": "String",
      "LambdaAuthorizerConfig": "LambdaAuthorizerConfig",
      "LogConfig": "LogConfig",
      "MergedApiExecutionRoleArn": "String",
      "Name": "String",
      "OpenIDConnectConfig": "OpenIDConnectConfig",
      "OwnerContact": "String",
      "QueryDepthLimit": "Integer",
      "ResolverCountLimit": "Integer",
      "Tags": "Tag",
      "UserPoolConfig": "UserPoolConfig",
      "Visibility": "String",
      "XrayEnabled": "Boolean"
    }
  },
  "AWS::AppSync::GraphQLSchema": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlschema.html",
    "Properties": {
      "ApiId": "String",
      "Definition": "String",
      "DefinitionS3Location": "String"
    }
  },
  "AWS::AppSync::Resolver": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html",
    "Properties": {
      "ApiId": "String",
      "CachingConfig": "CachingConfig",
      "Code": "String",
      "CodeS3Location": "String",
      "DataSourceName": "String",
      "FieldName": "String",
      "Kind": "String",
      "MaxBatchSize": "Integer",
      "MetricsConfig": "String",
      "PipelineConfig": "PipelineConfig",
      "RequestMappingTemplate": "String",
      "RequestMappingTemplateS3Location": "String",
      "ResponseMappingTemplate": "String",
      "ResponseMappingTemplateS3Location": "String",
      "Runtime": "AppSyncRuntime",
      "SyncConfig": "SyncConfig",
      "TypeName": "String"
    }
  },
  "AWS::AppSync::SourceApiAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-sourceapiassociation.html",
    "Properties": {
      "Description": "String",
      "MergedApiIdentifier": "String",
      "SourceApiAssociationConfig": "SourceApiAssociationConfig",
      "SourceApiIdentifier": "String"
    }
  },
  "AWS::AppTest::TestCase": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apptest-testcase.html",
    "Properties": {
      "Description": "String",
      "Name": "String",
      "Steps": "Step",
      "Tags": "Map"
    }
  },
  "AWS::ApplicationAutoScaling::ScalableTarget": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html",
    "Properties": {
      "MaxCapacity": "Integer",
      "MinCapacity": "Integer",
      "ResourceId": "String",
      "RoleARN": "String",
      "ScalableDimension": "String",
      "ScheduledActions": "ScheduledAction",
      "ServiceNamespace": "String",
      "SuspendedState": "SuspendedState"
    }
  },
  "AWS::ApplicationAutoScaling::ScalingPolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html",
    "Properties": {
      "PolicyName": "String",
      "PolicyType": "String",
      "ResourceId": "String",
      "ScalableDimension": "String",
      "ScalingTargetId": "String",
      "ServiceNamespace": "String",
      "StepScalingPolicyConfiguration": "StepScalingPolicyConfiguration",
      "TargetTrackingScalingPolicyConfiguration": "TargetTrackingScalingPolicyConfiguration"
    }
  },
  "AWS::ApplicationInsights::Application": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationinsights-application.html",
    "Properties": {
      "AttachMissingPermission": "Boolean",
      "AutoConfigurationEnabled": "Boolean",
      "CWEMonitorEnabled": "Boolean",
      "ComponentMonitoringSettings": "ComponentMonitoringSetting",
      "CustomComponents": "CustomComponent",
      "GroupingType": "String",
      "LogPatternSets": "LogPatternSet",
      "OpsCenterEnabled": "Boolean",
      "OpsItemSNSTopicArn": "String",
      "ResourceGroupName": "String",
      "Tags": "Tag"
    }
  },
  "AWS::ApplicationSignals::ServiceLevelObjective": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationsignals-servicelevelobjective.html",
    "Properties": {
      "Description": "String",
      "Goal": "Goal",
      "Name": "String",
      "RequestBasedSli": "RequestBasedSli",
      "Sli": "Sli",
      "Tags": "Tag"
    }
  },
  "AWS::Athena::CapacityReservation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-capacityreservation.html",
    "Properties": {
      "CapacityAssignmentConfiguration": "CapacityAssignmentConfiguration",
      "Name": "String",
      "Tags": "Tag",
      "TargetDpus": "Integer"
    }
  },
  "AWS::Athena::DataCatalog": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-datacatalog.html",
    "Properties": {
      "Description": "String",
      "Name": "String",
      "Parameters": "Map",
      "Tags": "Tag",
      "Type": "String"
    }
  },
  "AWS::Athena::NamedQuery": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-namedquery.html",
    "Properties": {
      "Database": "String",
      "Description": "String",
      "Name": "String",
      "QueryString": "String",
      "WorkGroup": "String"
    }
  },
  "AWS::Athena::PreparedStatement": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-preparedstatement.html",
    "Properties": {
      "Description": "String",
      "QueryStatement": "String",
      "StatementName": "String",
      "WorkGroup": "String"
    }
  },
  "AWS::Athena::WorkGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-workgroup.html",
    "Properties": {
      "Description": "String",
      "Name": "String",
      "RecursiveDeleteOption": "Boolean",
      "State": "String",
      "Tags": "Tag",
      "WorkGroupConfiguration": "WorkGroupConfiguration"
    }
  },
  "AWS::AuditManager::Assessment": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-auditmanager-assessment.html",
    "Properties": {
      "AssessmentReportsDestination": "AssessmentReportsDestination",
      "AwsAccount": "AWSAccount",
      "Delegations": "Delegation",
      "Description": "String",
      "FrameworkId": "String",
      "Name": "String",
      "Roles": "Role",
      "Scope": "Scope",
      "Status": "String",
      "Tags": "Tag"
    }
  },
  "AWS::AutoScaling::AutoScalingGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html",
    "Properties": {
      "AutoScalingGroupName": "String",
      "AvailabilityZones": "String",
      "CapacityRebalance": "Boolean",
      "Context": "String",
      "Cooldown": "String",
      "DefaultInstanceWarmup": "Integer",
      "DesiredCapacity": "String",
      "DesiredCapacityType": "String",
      "HealthCheckGracePeriod": "Integer",
      "HealthCheckType": "String",
      "InstanceId": "String",
      "InstanceMaintenancePolicy": "InstanceMaintenancePolicy",
      "LaunchConfigurationName": "String",
      "LaunchTemplate": "LaunchTemplateSpecification",
      "LifecycleHookSpecificationList": "LifecycleHookSpecification",
      "LoadBalancerNames": "String",
      "MaxInstanceLifetime": "Integer",
      "MaxSize": "String",
      "MetricsCollection": "MetricsCollection",
      "MinSize": "String",
      "MixedInstancesPolicy": "MixedInstancesPolicy",
      "NewInstancesProtectedFromScaleIn": "Boolean",
      "NotificationConfigurations": "NotificationConfiguration",
      "PlacementGroup": "String",
      "ServiceLinkedRoleARN": "String",
      "Tags": "TagProperty",
      "TargetGroupARNs": "String",
      "TerminationPolicies": "String",
      "VPCZoneIdentifier": "String"
    }
  },
  "AWS::AutoScaling::LaunchConfiguration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html",
    "Properties": {
      "AssociatePublicIpAddress": "Boolean",
      "BlockDeviceMappings": "BlockDeviceMapping",
      "ClassicLinkVPCId": "String",
      "ClassicLinkVPCSecurityGroups": "String",
      "EbsOptimized": "Boolean",
      "IamInstanceProfile": "String",
      "ImageId": "String",
      "InstanceId": "String",
      "InstanceMonitoring": "Boolean",
      "InstanceType": "String",
      "KernelId": "String",
      "KeyName": "String",
      "LaunchConfigurationName": "String",
      "MetadataOptions": "MetadataOptions",
      "PlacementTenancy": "String",
      "RamDiskId": "String",
      "SecurityGroups": "String",
      "SpotPrice": "String",
      "UserData": "String"
    }
  },
  "AWS::AutoScaling::LifecycleHook": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html",
    "Properties": {
      "AutoScalingGroupName": "String",
      "DefaultResult": "String",
      "HeartbeatTimeout": "Integer",
      "LifecycleHookName": "String",
      "LifecycleTransition": "String",
      "NotificationMetadata": "String",
      "NotificationTargetARN": "String",
      "RoleARN": "String"
    }
  },
  "AWS::AutoScaling::ScalingPolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html",
    "Properties": {
      "AdjustmentType": "String",
      "AutoScalingGroupName": "String",
      "Cooldown": "String",
      "EstimatedInstanceWarmup": "Integer",
      "MetricAggregationType": "String",
      "MinAdjustmentMagnitude": "Integer",
      "PolicyType": "String",
      "PredictiveScalingConfiguration": "PredictiveScalingConfiguration",
      "ScalingAdjustment": "Integer",
      "StepAdjustments": "StepAdjustment",
      "TargetTrackingConfiguration": "TargetTrackingConfiguration"
    }
  },
  "AWS::AutoScaling::ScheduledAction": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scheduledaction.html",
    "Properties": {
      "AutoScalingGroupName": "String",
      "DesiredCapacity": "Integer",
      "EndTime": "String",
      "MaxSize": "Integer",
      "MinSize": "Integer",
      "Recurrence": "String",
      "StartTime": "String",
      "TimeZone": "String"
    }
  },
  "AWS::AutoScaling::WarmPool": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-warmpool.html",
    "Properties": {
      "AutoScalingGroupName": "String",
      "InstanceReusePolicy": "InstanceReusePolicy",
      "MaxGroupPreparedCapacity": "Integer",
      "MinSize": "Integer",
      "PoolState": "String"
    }
  },
  "AWS::AutoScalingPlans::ScalingPlan": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscalingplans-scalingplan.html",
    "Properties": {
      "ApplicationSource": "ApplicationSource",
      "ScalingInstructions": "ScalingInstruction"
    }
  },
  "AWS::B2BI::Capability": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-b2bi-capability.html",
    "Properties": {
      "Configuration": "CapabilityConfiguration",
      "InstructionsDocuments": "S3Location",
      "Name": "String",
      "Tags": "Tag",
      "Type": "String"
    }
  },
  "AWS::B2BI::Partnership": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-b2bi-partnership.html",
    "Properties": {
      "Capabilities": "String",
      "Email": "String",
      "Name": "String",
      "Phone": "String",
      "ProfileId": "String",
      "Tags": "Tag"
    }
  },
  "AWS::B2BI::Profile": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-b2bi-profile.html",
    "Properties": {
      "BusinessName": "String",
      "Email": "String",
      "Logging": "String",
      "Name": "String",
      "Phone": "String",
      "Tags": "Tag"
    }
  },
  "AWS::B2BI::Transformer": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-b2bi-transformer.html",
    "Properties": {
      "EdiType": "EdiType",
      "FileFormat": "String",
      "MappingTemplate": "String",
      "Name": "String",
      "SampleDocument": "String",
      "Status": "String",
      "Tags": "Tag"
    }
  },
  "AWS::BCMDataExports::Export": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bcmdataexports-export.html",
    "Properties": {
      "Export": "Export",
      "Tags": "ResourceTag"
    }
  },
  "AWS::Backup::BackupPlan": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupplan.html",
    "Properties": {
      "BackupPlan": "BackupPlanResourceType",
      "BackupPlanTags": "Map"
    }
  },
  "AWS::Backup::BackupSelection": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupselection.html",
    "Properties": {
      "BackupPlanId": "String",
      "BackupSelection": "BackupSelectionResourceType"
    }
  },
  "AWS::Backup::BackupVault": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html",
    "Properties": {
      "AccessPolicy": "Json",
      "BackupVaultName": "String",
      "BackupVaultTags": "Map",
      "EncryptionKeyArn": "String",
      "LockConfiguration": "LockConfigurationType",
      "Notifications": "NotificationObjectType"
    }
  },
  "AWS::Backup::Framework": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-framework.html",
    "Properties": {
      "FrameworkControls": "FrameworkControl",
      "FrameworkDescription": "String",
      "FrameworkName": "String",
      "FrameworkTags": "Tag"
    }
  },
  "AWS::Backup::ReportPlan": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-reportplan.html",
    "Properties": {
      "ReportDeliveryChannel": "ReportDeliveryChannel",
      "ReportPlanDescription": "String",
      "ReportPlanName": "String",
      "ReportPlanTags": "Tag",
      "ReportSetting": "ReportSetting"
    }
  },
  "AWS::Backup::RestoreTestingPlan": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-restoretestingplan.html",
    "Properties": {
      "RecoveryPointSelection": "RestoreTestingRecoveryPointSelection",
      "RestoreTestingPlanName": "String",
      "ScheduleExpression": "String",
      "ScheduleExpressionTimezone": "String",
      "ScheduleStatus": "String",
      "StartWindowHours": "Integer",
      "Tags": "Tag"
    }
  },
  "AWS::Backup::RestoreTestingSelection": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-restoretestingselection.html",
    "Properties": {
      "IamRoleArn": "String",
      "ProtectedResourceArns": "String",
      "ProtectedResourceConditions": "ProtectedResourceConditions",
      "ProtectedResourceType": "String",
      "RestoreMetadataOverrides": "Map",
      "RestoreTestingPlanName": "String",
      "RestoreTestingSelectionName": "String",
      "ValidationWindowHours": "Integer"
    }
  },
  "AWS::BackupGateway::Hypervisor": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backupgateway-hypervisor.html",
    "Properties": {
      "Host": "String",
      "KmsKeyArn": "String",
      "LogGroupArn": "String",
      "Name": "String",
      "Password": "String",
      "Tags": "Tag",
      "Username": "String"
    }
  },
  "AWS::Batch::ComputeEnvironment": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-computeenvironment.html",
    "Properties": {
      "ComputeEnvironmentName": "String",
      "ComputeResources": "ComputeResources",
      "Context": "String",
      "EksConfiguration": "EksConfiguration",
      "ReplaceComputeEnvironment": "Boolean",
      "ServiceRole": "String",
      "State": "String",
      "Tags": "Map",
      "Type": "String",
      "UnmanagedvCpus": "Integer",
      "UpdatePolicy": "UpdatePolicy"
    }
  },
  "AWS::Batch::JobDefinition": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobdefinition.html",
    "Properties": {
      "ContainerProperties": "ContainerProperties",
      "EcsProperties": "EcsProperties",
      "EksProperties": "EksProperties",
      "JobDefinitionName": "String",
      "NodeProperties": "NodeProperties",
      "Parameters": "Json",
      "PlatformCapabilities": "String",
      "PropagateTags": "Boolean",
      "RetryStrategy": "RetryStrategy",
      "SchedulingPriority": "Integer",
      "Tags": "Json",
      "Timeout": "Timeout",
      "Type": "String"
    }
  },
  "AWS::Batch::JobQueue": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobqueue.html",
    "Properties": {
      "ComputeEnvironmentOrder": "ComputeEnvironmentOrder",
      "JobQueueName": "String",
      "JobStateTimeLimitActions": "JobStateTimeLimitAction",
      "Priority": "Integer",
      "SchedulingPolicyArn": "String",
      "State": "String",
      "Tags": "Map"
    }
  },
  "AWS::Batch::SchedulingPolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-schedulingpolicy.html",
    "Properties": {
      "FairsharePolicy": "FairsharePolicy",
      "Name": "String",
      "Tags": "Map"
    }
  },
  "AWS::Bedrock::Agent": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-agent.html",
    "Properties": {
      "ActionGroups": "AgentActionGroup",
      "AgentName": "String",
      "AgentResourceRoleArn": "String",
      "AutoPrepare": "Boolean",
      "CustomerEncryptionKeyArn": "String",
      "Description": "String",
      "FoundationModel": "String",
      "GuardrailConfiguration": "GuardrailConfiguration",
      "IdleSessionTTLInSeconds": "Double",
      "Instruction": "String",
      "KnowledgeBases": "AgentKnowledgeBase",
      "PromptOverrideConfiguration": "PromptOverrideConfiguration",
      "SkipResourceInUseCheckOnDelete": "Boolean",
      "Tags": "Map",
      "TestAliasTags": "Map"
    }
  },
  "AWS::Bedrock::AgentAlias": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-agentalias.html",
    "Properties": {
      "AgentAliasName": "String",
      "AgentId": "String",
      "Description": "String",
      "RoutingConfiguration": "AgentAliasRoutingConfigurationListItem",
      "Tags": "Map"
    }
  },
  "AWS::Bedrock::DataSource": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-datasource.html",
    "Properties": {
      "DataDeletionPolicy": "String",
      "DataSourceConfiguration": "DataSourceConfiguration",
      "Description": "String",
      "KnowledgeBaseId": "String",
      "Name": "String",
      "ServerSideEncryptionConfiguration": "ServerSideEncryptionConfiguration",
      "VectorIngestionConfiguration": "VectorIngestionConfiguration"
    }
  },
  "AWS::Bedrock::Flow": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-flow.html",
    "Properties": {
      "CustomerEncryptionKeyArn": "String",
      "Definition": "FlowDefinition",
      "DefinitionS3Location": "S3Location",
      "DefinitionString": "String",
      "DefinitionSubstitutions": "Map",
      "Description": "String",
      "ExecutionRoleArn": "String",
      "Name": "String",
      "Tags": "Map",
      "TestAliasTags": "Map"
    }
  },
  "AWS::Bedrock::FlowAlias": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-flowalias.html",
    "Properties": {
      "Description": "String",
      "FlowArn": "String",
      "Name": "String",
      "RoutingConfiguration": "FlowAliasRoutingConfigurationListItem",
      "Tags": "Map"
    }
  },
  "AWS::Bedrock::FlowVersion": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-flowversion.html",
    "Properties": {
      "Description": "String",
      "FlowArn": "String"
    }
  },
  "AWS::Bedrock::Guardrail": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-guardrail.html",
    "Properties": {
      "BlockedInputMessaging": "String",
      "BlockedOutputsMessaging": "String",
      "ContentPolicyConfig": "ContentPolicyConfig",
      "ContextualGroundingPolicyConfig": "ContextualGroundingPolicyConfig",
      "Description": "String",
      "KmsKeyArn": "String",
      "Name": "String",
      "SensitiveInformationPolicyConfig": "SensitiveInformationPolicyConfig",
      "Tags": "Tag",
      "TopicPolicyConfig": "TopicPolicyConfig",
      "WordPolicyConfig": "WordPolicyConfig"
    }
  },
  "AWS::Bedrock::GuardrailVersion": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-guardrailversion.html",
    "Properties": {
      "Description": "String",
      "GuardrailIdentifier": "String"
    }
  },
  "AWS::Bedrock::KnowledgeBase": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-knowledgebase.html",
    "Properties": {
      "Description": "String",
      "KnowledgeBaseConfiguration": "KnowledgeBaseConfiguration",
      "Name": "String",
      "RoleArn": "String",
      "StorageConfiguration": "StorageConfiguration",
      "Tags": "Map"
    }
  },
  "AWS::Bedrock::Prompt": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-prompt.html",
    "Properties": {
      "CustomerEncryptionKeyArn": "String",
      "DefaultVariant": "String",
      "Description": "String",
      "Name": "String",
      "Tags": "Map",
      "Variants": "PromptVariant"
    }
  },
  "AWS::Bedrock::PromptVersion": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-promptversion.html",
    "Properties": {
      "Description": "String",
      "PromptArn": "String",
      "Tags": "Map"
    }
  },
  "AWS::BillingConductor::BillingGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-billingconductor-billinggroup.html",
    "Properties": {
      "AccountGrouping": "AccountGrouping",
      "ComputationPreference": "ComputationPreference",
      "Description": "String",
      "Name": "String",
      "PrimaryAccountId": "String",
      "Tags": "Tag"
    }
  },
  "AWS::BillingConductor::CustomLineItem": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-billingconductor-customlineitem.html",
    "Properties": {
      "AccountId": "String",
      "BillingGroupArn": "String",
      "BillingPeriodRange": "BillingPeriodRange",
      "CustomLineItemChargeDetails": "CustomLineItemChargeDetails",
      "Description": "String",
      "Name": "String",
      "Tags": "Tag"
    }
  },
  "AWS::BillingConductor::PricingPlan": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-billingconductor-pricingplan.html",
    "Properties": {
      "Description": "String",
      "Name": "String",
      "PricingRuleArns": "String",
      "Tags": "Tag"
    }
  },
  "AWS::BillingConductor::PricingRule": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-billingconductor-pricingrule.html",
    "Properties": {
      "BillingEntity": "String",
      "Description": "String",
      "ModifierPercentage": "Double",
      "Name": "String",
      "Operation": "String",
      "Scope": "String",
      "Service": "String",
      "Tags": "Tag",
      "Tiering": "Tiering",
      "Type": "String",
      "UsageType": "String"
    }
  },
  "AWS::Budgets::Budget": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-budgets-budget.html",
    "Properties": {
      "Budget": "BudgetData",
      "NotificationsWithSubscribers": "NotificationWithSubscribers",
      "ResourceTags": "ResourceTag"
    }
  },
  "AWS::Budgets::BudgetsAction": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-budgets-budgetsaction.html",
    "Properties": {
      "ActionThreshold": "ActionThreshold",
      "ActionType": "String",
      "ApprovalModel": "String",
      "BudgetName": "String",
      "Definition": "Definition",
      "ExecutionRoleArn": "String",
      "NotificationType": "String",
      "ResourceTags": "ResourceTag",
      "Subscribers": "Subscriber"
    }
  },
  "AWS::CE::AnomalyMonitor": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ce-anomalymonitor.html",
    "Properties": {
      "MonitorDimension": "String",
      "MonitorName": "String",
      "MonitorSpecification": "String",
      "MonitorType": "String",
      "ResourceTags": "ResourceTag"
    }
  },
  "AWS::CE::AnomalySubscription": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ce-anomalysubscription.html",
    "Properties": {
      "Frequency": "String",
      "MonitorArnList": "String",
      "ResourceTags": "ResourceTag",
      "Subscribers": "Subscriber",
      "SubscriptionName": "String",
      "Threshold": "Double",
      "ThresholdExpression": "String"
    }
  },
  "AWS::CE::CostCategory": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ce-costcategory.html",
    "Properties": {
      "DefaultValue": "String",
      "Name": "String",
      "RuleVersion": "String",
      "Rules": "String",
      "SplitChargeRules": "String"
    }
  },
  "AWS::CUR::ReportDefinition": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cur-reportdefinition.html",
    "Properties": {
      "AdditionalArtifacts": "String",
      "AdditionalSchemaElements": "String",
      "BillingViewArn": "String",
      "Compression": "String",
      "Format": "String",
      "RefreshClosedReports": "Boolean",
      "ReportName": "String",
      "ReportVersioning": "String",
      "S3Bucket": "String",
      "S3Prefix": "String",
      "S3Region": "String",
      "TimeUnit": "String"
    }
  },
  "AWS::Cassandra::Keyspace": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-keyspace.html",
    "Properties": {
      "KeyspaceName": "String",
      "ReplicationSpecification": "ReplicationSpecification",
      "Tags": "Tag"
    }
  },
  "AWS::Cassandra::Table": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html",
    "Properties": {
      "AutoScalingSpecifications": "AutoScalingSpecification",
      "BillingMode": "BillingMode",
      "ClientSideTimestampsEnabled": "Boolean",
      "ClusteringKeyColumns": "ClusteringKeyColumn",
      "DefaultTimeToLive": "Integer",
      "EncryptionSpecification": "EncryptionSpecification",
      "KeyspaceName": "String",
      "PartitionKeyColumns": "Column",
      "PointInTimeRecoveryEnabled": "Boolean",
      "RegularColumns": "Column",
      "ReplicaSpecifications": "ReplicaSpecification",
      "TableName": "String",
      "Tags": "Tag"
    }
  },
  "AWS::CertificateManager::Account": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-account.html",
    "Properties": {
      "ExpiryEventsConfiguration": "ExpiryEventsConfiguration"
    }
  },
  "AWS::CertificateManager::Certificate": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html",
    "Properties": {
      "CertificateAuthorityArn": "String",
      "CertificateTransparencyLoggingPreference": "String",
      "DomainName": "String",
      "DomainValidationOptions": "DomainValidationOption",
      "KeyAlgorithm": "String",
      "SubjectAlternativeNames": "String",
      "Tags": "Tag",
      "ValidationMethod": "String"
    }
  },
  "AWS::Chatbot::MicrosoftTeamsChannelConfiguration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-microsoftteamschannelconfiguration.html",
    "Properties": {
      "ConfigurationName": "String",
      "GuardrailPolicies": "String",
      "IamRoleArn": "String",
      "LoggingLevel": "String",
      "SnsTopicArns": "String",
      "Tags": "Tag",
      "TeamId": "String",
      "TeamsChannelId": "String",
      "TeamsTenantId": "String",
      "UserRoleRequired": "Boolean"
    }
  },
  "AWS::Chatbot::SlackChannelConfiguration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html",
    "Properties": {
      "ConfigurationName": "String",
      "GuardrailPolicies": "String",
      "IamRoleArn": "String",
      "LoggingLevel": "String",
      "SlackChannelId": "String",
      "SlackWorkspaceId": "String",
      "SnsTopicArns": "String",
      "Tags": "Tag",
      "UserRoleRequired": "Boolean"
    }
  },
  "AWS::CleanRooms::AnalysisTemplate": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-analysistemplate.html",
    "Properties": {
      "AnalysisParameters": "AnalysisParameter",
      "Description": "String",
      "Format": "String",
      "MembershipIdentifier": "String",
      "Name": "String",
      "Source": "AnalysisSource",
      "Tags": "Tag"
    }
  },
  "AWS::CleanRooms::Collaboration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-collaboration.html",
    "Properties": {
      "CreatorDisplayName": "String",
      "CreatorMemberAbilities": "String",
      "CreatorPaymentConfiguration": "PaymentConfiguration",
      "DataEncryptionMetadata": "DataEncryptionMetadata",
      "Description": "String",
      "Members": "MemberSpecification",
      "Name": "String",
      "QueryLogStatus": "String",
      "Tags": "Tag"
    }
  },
  "AWS::CleanRooms::ConfiguredTable": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-configuredtable.html",
    "Properties": {
      "AllowedColumns": "String",
      "AnalysisMethod": "String",
      "AnalysisRules": "AnalysisRule",
      "Description": "String",
      "Name": "String",
      "TableReference": "TableReference",
      "Tags": "Tag"
    }
  },
  "AWS::CleanRooms::ConfiguredTableAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-configuredtableassociation.html",
    "Properties": {
      "ConfiguredTableAssociationAnalysisRules": "ConfiguredTableAssociationAnalysisRule",
      "ConfiguredTableIdentifier": "String",
      "Description": "String",
      "MembershipIdentifier": "String",
      "Name": "String",
      "RoleArn": "String",
      "Tags": "Tag"
    }
  },
  "AWS::CleanRooms::IdMappingTable": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-idmappingtable.html",
    "Properties": {
      "Description": "String",
      "InputReferenceConfig": "IdMappingTableInputReferenceConfig",
      "KmsKeyArn": "String",
      "MembershipIdentifier": "String",
      "Name": "String",
      "Tags": "Tag"
    }
  },
  "AWS::CleanRooms::IdNamespaceAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-idnamespaceassociation.html",
    "Properties": {
      "Description": "String",
      "IdMappingConfig": "IdMappingConfig",
      "InputReferenceConfig": "IdNamespaceAssociationInputReferenceConfig",
      "MembershipIdentifier": "String",
      "Name": "String",
      "Tags": "Tag"
    }
  },
  "AWS::CleanRooms::Membership": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-membership.html",
    "Properties": {
      "CollaborationIdentifier": "String",
      "DefaultResultConfiguration": "MembershipProtectedQueryResultConfiguration",
      "PaymentConfiguration": "MembershipPaymentConfiguration",
      "QueryLogStatus": "String",
      "Tags": "Tag"
    }
  },
  "AWS::CleanRooms::PrivacyBudgetTemplate": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-privacybudgettemplate.html",
    "Properties": {
      "AutoRefresh": "String",
      "MembershipIdentifier": "String",
      "Parameters": "Parameters",
      "PrivacyBudgetType": "String",
      "Tags": "Tag"
    }
  },
  "AWS::CleanRoomsML::TrainingDataset": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanroomsml-trainingdataset.html",
    "Properties": {
      "Description": "String",
      "Name": "String",
      "RoleArn": "String",
      "Tags": "Tag",
      "TrainingData": "Dataset"
    }
  },
  "AWS::Cloud9::EnvironmentEC2": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloud9-environmentec2.html",
    "Properties": {
      "AutomaticStopTimeMinutes": "Integer",
      "ConnectionType": "String",
      "Description": "String",
      "ImageId": "String",
      "InstanceType": "String",
      "Name": "String",
      "OwnerArn": "String",
      "Repositories": "Repository",
      "SubnetId": "String",
      "Tags": "Tag"
    }
  },
  "AWS::CloudFormation::CustomResource": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cfn-customresource.html",
    "Properties": {
      "ServiceToken": "String"
    }
  },
  "AWS::CloudFormation::HookDefaultVersion": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hookdefaultversion.html",
    "Properties": {
      "TypeName": "String",
      "TypeVersionArn": "String",
      "VersionId": "String"
    }
  },
  "AWS::CloudFormation::HookTypeConfig": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hooktypeconfig.html",
    "Properties": {
      "Configuration": "String",
      "ConfigurationAlias": "String",
      "TypeArn": "String",
      "TypeName": "String"
    }
  },
  "AWS::CloudFormation::HookVersion": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hookversion.html",
    "Properties": {
      "ExecutionRoleArn": "String",
      "LoggingConfig": "LoggingConfig",
      "SchemaHandlerPackage": "String",
      "TypeName": "String"
    }
  },
  "AWS::CloudFormation::Macro": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-macro.html",
    "Properties": {
      "Description": "String",
      "FunctionName": "String",
      "LogGroupName": "String",
      "LogRoleARN": "String",
      "Name": "String"
    }
  },
  "AWS::CloudFormation::ModuleDefaultVersion": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-moduledefaultversion.html",
    "Properties": {
      "Arn": "String",
      "ModuleName": "String",
      "VersionId": "String"
    }
  },
  "AWS::CloudFormation::ModuleVersion": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-moduleversion.html",
    "Properties": {
      "ModuleName": "String",
      "ModulePackage": "String"
    }
  },
  "AWS::CloudFormation::PublicTypeVersion": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-publictypeversion.html",
    "Properties": {
      "Arn": "String",
      "LogDeliveryBucket": "String",
      "PublicVersionNumber": "String",
      "Type": "String",
      "TypeName": "String"
    }
  },
  "AWS::CloudFormation::Publisher": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-publisher.html",
    "Properties": {
      "AcceptTermsAndConditions": "Boolean",
      "ConnectionArn": "String"
    }
  },
  "AWS::CloudFormation::ResourceDefaultVersion": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-resourcedefaultversion.html",
    "Properties": {
      "TypeName": "String",
      "TypeVersionArn": "String",
      "VersionId": "String"
    }
  },
  "AWS::CloudFormation::ResourceVersion": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-resourceversion.html",
    "Properties": {
      "ExecutionRoleArn": "String",
      "LoggingConfig": "LoggingConfig",
      "SchemaHandlerPackage": "String",
      "TypeName": "String"
    }
  },
  "AWS::CloudFormation::Stack": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html",
    "Properties": {
      "NotificationARNs": "String",
      "Parameters": "Map",
      "Tags": "Tag",
      "TemplateURL": "String",
      "TimeoutInMinutes": "Integer"
    }
  },
  "AWS::CloudFormation::StackSet": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html",
    "Properties": {
      "AdministrationRoleARN": "String",
      "AutoDeployment": "AutoDeployment",
      "CallAs": "String",
      "Capabilities": "String",
      "Description": "String",
      "ExecutionRoleName": "String",
      "ManagedExecution": "ManagedExecution",
      "OperationPreferences": "OperationPreferences",
      "Parameters": "Parameter",
      "PermissionModel": "String",
      "StackInstancesGroup": "StackInstances",
      "StackSetName": "String",
      "Tags": "Tag",
      "TemplateBody": "String",
      "TemplateURL": "String"
    }
  },
  "AWS::CloudFormation::TypeActivation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html",
    "Properties": {
      "AutoUpdate": "Boolean",
      "ExecutionRoleArn": "String",
      "LoggingConfig": "LoggingConfig",
      "MajorVersion": "String",
      "PublicTypeArn": "String",
      "PublisherId": "String",
      "Type": "String",
      "TypeName": "String",
      "TypeNameAlias": "String",
      "VersionBump": "String"
    }
  },
  "AWS::CloudFormation::WaitCondition": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waitcondition.html",
    "Properties": {
      "Count": "Integer",
      "Handle": "String",
      "Timeout": "String"
    }
  },
  "AWS::CloudFormation::WaitConditionHandle": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waitconditionhandle.html",
    "Properties": {}
  },
  "AWS::CloudFront::CachePolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-cachepolicy.html",
    "Properties": {
      "CachePolicyConfig": "CachePolicyConfig"
    }
  },
  "AWS::CloudFront::CloudFrontOriginAccessIdentity": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-cloudfrontoriginaccessidentity.html",
    "Properties": {
      "CloudFrontOriginAccessIdentityConfig": "CloudFrontOriginAccessIdentityConfig"
    }
  },
  "AWS::CloudFront::ContinuousDeploymentPolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-continuousdeploymentpolicy.html",
    "Properties": {
      "ContinuousDeploymentPolicyConfig": "ContinuousDeploymentPolicyConfig"
    }
  },
  "AWS::CloudFront::Distribution": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-distribution.html",
    "Properties": {
      "DistributionConfig": "DistributionConfig",
      "Tags": "Tag"
    }
  },
  "AWS::CloudFront::Function": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-function.html",
    "Properties": {
      "AutoPublish": "Boolean",
      "FunctionCode": "String",
      "FunctionConfig": "FunctionConfig",
      "FunctionMetadata": "FunctionMetadata",
      "Name": "String"
    }
  },
  "AWS::CloudFront::KeyGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-keygroup.html",
    "Properties": {
      "KeyGroupConfig": "KeyGroupConfig"
    }
  },
  "AWS::CloudFront::KeyValueStore": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-keyvaluestore.html",
    "Properties": {
      "Comment": "String",
      "ImportSource": "ImportSource",
      "Name": "String"
    }
  },
  "AWS::CloudFront::MonitoringSubscription": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-monitoringsubscription.html",
    "Properties": {
      "DistributionId": "String",
      "MonitoringSubscription": "MonitoringSubscription"
    }
  },
  "AWS::CloudFront::OriginAccessControl": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-originaccesscontrol.html",
    "Properties": {
      "OriginAccessControlConfig": "OriginAccessControlConfig"
    }
  },
  "AWS::CloudFront::OriginRequestPolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-originrequestpolicy.html",
    "Properties": {
      "OriginRequestPolicyConfig": "OriginRequestPolicyConfig"
    }
  },
  "AWS::CloudFront::PublicKey": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-publickey.html",
    "Properties": {
      "PublicKeyConfig": "PublicKeyConfig"
    }
  },
  "AWS::CloudFront::RealtimeLogConfig": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-realtimelogconfig.html",
    "Properties": {
      "EndPoints": "EndPoint",
      "Fields": "String",
      "Name": "String",
      "SamplingRate": "Double"
    }
  },
  "AWS::CloudFront::ResponseHeadersPolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-responseheaderspolicy.html",
    "Properties": {
      "ResponseHeadersPolicyConfig": "ResponseHeadersPolicyConfig"
    }
  },
  "AWS::CloudFront::StreamingDistribution": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-streamingdistribution.html",
    "Properties": {
      "StreamingDistributionConfig": "StreamingDistributionConfig",
      "Tags": "Tag"
    }
  },
  "AWS::CloudTrail::Channel": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-channel.html",
    "Properties": {
      "Destinations": "Destination",
      "Name": "String",
      "Source": "String",
      "Tags": "Tag"
    }
  },
  "AWS::CloudTrail::EventDataStore": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-eventdatastore.html",
    "Properties": {
      "AdvancedEventSelectors": "AdvancedEventSelector",
      "BillingMode": "String",
      "FederationEnabled": "Boolean",
      "FederationRoleArn": "String",
      "IngestionEnabled": "Boolean",
      "InsightSelectors": "InsightSelector",
      "InsightsDestination": "String",
      "KmsKeyId": "String",
      "MultiRegionEnabled": "Boolean",
      "Name": "String",
      "OrganizationEnabled": "Boolean",
      "RetentionPeriod": "Integer",
      "Tags": "Tag",
      "TerminationProtectionEnabled": "Boolean"
    }
  },
  "AWS::CloudTrail::ResourcePolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-resourcepolicy.html",
    "Properties": {
      "ResourceArn": "String",
      "ResourcePolicy": "Json"
    }
  },
  "AWS::CloudTrail::Trail": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-trail.html",
    "Properties": {
      "AdvancedEventSelectors": "AdvancedEventSelector",
      "CloudWatchLogsLogGroupArn": "String",
      "CloudWatchLogsRoleArn": "String",
      "EnableLogFileValidation": "Boolean",
      "EventSelectors": "EventSelector",
      "IncludeGlobalServiceEvents": "Boolean",
      "InsightSelectors": "InsightSelector",
      "IsLogging": "Boolean",
      "IsMultiRegionTrail": "Boolean",
      "IsOrganizationTrail": "Boolean",
      "KMSKeyId": "String",
      "S3BucketName": "String",
      "S3KeyPrefix": "String",
      "SnsTopicName": "String",
      "Tags": "Tag",
      "TrailName": "String"
    }
  },
  "AWS::CloudWatch::Alarm": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-alarm.html",
    "Properties": {
      "ActionsEnabled": "Boolean",
      "AlarmActions": "String",
      "AlarmDescription": "String",
      "AlarmName": "String",
      "ComparisonOperator": "String",
      "DatapointsToAlarm": "Integer",
      "Dimensions": "Dimension",
      "EvaluateLowSampleCountPercentile": "String",
      "EvaluationPeriods": "Integer",
      "ExtendedStatistic": "String",
      "InsufficientDataActions": "String",
      "MetricName": "String",
      "Metrics": "MetricDataQuery",
      "Namespace": "String",
      "OKActions": "String",
      "Period": "Integer",
      "Statistic": "String",
      "Tags": "Tag",
      "Threshold": "Double",
      "ThresholdMetricId": "String",
      "TreatMissingData": "String",
      "Unit": "String"
    }
  },
  "AWS::CloudWatch::AnomalyDetector": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-anomalydetector.html",
    "Properties": {
      "Configuration": "Configuration",
      "Dimensions": "Dimension",
      "MetricCharacteristics": "MetricCharacteristics",
      "MetricMathAnomalyDetector": "MetricMathAnomalyDetector",
      "MetricName": "String",
      "Namespace": "String",
      "SingleMetricAnomalyDetector": "SingleMetricAnomalyDetector",
      "Stat": "String"
    }
  },
  "AWS::CloudWatch::CompositeAlarm": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html",
    "Properties": {
      "ActionsEnabled": "Boolean",
      "ActionsSuppressor": "String",
      "ActionsSuppressorExtensionPeriod": "Integer",
      "ActionsSuppressorWaitPeriod": "Integer",
      "AlarmActions": "String",
      "AlarmDescription": "String",
      "AlarmName": "String",
      "AlarmRule": "String",
      "InsufficientDataActions": "String",
      "OKActions": "String",
      "Tags": "Tag"
    }
  },
  "AWS::CloudWatch::Dashboard": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-dashboard.html",
    "Properties": {
      "DashboardBody": "String",
      "DashboardName": "String"
    }
  },
  "AWS::CloudWatch::InsightRule": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-insightrule.html",
    "Properties": {
      "RuleBody": "String",
      "RuleName": "String",
      "RuleState": "String",
      "Tags": "Tags"
    }
  },
  "AWS::CloudWatch::MetricStream": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-metricstream.html",
    "Properties": {
      "ExcludeFilters": "MetricStreamFilter",
      "FirehoseArn": "String",
      "IncludeFilters": "MetricStreamFilter",
      "IncludeLinkedAccountsMetrics": "Boolean",
      "Name": "String",
      "OutputFormat": "String",
      "RoleArn": "String",
      "StatisticsConfigurations": "MetricStreamStatisticsConfiguration",
      "Tags": "Tag"
    }
  },
  "AWS::CodeArtifact::Domain": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeartifact-domain.html",
    "Properties": {
      "DomainName": "String",
      "EncryptionKey": "String",
      "PermissionsPolicyDocument": "Json",
      "Tags": "Tag"
    }
  },
  "AWS::CodeArtifact::PackageGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeartifact-packagegroup.html",
    "Properties": {
      "ContactInfo": "String",
      "Description": "String",
      "DomainName": "String",
      "DomainOwner": "String",
      "OriginConfiguration": "OriginConfiguration",
      "Pattern": "String",
      "Tags": "Tag"
    }
  },
  "AWS::CodeArtifact::Repository": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeartifact-repository.html",
    "Properties": {
      "Description": "String",
      "DomainName": "String",
      "DomainOwner": "String",
      "ExternalConnections": "String",
      "PermissionsPolicyDocument": "Json",
      "RepositoryName": "String",
      "Tags": "Tag",
      "Upstreams": "String"
    }
  },
  "AWS::CodeBuild::Fleet": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-fleet.html",
    "Properties": {
      "BaseCapacity": "Integer",
      "ComputeType": "String",
      "EnvironmentType": "String",
      "FleetServiceRole": "String",
      "FleetVpcConfig": "VpcConfig",
      "ImageId": "String",
      "Name": "String",
      "OverflowBehavior": "String",
      "Tags": "Tag"
    }
  },
  "AWS::CodeBuild::Project": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html",
    "Properties": {
      "Artifacts": "Artifacts",
      "BadgeEnabled": "Boolean",
      "BuildBatchConfig": "ProjectBuildBatchConfig",
      "Cache": "ProjectCache",
      "ConcurrentBuildLimit": "Integer",
      "Description": "String",
      "EncryptionKey": "String",
      "Environment": "Environment",
      "FileSystemLocations": "ProjectFileSystemLocation",
      "LogsConfig": "LogsConfig",
      "Name": "String",
      "QueuedTimeoutInMinutes": "Integer",
      "ResourceAccessRole": "String",
      "SecondaryArtifacts": "Artifacts",
      "SecondarySourceVersions": "ProjectSourceVersion",
      "SecondarySources": "Source",
      "ServiceRole": "String",
      "Source": "Source",
      "SourceVersion": "String",
      "Tags": "Tag",
      "TimeoutInMinutes": "Integer",
      "Triggers": "ProjectTriggers",
      "Visibility": "String",
      "VpcConfig": "VpcConfig"
    }
  },
  "AWS::CodeBuild::ReportGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-reportgroup.html",
    "Properties": {
      "DeleteReports": "Boolean",
      "ExportConfig": "ReportExportConfig",
      "Name": "String",
      "Tags": "Tag",
      "Type": "String"
    }
  },
  "AWS::CodeBuild::SourceCredential": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-sourcecredential.html",
    "Properties": {
      "AuthType": "String",
      "ServerType": "String",
      "Token": "String",
      "Username": "String"
    }
  },
  "AWS::CodeCommit::Repository": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html",
    "Properties": {
      "Code": "Code",
      "KmsKeyId": "String",
      "RepositoryDescription": "String",
      "RepositoryName": "String",
      "Tags": "Tag",
      "Triggers": "RepositoryTrigger"
    }
  },
  "AWS::CodeConnections::Connection": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeconnections-connection.html",
    "Properties": {
      "ConnectionName": "String",
      "HostArn": "String",
      "ProviderType": "String",
      "Tags": "Tag"
    }
  },
  "AWS::CodeDeploy::Application": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-application.html",
    "Properties": {
      "ApplicationName": "String",
      "ComputePlatform": "String",
      "Tags": "Tag"
    }
  },
  "AWS::CodeDeploy::DeploymentConfig": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentconfig.html",
    "Properties": {
      "ComputePlatform": "String",
      "DeploymentConfigName": "String",
      "MinimumHealthyHosts": "MinimumHealthyHosts",
      "TrafficRoutingConfig": "TrafficRoutingConfig",
      "ZonalConfig": "ZonalConfig"
    }
  },
  "AWS::CodeDeploy::DeploymentGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html",
    "Properties": {
      "AlarmConfiguration": "AlarmConfiguration",
      "ApplicationName": "String",
      "AutoRollbackConfiguration": "AutoRollbackConfiguration",
      "AutoScalingGroups": "String",
      "BlueGreenDeploymentConfiguration": "BlueGreenDeploymentConfiguration",
      "Deployment": "Deployment",
      "DeploymentConfigName": "String",
      "DeploymentGroupName": "String",
      "DeploymentStyle": "DeploymentStyle",
      "ECSServices": "ECSService",
      "Ec2TagFilters": "EC2TagFilter",
      "Ec2TagSet": "EC2TagSet",
      "LoadBalancerInfo": "LoadBalancerInfo",
      "OnPremisesInstanceTagFilters": "TagFilter",
      "OnPremisesTagSet": "OnPremisesTagSet",
      "OutdatedInstancesStrategy": "String",
      "ServiceRoleArn": "String",
      "Tags": "Tag",
      "TerminationHookEnabled": "Boolean",
      "TriggerConfigurations": "TriggerConfig"
    }
  },
  "AWS::CodeGuruProfiler::ProfilingGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeguruprofiler-profilinggroup.html",
    "Properties": {
      "AgentPermissions": "AgentPermissions",
      "AnomalyDetectionNotificationConfiguration": "Channel",
      "ComputePlatform": "String",
      "ProfilingGroupName": "String",
      "Tags": "Tag"
    }
  },
  "AWS::CodeGuruReviewer::RepositoryAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codegurureviewer-repositoryassociation.html",
    "Properties": {
      "BucketName": "String",
      "ConnectionArn": "String",
      "Name": "String",
      "Owner": "String",
      "Tags": "Tag",
      "Type": "String"
    }
  },
  "AWS::CodePipeline::CustomActionType": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype.html",
    "Properties": {
      "Category": "String",
      "ConfigurationProperties": "ConfigurationProperties",
      "InputArtifactDetails": "ArtifactDetails",
      "OutputArtifactDetails": "ArtifactDetails",
      "Provider": "String",
      "Settings": "Settings",
      "Tags": "Tag",
      "Version": "String"
    }
  },
  "AWS::CodePipeline::Pipeline": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-pipeline.html",
    "Properties": {
      "ArtifactStore": "ArtifactStore",
      "ArtifactStores": "ArtifactStoreMap",
      "DisableInboundStageTransitions": "StageTransition",
      "ExecutionMode": "String",
      "Name": "String",
      "PipelineType": "String",
      "RestartExecutionOnUpdate": "Boolean",
      "RoleArn": "String",
      "Stages": "StageDeclaration",
      "Tags": "Tag",
      "Triggers": "PipelineTriggerDeclaration",
      "Variables": "VariableDeclaration"
    }
  },
  "AWS::CodePipeline::Webhook": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-webhook.html",
    "Properties": {
      "Authentication": "String",
      "AuthenticationConfiguration": "WebhookAuthConfiguration",
      "Filters": "WebhookFilterRule",
      "Name": "String",
      "RegisterWithThirdParty": "Boolean",
      "TargetAction": "String",
      "TargetPipeline": "String",
      "TargetPipelineVersion": "Integer"
    }
  },
  "AWS::CodeStar::GitHubRepository": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html",
    "Properties": {
      "Code": "Code",
      "ConnectionArn": "String",
      "EnableIssues": "Boolean",
      "IsPrivate": "Boolean",
      "RepositoryAccessToken": "String",
      "RepositoryDescription": "String",
      "RepositoryName": "String",
      "RepositoryOwner": "String"
    }
  },
  "AWS::CodeStarConnections::Connection": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarconnections-connection.html",
    "Properties": {
      "ConnectionName": "String",
      "HostArn": "String",
      "ProviderType": "String",
      "Tags": "Tag"
    }
  },
  "AWS::CodeStarConnections::RepositoryLink": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarconnections-repositorylink.html",
    "Properties": {
      "ConnectionArn": "String",
      "EncryptionKeyArn": "String",
      "OwnerId": "String",
      "RepositoryName": "String",
      "Tags": "Tag"
    }
  },
  "AWS::CodeStarConnections::SyncConfiguration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarconnections-syncconfiguration.html",
    "Properties": {
      "Branch": "String",
      "ConfigFile": "String",
      "PublishDeploymentStatus": "String",
      "RepositoryLinkId": "String",
      "ResourceName": "String",
      "RoleArn": "String",
      "SyncType": "String",
      "TriggerResourceUpdateOn": "String"
    }
  },
  "AWS::CodeStarNotifications::NotificationRule": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarnotifications-notificationrule.html",
    "Properties": {
      "CreatedBy": "String",
      "DetailType": "String",
      "EventTypeId": "String",
      "EventTypeIds": "String",
      "Name": "String",
      "Resource": "String",
      "Status": "String",
      "Tags": "Map",
      "TargetAddress": "String",
      "Targets": "Target"
    }
  },
  "AWS::Cognito::IdentityPool": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html",
    "Properties": {
      "AllowClassicFlow": "Boolean",
      "AllowUnauthenticatedIdentities": "Boolean",
      "CognitoEvents": "Json",
      "CognitoIdentityProviders": "CognitoIdentityProvider",
      "CognitoStreams": "CognitoStreams",
      "DeveloperProviderName": "String",
      "IdentityPoolName": "String",
      "IdentityPoolTags": "Tag",
      "OpenIdConnectProviderARNs": "String",
      "PushSync": "PushSync",
      "SamlProviderARNs": "String",
      "SupportedLoginProviders": "Json"
    }
  },
  "AWS::Cognito::IdentityPoolPrincipalTag": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypoolprincipaltag.html",
    "Properties": {
      "IdentityPoolId": "String",
      "IdentityProviderName": "String",
      "PrincipalTags": "Json",
      "UseDefaults": "Boolean"
    }
  },
  "AWS::Cognito::IdentityPoolRoleAttachment": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypoolroleattachment.html",
    "Properties": {
      "IdentityPoolId": "String",
      "RoleMappings": "Map",
      "Roles": "Map"
    }
  },
  "AWS::Cognito::LogDeliveryConfiguration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-logdeliveryconfiguration.html",
    "Properties": {
      "LogConfigurations": "LogConfiguration",
      "UserPoolId": "String"
    }
  },
  "AWS::Cognito::UserPool": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html",
    "Properties": {
      "AccountRecoverySetting": "AccountRecoverySetting",
      "AdminCreateUserConfig": "AdminCreateUserConfig",
      "AliasAttributes": "String",
      "AutoVerifiedAttributes": "String",
      "DeletionProtection": "String",
      "DeviceConfiguration": "DeviceConfiguration",
      "EmailConfiguration": "EmailConfiguration",
      "EmailVerificationMessage": "String",
      "EmailVerificationSubject": "String",
      "EnabledMfas": "String",
      "LambdaConfig": "LambdaConfig",
      "MfaConfiguration": "String",
      "Policies": "Policies",
      "Schema": "SchemaAttribute",
      "SmsAuthenticationMessage": "String",
      "SmsConfiguration": "SmsConfiguration",
      "SmsVerificationMessage": "String",
      "UserAttributeUpdateSettings": "UserAttributeUpdateSettings",
      "UserPoolAddOns": "UserPoolAddOns",
      "UserPoolName": "String",
      "UserPoolTags": "Map",
      "UsernameAttributes": "String",
      "UsernameConfiguration": "UsernameConfiguration",
      "VerificationMessageTemplate": "VerificationMessageTemplate"
    }
  },
  "AWS::Cognito::UserPoolClient": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html",
    "Properties": {
      "AccessTokenValidity": "Integer",
      "AllowedOAuthFlows": "String",
      "AllowedOAuthFlowsUserPoolClient": "Boolean",
      "AllowedOAuthScopes": "String",
      "AnalyticsConfiguration": "AnalyticsConfiguration",
      "AuthSessionValidity": "Integer",
      "CallbackURLs": "String",
      "ClientName": "String",
      "DefaultRedirectURI": "String",
      "EnablePropagateAdditionalUserContextData": "Boolean",
      "EnableTokenRevocation": "Boolean",
      "ExplicitAuthFlows": "String",
      "GenerateSecret": "Boolean",
      "IdTokenValidity": "Integer",
      "LogoutURLs": "String",
      "PreventUserExistenceErrors": "String",
      "ReadAttributes": "String",
      "RefreshTokenValidity": "Integer",
      "SupportedIdentityProviders": "String",
      "TokenValidityUnits": "TokenValidityUnits",
      "UserPoolId": "String",
      "WriteAttributes": "String"
    }
  },
  "AWS::Cognito::UserPoolDomain": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooldomain.html",
    "Properties": {
      "CustomDomainConfig": "CustomDomainConfigType",
      "Domain": "String",
      "UserPoolId": "String"
    }
  },
  "AWS::Cognito::UserPoolGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolgroup.html",
    "Properties": {
      "Description": "String",
      "GroupName": "String",
      "Precedence": "Integer",
      "RoleArn": "String",
      "UserPoolId": "String"
    }
  },
  "AWS::Cognito::UserPoolIdentityProvider": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolidentityprovider.html",
    "Properties": {
      "AttributeMapping": "Json",
      "IdpIdentifiers": "String",
      "ProviderDetails": "Json",
      "ProviderName": "String",
      "ProviderType": "String",
      "UserPoolId": "String"
    }
  },
  "AWS::Cognito::UserPoolResourceServer": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolresourceserver.html",
    "Properties": {
      "Identifier": "String",
      "Name": "String",
      "Scopes": "ResourceServerScopeType",
      "UserPoolId": "String"
    }
  },
  "AWS::Cognito::UserPoolRiskConfigurationAttachment": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolriskconfigurationattachment.html",
    "Properties": {
      "AccountTakeoverRiskConfiguration": "AccountTakeoverRiskConfigurationType",
      "ClientId": "String",
      "CompromisedCredentialsRiskConfiguration": "CompromisedCredentialsRiskConfigurationType",
      "RiskExceptionConfiguration": "RiskExceptionConfigurationType",
      "UserPoolId": "String"
    }
  },
  "AWS::Cognito::UserPoolUICustomizationAttachment": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluicustomizationattachment.html",
    "Properties": {
      "CSS": "String",
      "ClientId": "String",
      "UserPoolId": "String"
    }
  },
  "AWS::Cognito::UserPoolUser": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluser.html",
    "Properties": {
      "ClientMetadata": "Map",
      "DesiredDeliveryMediums": "String",
      "ForceAliasCreation": "Boolean",
      "MessageAction": "String",
      "UserAttributes": "AttributeType",
      "UserPoolId": "String",
      "Username": "String",
      "ValidationData": "AttributeType"
    }
  },
  "AWS::Cognito::UserPoolUserToGroupAttachment": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolusertogroupattachment.html",
    "Properties": {
      "GroupName": "String",
      "UserPoolId": "String",
      "Username": "String"
    }
  },
  "AWS::Comprehend::DocumentClassifier": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-comprehend-documentclassifier.html",
    "Properties": {
      "DataAccessRoleArn": "String",
      "DocumentClassifierName": "String",
      "InputDataConfig": "DocumentClassifierInputDataConfig",
      "LanguageCode": "String",
      "Mode": "String",
      "ModelKmsKeyId": "String",
      "ModelPolicy": "String",
      "OutputDataConfig": "DocumentClassifierOutputDataConfig",
      "Tags": "Tag",
      "VersionName": "String",
      "VolumeKmsKeyId": "String",
      "VpcConfig": "VpcConfig"
    }
  },
  "AWS::Comprehend::Flywheel": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-comprehend-flywheel.html",
    "Properties": {
      "ActiveModelArn": "String",
      "DataAccessRoleArn": "String",
      "DataLakeS3Uri": "String",
      "DataSecurityConfig": "DataSecurityConfig",
      "FlywheelName": "String",
      "ModelType": "String",
      "Tags": "Tag",
      "TaskConfig": "TaskConfig"
    }
  },
  "AWS::Config::AggregationAuthorization": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-aggregationauthorization.html",
    "Properties": {
      "AuthorizedAccountId": "String",
      "AuthorizedAwsRegion": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Config::ConfigRule": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configrule.html",
    "Properties": {
      "Compliance": "Compliance",
      "ConfigRuleName": "String",
      "Description": "String",
      "EvaluationModes": "EvaluationModeConfiguration",
      "InputParameters": "Json",
      "MaximumExecutionFrequency": "String",
      "Scope": "Scope",
      "Source": "Source"
    }
  },
  "AWS::Config::ConfigurationAggregator": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationaggregator.html",
    "Properties": {
      "AccountAggregationSources": "AccountAggregationSource",
      "ConfigurationAggregatorName": "String",
      "OrganizationAggregationSource": "OrganizationAggregationSource",
      "Tags": "Tag"
    }
  },
  "AWS::Config::ConfigurationRecorder": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationrecorder.html",
    "Properties": {
      "Name": "String",
      "RecordingGroup": "RecordingGroup",
      "RecordingMode": "RecordingMode",
      "RoleARN": "String"
    }
  },
  "AWS::Config::ConformancePack": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-conformancepack.html",
    "Properties": {
      "ConformancePackInputParameters": "ConformancePackInputParameter",
      "ConformancePackName": "String",
      "DeliveryS3Bucket": "String",
      "DeliveryS3KeyPrefix": "String",
      "TemplateBody": "String",
      "TemplateS3Uri": "String",
      "TemplateSSMDocumentDetails": "TemplateSSMDocumentDetails"
    }
  },
  "AWS::Config::DeliveryChannel": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-deliverychannel.html",
    "Properties": {
      "ConfigSnapshotDeliveryProperties": "ConfigSnapshotDeliveryProperties",
      "Name": "String",
      "S3BucketName": "String",
      "S3KeyPrefix": "String",
      "S3KmsKeyArn": "String",
      "SnsTopicARN": "String"
    }
  },
  "AWS::Config::OrganizationConfigRule": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconfigrule.html",
    "Properties": {
      "ExcludedAccounts": "String",
      "OrganizationConfigRuleName": "String",
      "OrganizationCustomPolicyRuleMetadata": "OrganizationCustomPolicyRuleMetadata",
      "OrganizationCustomRuleMetadata": "OrganizationCustomRuleMetadata",
      "OrganizationManagedRuleMetadata": "OrganizationManagedRuleMetadata"
    }
  },
  "AWS::Config::OrganizationConformancePack": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconformancepack.html",
    "Properties": {
      "ConformancePackInputParameters": "ConformancePackInputParameter",
      "DeliveryS3Bucket": "String",
      "DeliveryS3KeyPrefix": "String",
      "ExcludedAccounts": "String",
      "OrganizationConformancePackName": "String",
      "TemplateBody": "String",
      "TemplateS3Uri": "String"
    }
  },
  "AWS::Config::RemediationConfiguration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html",
    "Properties": {
      "Automatic": "Boolean",
      "ConfigRuleName": "String",
      "ExecutionControls": "ExecutionControls",
      "MaximumAutomaticAttempts": "Integer",
      "Parameters": "Json",
      "ResourceType": "String",
      "RetryAttemptSeconds": "Integer",
      "TargetId": "String",
      "TargetType": "String",
      "TargetVersion": "String"
    }
  },
  "AWS::Config::StoredQuery": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-storedquery.html",
    "Properties": {
      "QueryDescription": "String",
      "QueryExpression": "String",
      "QueryName": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Connect::AgentStatus": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-agentstatus.html",
    "Properties": {
      "Description": "String",
      "DisplayOrder": "Integer",
      "InstanceArn": "String",
      "Name": "String",
      "ResetOrderNumber": "Boolean",
      "State": "String",
      "Tags": "Tag",
      "Type": "String"
    }
  },
  "AWS::Connect::ApprovedOrigin": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-approvedorigin.html",
    "Properties": {
      "InstanceId": "String",
      "Origin": "String"
    }
  },
  "AWS::Connect::ContactFlow": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflow.html",
    "Properties": {
      "Content": "String",
      "Description": "String",
      "InstanceArn": "String",
      "Name": "String",
      "State": "String",
      "Tags": "Tag",
      "Type": "String"
    }
  },
  "AWS::Connect::ContactFlowModule": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflowmodule.html",
    "Properties": {
      "Content": "String",
      "Description": "String",
      "InstanceArn": "String",
      "Name": "String",
      "State": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Connect::EvaluationForm": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-evaluationform.html",
    "Properties": {
      "Description": "String",
      "InstanceArn": "String",
      "Items": "EvaluationFormBaseItem",
      "ScoringStrategy": "ScoringStrategy",
      "Status": "String",
      "Tags": "Tag",
      "Title": "String"
    }
  },
  "AWS::Connect::HoursOfOperation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-hoursofoperation.html",
    "Properties": {
      "Config": "HoursOfOperationConfig",
      "Description": "String",
      "InstanceArn": "String",
      "Name": "String",
      "Tags": "Tag",
      "TimeZone": "String"
    }
  },
  "AWS::Connect::Instance": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-instance.html",
    "Properties": {
      "Attributes": "Attributes",
      "DirectoryId": "String",
      "IdentityManagementType": "String",
      "InstanceAlias": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Connect::InstanceStorageConfig": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-instancestorageconfig.html",
    "Properties": {
      "InstanceArn": "String",
      "KinesisFirehoseConfig": "KinesisFirehoseConfig",
      "KinesisStreamConfig": "KinesisStreamConfig",
      "KinesisVideoStreamConfig": "KinesisVideoStreamConfig",
      "ResourceType": "String",
      "S3Config": "S3Config",
      "StorageType": "String"
    }
  },
  "AWS::Connect::IntegrationAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-integrationassociation.html",
    "Properties": {
      "InstanceId": "String",
      "IntegrationArn": "String",
      "IntegrationType": "String"
    }
  },
  "AWS::Connect::PhoneNumber": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-phonenumber.html",
    "Properties": {
      "CountryCode": "String",
      "Description": "String",
      "Prefix": "String",
      "SourcePhoneNumberArn": "String",
      "Tags": "Tag",
      "TargetArn": "String",
      "Type": "String"
    }
  },
  "AWS::Connect::PredefinedAttribute": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-predefinedattribute.html",
    "Properties": {
      "InstanceArn": "String",
      "Name": "String",
      "Values": "Values"
    }
  },
  "AWS::Connect::Prompt": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-prompt.html",
    "Properties": {
      "Description": "String",
      "InstanceArn": "String",
      "Name": "String",
      "S3Uri": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Connect::Queue": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-queue.html",
    "Properties": {
      "Description": "String",
      "HoursOfOperationArn": "String",
      "InstanceArn": "String",
      "MaxContacts": "Integer",
      "Name": "String",
      "OutboundCallerConfig": "OutboundCallerConfig",
      "QuickConnectArns": "String",
      "Status": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Connect::QuickConnect": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-quickconnect.html",
    "Properties": {
      "Description": "String",
      "InstanceArn": "String",
      "Name": "String",
      "QuickConnectConfig": "QuickConnectConfig",
      "Tags": "Tag"
    }
  },
  "AWS::Connect::RoutingProfile": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-routingprofile.html",
    "Properties": {
      "AgentAvailabilityTimer": "String",
      "DefaultOutboundQueueArn": "String",
      "Description": "String",
      "InstanceArn": "String",
      "MediaConcurrencies": "MediaConcurrency",
      "Name": "String",
      "QueueConfigs": "RoutingProfileQueueConfig",
      "Tags": "Tag"
    }
  },
  "AWS::Connect::Rule": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-rule.html",
    "Properties": {
      "Actions": "Actions",
      "Function": "String",
      "InstanceArn": "String",
      "Name": "String",
      "PublishStatus": "String",
      "Tags": "Tag",
      "TriggerEventSource": "RuleTriggerEventSource"
    }
  },
  "AWS::Connect::SecurityKey": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-securitykey.html",
    "Properties": {
      "InstanceId": "String",
      "Key": "String"
    }
  },
  "AWS::Connect::SecurityProfile": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-securityprofile.html",
    "Properties": {
      "AllowedAccessControlHierarchyGroupId": "String",
      "AllowedAccessControlTags": "Tag",
      "Applications": "Application",
      "Description": "String",
      "HierarchyRestrictedResources": "String",
      "InstanceArn": "String",
      "Permissions": "String",
      "SecurityProfileName": "String",
      "TagRestrictedResources": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Connect::TaskTemplate": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-tasktemplate.html",
    "Properties": {
      "ClientToken": "String",
      "Constraints": "Constraints",
      "ContactFlowArn": "String",
      "Defaults": "DefaultFieldValue",
      "Description": "String",
      "Fields": "Field",
      "InstanceArn": "String",
      "Name": "String",
      "Status": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Connect::TrafficDistributionGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-trafficdistributiongroup.html",
    "Properties": {
      "Description": "String",
      "InstanceArn": "String",
      "Name": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Connect::User": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html",
    "Properties": {
      "DirectoryUserId": "String",
      "HierarchyGroupArn": "String",
      "IdentityInfo": "UserIdentityInfo",
      "InstanceArn": "String",
      "Password": "String",
      "PhoneConfig": "UserPhoneConfig",
      "RoutingProfileArn": "String",
      "SecurityProfileArns": "String",
      "Tags": "Tag",
      "UserProficiencies": "UserProficiency",
      "Username": "String"
    }
  },
  "AWS::Connect::UserHierarchyGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-userhierarchygroup.html",
    "Properties": {
      "InstanceArn": "String",
      "Name": "String",
      "ParentGroupArn": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Connect::UserHierarchyStructure": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-userhierarchystructure.html",
    "Properties": {
      "InstanceArn": "String",
      "UserHierarchyStructure": "UserHierarchyStructure"
    }
  },
  "AWS::Connect::View": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-view.html",
    "Properties": {
      "Actions": "String",
      "Description": "String",
      "InstanceArn": "String",
      "Name": "String",
      "Tags": "Tag",
      "Template": "Json"
    }
  },
  "AWS::Connect::ViewVersion": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-viewversion.html",
    "Properties": {
      "VersionDescription": "String",
      "ViewArn": "String",
      "ViewContentSha256": "String"
    }
  },
  "AWS::ConnectCampaigns::Campaign": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connectcampaigns-campaign.html",
    "Properties": {
      "ConnectInstanceArn": "String",
      "DialerConfig": "DialerConfig",
      "Name": "String",
      "OutboundCallConfig": "OutboundCallConfig",
      "Tags": "Tag"
    }
  },
  "AWS::ControlTower::EnabledBaseline": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-controltower-enabledbaseline.html",
    "Properties": {
      "BaselineIdentifier": "String",
      "BaselineVersion": "String",
      "Parameters": "Parameter",
      "Tags": "Tag",
      "TargetIdentifier": "String"
    }
  },
  "AWS::ControlTower::EnabledControl": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-controltower-enabledcontrol.html",
    "Properties": {
      "ControlIdentifier": "String",
      "Parameters": "EnabledControlParameter",
      "Tags": "Tag",
      "TargetIdentifier": "String"
    }
  },
  "AWS::ControlTower::LandingZone": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-controltower-landingzone.html",
    "Properties": {
      "Manifest": "Json",
      "Tags": "Tag",
      "Version": "String"
    }
  },
  "AWS::CustomerProfiles::CalculatedAttributeDefinition": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-calculatedattributedefinition.html",
    "Properties": {
      "AttributeDetails": "AttributeDetails",
      "CalculatedAttributeName": "String",
      "Conditions": "Conditions",
      "Description": "String",
      "DisplayName": "String",
      "DomainName": "String",
      "Statistic": "String",
      "Tags": "Tag"
    }
  },
  "AWS::CustomerProfiles::Domain": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-domain.html",
    "Properties": {
      "DeadLetterQueueUrl": "String",
      "DefaultEncryptionKey": "String",
      "DefaultExpirationDays": "Integer",
      "DomainName": "String",
      "Matching": "Matching",
      "RuleBasedMatching": "RuleBasedMatching",
      "Tags": "Tag"
    }
  },
  "AWS::CustomerProfiles::EventStream": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-eventstream.html",
    "Properties": {
      "DomainName": "String",
      "EventStreamName": "String",
      "Tags": "Tag",
      "Uri": "String"
    }
  },
  "AWS::CustomerProfiles::Integration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-integration.html",
    "Properties": {
      "DomainName": "String",
      "FlowDefinition": "FlowDefinition",
      "ObjectTypeName": "String",
      "ObjectTypeNames": "ObjectTypeMapping",
      "Tags": "Tag",
      "Uri": "String"
    }
  },
  "AWS::CustomerProfiles::ObjectType": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-objecttype.html",
    "Properties": {
      "AllowProfileCreation": "Boolean",
      "Description": "String",
      "DomainName": "String",
      "EncryptionKey": "String",
      "ExpirationDays": "Integer",
      "Fields": "FieldMap",
      "Keys": "KeyMap",
      "ObjectTypeName": "String",
      "SourceLastUpdatedTimestampFormat": "String",
      "Tags": "Tag",
      "TemplateId": "String"
    }
  },
  "AWS::DAX::Cluster": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html",
    "Properties": {
      "AvailabilityZones": "String",
      "ClusterEndpointEncryptionType": "String",
      "ClusterName": "String",
      "Description": "String",
      "IAMRoleARN": "String",
      "NodeType": "String",
      "NotificationTopicARN": "String",
      "ParameterGroupName": "String",
      "PreferredMaintenanceWindow": "String",
      "ReplicationFactor": "Integer",
      "SSESpecification": "SSESpecification",
      "SecurityGroupIds": "String",
      "SubnetGroupName": "String",
      "Tags": "Json"
    }
  },
  "AWS::DAX::ParameterGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-parametergroup.html",
    "Properties": {
      "Description": "String",
      "ParameterGroupName": "String",
      "ParameterNameValues": "Json"
    }
  },
  "AWS::DAX::SubnetGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-subnetgroup.html",
    "Properties": {
      "Description": "String",
      "SubnetGroupName": "String",
      "SubnetIds": "String"
    }
  },
  "AWS::DLM::LifecyclePolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dlm-lifecyclepolicy.html",
    "Properties": {
      "CopyTags": "Boolean",
      "CreateInterval": "Integer",
      "CrossRegionCopyTargets": "CrossRegionCopyTargets",
      "DefaultPolicy": "String",
      "Description": "String",
      "Exclusions": "Exclusions",
      "ExecutionRoleArn": "String",
      "ExtendDeletion": "Boolean",
      "PolicyDetails": "PolicyDetails",
      "RetainInterval": "Integer",
      "State": "String",
      "Tags": "Tag"
    }
  },
  "AWS::DMS::Certificate": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-certificate.html",
    "Properties": {
      "CertificateIdentifier": "String",
      "CertificatePem": "String",
      "CertificateWallet": "String"
    }
  },
  "AWS::DMS::DataProvider": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-dataprovider.html",
    "Properties": {
      "DataProviderIdentifier": "String",
      "DataProviderName": "String",
      "Description": "String",
      "Engine": "String",
      "ExactSettings": "Boolean",
      "Settings": "Settings",
      "Tags": "Tag"
    }
  },
  "AWS::DMS::Endpoint": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html",
    "Properties": {
      "CertificateArn": "String",
      "DatabaseName": "String",
      "DocDbSettings": "DocDbSettings",
      "DynamoDbSettings": "DynamoDbSettings",
      "ElasticsearchSettings": "ElasticsearchSettings",
      "EndpointIdentifier": "String",
      "EndpointType": "String",
      "EngineName": "String",
      "ExtraConnectionAttributes": "String",
      "GcpMySQLSettings": "GcpMySQLSettings",
      "IbmDb2Settings": "IbmDb2Settings",
      "KafkaSettings": "KafkaSettings",
      "KinesisSettings": "KinesisSettings",
      "KmsKeyId": "String",
      "MicrosoftSqlServerSettings": "MicrosoftSqlServerSettings",
      "MongoDbSettings": "MongoDbSettings",
      "MySqlSettings": "MySqlSettings",
      "NeptuneSettings": "NeptuneSettings",
      "OracleSettings": "OracleSettings",
      "Password": "String",
      "Port": "Integer",
      "PostgreSqlSettings": "PostgreSqlSettings",
      "RedisSettings": "RedisSettings",
      "RedshiftSettings": "RedshiftSettings",
      "ResourceIdentifier": "String",
      "S3Settings": "S3Settings",
      "ServerName": "String",
      "SslMode": "String",
      "SybaseSettings": "SybaseSettings",
      "Tags": "Tag",
      "Username": "String"
    }
  },
  "AWS::DMS::EventSubscription": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-eventsubscription.html",
    "Properties": {
      "Enabled": "Boolean",
      "EventCategories": "String",
      "SnsTopicArn": "String",
      "SourceIds": "String",
      "SourceType": "String",
      "SubscriptionName": "String",
      "Tags": "Tag"
    }
  },
  "AWS::DMS::InstanceProfile": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-instanceprofile.html",
    "Properties": {
      "AvailabilityZone": "String",
      "Description": "String",
      "InstanceProfileIdentifier": "String",
      "InstanceProfileName": "String",
      "KmsKeyArn": "String",
      "NetworkType": "String",
      "PubliclyAccessible": "Boolean",
      "SubnetGroupIdentifier": "String",
      "Tags": "Tag",
      "VpcSecurityGroups": "String"
    }
  },
  "AWS::DMS::MigrationProject": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-migrationproject.html",
    "Properties": {
      "Description": "String",
      "InstanceProfileArn": "String",
      "InstanceProfileIdentifier": "String",
      "InstanceProfileName": "String",
      "MigrationProjectIdentifier": "String",
      "MigrationProjectName": "String",
      "SchemaConversionApplicationAttributes": "SchemaConversionApplicationAttributes",
      "SourceDataProviderDescriptors": "DataProviderDescriptor",
      "Tags": "Tag",
      "TargetDataProviderDescriptors": "DataProviderDescriptor",
      "TransformationRules": "String"
    }
  },
  "AWS::DMS::ReplicationConfig": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationconfig.html",
    "Properties": {
      "ComputeConfig": "ComputeConfig",
      "ReplicationConfigIdentifier": "String",
      "ReplicationSettings": "Json",
      "ReplicationType": "String",
      "ResourceIdentifier": "String",
      "SourceEndpointArn": "String",
      "SupplementalSettings": "Json",
      "TableMappings": "Json",
      "Tags": "Tag",
      "TargetEndpointArn": "String"
    }
  },
  "AWS::DMS::ReplicationInstance": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html",
    "Properties": {
      "AllocatedStorage": "Integer",
      "AllowMajorVersionUpgrade": "Boolean",
      "AutoMinorVersionUpgrade": "Boolean",
      "AvailabilityZone": "String",
      "EngineVersion": "String",
      "KmsKeyId": "String",
      "MultiAZ": "Boolean",
      "PreferredMaintenanceWindow": "String",
      "PubliclyAccessible": "Boolean",
      "ReplicationInstanceClass": "String",
      "ReplicationInstanceIdentifier": "String",
      "ReplicationSubnetGroupIdentifier": "String",
      "ResourceIdentifier": "String",
      "Tags": "Tag",
      "VpcSecurityGroupIds": "String"
    }
  },
  "AWS::DMS::ReplicationSubnetGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationsubnetgroup.html",
    "Properties": {
      "ReplicationSubnetGroupDescription": "String",
      "ReplicationSubnetGroupIdentifier": "String",
      "SubnetIds": "String",
      "Tags": "Tag"
    }
  },
  "AWS::DMS::ReplicationTask": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html",
    "Properties": {
      "CdcStartPosition": "String",
      "CdcStartTime": "Double",
      "CdcStopPosition": "String",
      "MigrationType": "String",
      "ReplicationInstanceArn": "String",
      "ReplicationTaskIdentifier": "String",
      "ReplicationTaskSettings": "String",
      "ResourceIdentifier": "String",
      "SourceEndpointArn": "String",
      "TableMappings": "String",
      "Tags": "Tag",
      "TargetEndpointArn": "String",
      "TaskData": "String"
    }
  },
  "AWS::DataBrew::Dataset": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-dataset.html",
    "Properties": {
      "Format": "String",
      "FormatOptions": "FormatOptions",
      "Input": "Input",
      "Name": "String",
      "PathOptions": "PathOptions",
      "Tags": "Tag"
    }
  },
  "AWS::DataBrew::Job": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-job.html",
    "Properties": {
      "DataCatalogOutputs": "DataCatalogOutput",
      "DatabaseOutputs": "DatabaseOutput",
      "DatasetName": "String",
      "EncryptionKeyArn": "String",
      "EncryptionMode": "String",
      "JobSample": "JobSample",
      "LogSubscription": "String",
      "MaxCapacity": "Integer",
      "MaxRetries": "Integer",
      "Name": "String",
      "OutputLocation": "OutputLocation",
      "Outputs": "Output",
      "ProfileConfiguration": "ProfileConfiguration",
      "ProjectName": "String",
      "Recipe": "Recipe",
      "RoleArn": "String",
      "Tags": "Tag",
      "Timeout": "Integer",
      "Type": "String",
      "ValidationConfigurations": "ValidationConfiguration"
    }
  },
  "AWS::DataBrew::Project": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-project.html",
    "Properties": {
      "DatasetName": "String",
      "Name": "String",
      "RecipeName": "String",
      "RoleArn": "String",
      "Sample": "Sample",
      "Tags": "Tag"
    }
  },
  "AWS::DataBrew::Recipe": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-recipe.html",
    "Properties": {
      "Description": "String",
      "Name": "String",
      "Steps": "RecipeStep",
      "Tags": "Tag"
    }
  },
  "AWS::DataBrew::Ruleset": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-ruleset.html",
    "Properties": {
      "Description": "String",
      "Name": "String",
      "Rules": "Rule",
      "Tags": "Tag",
      "TargetArn": "String"
    }
  },
  "AWS::DataBrew::Schedule": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-schedule.html",
    "Properties": {
      "CronExpression": "String",
      "JobNames": "String",
      "Name": "String",
      "Tags": "Tag"
    }
  },
  "AWS::DataPipeline::Pipeline": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datapipeline-pipeline.html",
    "Properties": {
      "Activate": "Boolean",
      "Description": "String",
      "Name": "String",
      "ParameterObjects": "ParameterObject",
      "ParameterValues": "ParameterValue",
      "PipelineObjects": "PipelineObject",
      "PipelineTags": "PipelineTag"
    }
  },
  "AWS::DataSync::Agent": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-agent.html",
    "Properties": {
      "ActivationKey": "String",
      "AgentName": "String",
      "SecurityGroupArns": "String",
      "SubnetArns": "String",
      "Tags": "Tag",
      "VpcEndpointId": "String"
    }
  },
  "AWS::DataSync::LocationAzureBlob": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationazureblob.html",
    "Properties": {
      "AgentArns": "String",
      "AzureAccessTier": "String",
      "AzureBlobAuthenticationType": "String",
      "AzureBlobContainerUrl": "String",
      "AzureBlobSasConfiguration": "AzureBlobSasConfiguration",
      "AzureBlobType": "String",
      "Subdirectory": "String",
      "Tags": "Tag"
    }
  },
  "AWS::DataSync::LocationEFS": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationefs.html",
    "Properties": {
      "AccessPointArn": "String",
      "Ec2Config": "Ec2Config",
      "EfsFilesystemArn": "String",
      "FileSystemAccessRoleArn": "String",
      "InTransitEncryption": "String",
      "Subdirectory": "String",
      "Tags": "Tag"
    }
  },
  "AWS::DataSync::LocationFSxLustre": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationfsxlustre.html",
    "Properties": {
      "FsxFilesystemArn": "String",
      "SecurityGroupArns": "String",
      "Subdirectory": "String",
      "Tags": "Tag"
    }
  },
  "AWS::DataSync::LocationFSxONTAP": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationfsxontap.html",
    "Properties": {
      "Protocol": "Protocol",
      "SecurityGroupArns": "String",
      "StorageVirtualMachineArn": "String",
      "Subdirectory": "String",
      "Tags": "Tag"
    }
  },
  "AWS::DataSync::LocationFSxOpenZFS": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationfsxopenzfs.html",
    "Properties": {
      "FsxFilesystemArn": "String",
      "Protocol": "Protocol",
      "SecurityGroupArns": "String",
      "Subdirectory": "String",
      "Tags": "Tag"
    }
  },
  "AWS::DataSync::LocationFSxWindows": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationfsxwindows.html",
    "Properties": {
      "Domain": "String",
      "FsxFilesystemArn": "String",
      "Password": "String",
      "SecurityGroupArns": "String",
      "Subdirectory": "String",
      "Tags": "Tag",
      "User": "String"
    }
  },
  "AWS::DataSync::LocationHDFS": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationhdfs.html",
    "Properties": {
      "AgentArns": "String",
      "AuthenticationType": "String",
      "BlockSize": "Integer",
      "KerberosKeytab": "String",
      "KerberosKrb5Conf": "String",
      "KerberosPrincipal": "String",
      "KmsKeyProviderUri": "String",
      "NameNodes": "NameNode",
      "QopConfiguration": "QopConfiguration",
      "ReplicationFactor": "Integer",
      "SimpleUser": "String",
      "Subdirectory": "String",
      "Tags": "Tag"
    }
  },
  "AWS::DataSync::LocationNFS": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationnfs.html",
    "Properties": {
      "MountOptions": "MountOptions",
      "OnPremConfig": "OnPremConfig",
      "ServerHostname": "String",
      "Subdirectory": "String",
      "Tags": "Tag"
    }
  },
  "AWS::DataSync::LocationObjectStorage": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html",
    "Properties": {
      "AccessKey": "String",
      "AgentArns": "String",
      "BucketName": "String",
      "SecretKey": "String",
      "ServerCertificate": "String",
      "ServerHostname": "String",
      "ServerPort": "Integer",
      "ServerProtocol": "String",
      "Subdirectory": "String",
      "Tags": "Tag"
    }
  },
  "AWS::DataSync::LocationS3": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locations3.html",
    "Properties": {
      "S3BucketArn": "String",
      "S3Config": "S3Config",
      "S3StorageClass": "String",
      "Subdirectory": "String",
      "Tags": "Tag"
    }
  },
  "AWS::DataSync::LocationSMB": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationsmb.html",
    "Properties": {
      "AgentArns": "String",
      "Domain": "String",
      "MountOptions": "MountOptions",
      "Password": "String",
      "ServerHostname": "String",
      "Subdirectory": "String",
      "Tags": "Tag",
      "User": "String"
    }
  },
  "AWS::DataSync::StorageSystem": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-storagesystem.html",
    "Properties": {
      "AgentArns": "String",
      "CloudWatchLogGroupArn": "String",
      "Name": "String",
      "ServerConfiguration": "ServerConfiguration",
      "ServerCredentials": "ServerCredentials",
      "SystemType": "String",
      "Tags": "Tag"
    }
  },
  "AWS::DataSync::Task": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-task.html",
    "Properties": {
      "CloudWatchLogGroupArn": "String",
      "DestinationLocationArn": "String",
      "Excludes": "FilterRule",
      "Includes": "FilterRule",
      "ManifestConfig": "ManifestConfig",
      "Name": "String",
      "Options": "Options",
      "Schedule": "TaskSchedule",
      "SourceLocationArn": "String",
      "Tags": "Tag",
      "TaskReportConfig": "TaskReportConfig"
    }
  },
  "AWS::DataZone::DataSource": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-datasource.html",
    "Properties": {
      "AssetFormsInput": "FormInput",
      "Configuration": "DataSourceConfigurationInput",
      "Description": "String",
      "DomainIdentifier": "String",
      "EnableSetting": "String",
      "EnvironmentIdentifier": "String",
      "Name": "String",
      "ProjectIdentifier": "String",
      "PublishOnImport": "Boolean",
      "Recommendation": "RecommendationConfiguration",
      "Schedule": "ScheduleConfiguration",
      "Type": "String"
    }
  },
  "AWS::DataZone::Domain": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-domain.html",
    "Properties": {
      "Description": "String",
      "DomainExecutionRole": "String",
      "KmsKeyIdentifier": "String",
      "Name": "String",
      "SingleSignOn": "SingleSignOn",
      "Tags": "Tag"
    }
  },
  "AWS::DataZone::Environment": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-environment.html",
    "Properties": {
      "Description": "String",
      "DomainIdentifier": "String",
      "EnvironmentAccountIdentifier": "String",
      "EnvironmentAccountRegion": "String",
      "EnvironmentProfileIdentifier": "String",
      "EnvironmentRoleArn": "String",
      "GlossaryTerms": "String",
      "Name": "String",
      "ProjectIdentifier": "String",
      "UserParameters": "EnvironmentParameter"
    }
  },
  "AWS::DataZone::EnvironmentActions": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-environmentactions.html",
    "Properties": {
      "Description": "String",
      "DomainIdentifier": "String",
      "EnvironmentIdentifier": "String",
      "Identifier": "String",
      "Name": "String",
      "Parameters": "AwsConsoleLinkParameters"
    }
  },
  "AWS::DataZone::EnvironmentBlueprintConfiguration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-environmentblueprintconfiguration.html",
    "Properties": {
      "DomainIdentifier": "String",
      "EnabledRegions": "String",
      "EnvironmentBlueprintIdentifier": "String",
      "ManageAccessRoleArn": "String",
      "ProvisioningRoleArn": "String",
      "RegionalParameters": "RegionalParameter"
    }
  },
  "AWS::DataZone::EnvironmentProfile": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-environmentprofile.html",
    "Properties": {
      "AwsAccountId": "String",
      "AwsAccountRegion": "String",
      "Description": "String",
      "DomainIdentifier": "String",
      "EnvironmentBlueprintIdentifier": "String",
      "Name": "String",
      "ProjectIdentifier": "String",
      "UserParameters": "EnvironmentParameter"
    }
  },
  "AWS::DataZone::GroupProfile": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-groupprofile.html",
    "Properties": {
      "DomainIdentifier": "String",
      "GroupIdentifier": "String",
      "Status": "String"
    }
  },
  "AWS::DataZone::Project": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-project.html",
    "Properties": {
      "Description": "String",
      "DomainIdentifier": "String",
      "GlossaryTerms": "String",
      "Name": "String"
    }
  },
  "AWS::DataZone::ProjectMembership": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-projectmembership.html",
    "Properties": {
      "Designation": "String",
      "DomainIdentifier": "String",
      "Member": "Member",
      "ProjectIdentifier": "String"
    }
  },
  "AWS::DataZone::SubscriptionTarget": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-subscriptiontarget.html",
    "Properties": {
      "ApplicableAssetTypes": "String",
      "AuthorizedPrincipals": "String",
      "DomainIdentifier": "String",
      "EnvironmentIdentifier": "String",
      "ManageAccessRole": "String",
      "Name": "String",
      "Provider": "String",
      "SubscriptionTargetConfig": "SubscriptionTargetForm",
      "Type": "String"
    }
  },
  "AWS::DataZone::UserProfile": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-userprofile.html",
    "Properties": {
      "DomainIdentifier": "String",
      "Status": "String",
      "UserIdentifier": "String",
      "UserType": "String"
    }
  },
  "AWS::Deadline::Farm": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-farm.html",
    "Properties": {
      "Description": "String",
      "DisplayName": "String",
      "KmsKeyArn": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Deadline::Fleet": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-fleet.html",
    "Properties": {
      "Configuration": "FleetConfiguration",
      "Description": "String",
      "DisplayName": "String",
      "FarmId": "String",
      "MaxWorkerCount": "Integer",
      "MinWorkerCount": "Integer",
      "RoleArn": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Deadline::LicenseEndpoint": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-licenseendpoint.html",
    "Properties": {
      "SecurityGroupIds": "String",
      "SubnetIds": "String",
      "Tags": "Tag",
      "VpcId": "String"
    }
  },
  "AWS::Deadline::MeteredProduct": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-meteredproduct.html",
    "Properties": {
      "LicenseEndpointId": "String",
      "ProductId": "String"
    }
  },
  "AWS::Deadline::Monitor": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-monitor.html",
    "Properties": {
      "DisplayName": "String",
      "IdentityCenterInstanceArn": "String",
      "RoleArn": "String",
      "Subdomain": "String"
    }
  },
  "AWS::Deadline::Queue": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-queue.html",
    "Properties": {
      "AllowedStorageProfileIds": "String",
      "DefaultBudgetAction": "String",
      "Description": "String",
      "DisplayName": "String",
      "FarmId": "String",
      "JobAttachmentSettings": "JobAttachmentSettings",
      "JobRunAsUser": "JobRunAsUser",
      "RequiredFileSystemLocationNames": "String",
      "RoleArn": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Deadline::QueueEnvironment": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-queueenvironment.html",
    "Properties": {
      "FarmId": "String",
      "Priority": "Integer",
      "QueueId": "String",
      "Template": "String",
      "TemplateType": "String"
    }
  },
  "AWS::Deadline::QueueFleetAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-queuefleetassociation.html",
    "Properties": {
      "FarmId": "String",
      "FleetId": "String",
      "QueueId": "String"
    }
  },
  "AWS::Deadline::StorageProfile": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-storageprofile.html",
    "Properties": {
      "DisplayName": "String",
      "FarmId": "String",
      "FileSystemLocations": "FileSystemLocation",
      "OsFamily": "String"
    }
  },
  "AWS::Detective::Graph": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-detective-graph.html",
    "Properties": {
      "AutoEnableMembers": "Boolean",
      "Tags": "Tag"
    }
  },
  "AWS::Detective::MemberInvitation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-detective-memberinvitation.html",
    "Properties": {
      "DisableEmailNotification": "Boolean",
      "GraphArn": "String",
      "MemberEmailAddress": "String",
      "MemberId": "String",
      "Message": "String"
    }
  },
  "AWS::Detective::OrganizationAdmin": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-detective-organizationadmin.html",
    "Properties": {
      "AccountId": "String"
    }
  },
  "AWS::DevOpsGuru::LogAnomalyDetectionIntegration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-devopsguru-loganomalydetectionintegration.html",
    "Properties": {}
  },
  "AWS::DevOpsGuru::NotificationChannel": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-devopsguru-notificationchannel.html",
    "Properties": {
      "Config": "NotificationChannelConfig"
    }
  },
  "AWS::DevOpsGuru::ResourceCollection": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-devopsguru-resourcecollection.html",
    "Properties": {
      "ResourceCollectionFilter": "ResourceCollectionFilter"
    }
  },
  "AWS::DirectoryService::MicrosoftAD": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-directoryservice-microsoftad.html",
    "Properties": {
      "CreateAlias": "Boolean",
      "Edition": "String",
      "EnableSso": "Boolean",
      "Name": "String",
      "Password": "String",
      "ShortName": "String",
      "VpcSettings": "VpcSettings"
    }
  },
  "AWS::DirectoryService::SimpleAD": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-directoryservice-simplead.html",
    "Properties": {
      "CreateAlias": "Boolean",
      "Description": "String",
      "EnableSso": "Boolean",
      "Name": "String",
      "Password": "String",
      "ShortName": "String",
      "Size": "String",
      "VpcSettings": "VpcSettings"
    }
  },
  "AWS::DocDB::DBCluster": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html",
    "Properties": {
      "AvailabilityZones": "String",
      "BackupRetentionPeriod": "Integer",
      "CopyTagsToSnapshot": "Boolean",
      "DBClusterIdentifier": "String",
      "DBClusterParameterGroupName": "String",
      "DBSubnetGroupName": "String",
      "DeletionProtection": "Boolean",
      "EnableCloudwatchLogsExports": "String",
      "EngineVersion": "String",
      "KmsKeyId": "String",
      "MasterUserPassword": "String",
      "MasterUsername": "String",
      "Port": "Integer",
      "PreferredBackupWindow": "String",
      "PreferredMaintenanceWindow": "String",
      "RestoreToTime": "String",
      "RestoreType": "String",
      "SnapshotIdentifier": "String",
      "SourceDBClusterIdentifier": "String",
      "StorageEncrypted": "Boolean",
      "StorageType": "String",
      "Tags": "Tag",
      "UseLatestRestorableTime": "Boolean",
      "VpcSecurityGroupIds": "String"
    }
  },
  "AWS::DocDB::DBClusterParameterGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbclusterparametergroup.html",
    "Properties": {
      "Description": "String",
      "Family": "String",
      "Name": "String",
      "Parameters": "Json",
      "Tags": "Tag"
    }
  },
  "AWS::DocDB::DBInstance": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html",
    "Properties": {
      "AutoMinorVersionUpgrade": "Boolean",
      "AvailabilityZone": "String",
      "CACertificateIdentifier": "String",
      "CertificateRotationRestart": "Boolean",
      "DBClusterIdentifier": "String",
      "DBInstanceClass": "String",
      "DBInstanceIdentifier": "String",
      "EnablePerformanceInsights": "Boolean",
      "PreferredMaintenanceWindow": "String",
      "Tags": "Tag"
    }
  },
  "AWS::DocDB::DBSubnetGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbsubnetgroup.html",
    "Properties": {
      "DBSubnetGroupDescription": "String",
      "DBSubnetGroupName": "String",
      "SubnetIds": "String",
      "Tags": "Tag"
    }
  },
  "AWS::DocDB::EventSubscription": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-eventsubscription.html",
    "Properties": {
      "Enabled": "Boolean",
      "EventCategories": "String",
      "SnsTopicArn": "String",
      "SourceIds": "String",
      "SourceType": "String",
      "SubscriptionName": "String"
    }
  },
  "AWS::DocDBElastic::Cluster": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdbelastic-cluster.html",
    "Properties": {
      "AdminUserName": "String",
      "AdminUserPassword": "String",
      "AuthType": "String",
      "BackupRetentionPeriod": "Integer",
      "ClusterName": "String",
      "KmsKeyId": "String",
      "PreferredBackupWindow": "String",
      "PreferredMaintenanceWindow": "String",
      "ShardCapacity": "Integer",
      "ShardCount": "Integer",
      "ShardInstanceCount": "Integer",
      "SubnetIds": "String",
      "Tags": "Tag",
      "VpcSecurityGroupIds": "String"
    }
  },
  "AWS::DynamoDB::GlobalTable": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-globaltable.html",
    "Properties": {
      "AttributeDefinitions": "AttributeDefinition",
      "BillingMode": "String",
      "GlobalSecondaryIndexes": "GlobalSecondaryIndex",
      "KeySchema": "KeySchema",
      "LocalSecondaryIndexes": "LocalSecondaryIndex",
      "Replicas": "ReplicaSpecification",
      "SSESpecification": "SSESpecification",
      "StreamSpecification": "StreamSpecification",
      "TableName": "String",
      "TimeToLiveSpecification": "TimeToLiveSpecification",
      "WriteOnDemandThroughputSettings": "WriteOnDemandThroughputSettings",
      "WriteProvisionedThroughputSettings": "WriteProvisionedThroughputSettings"
    }
  },
  "AWS::DynamoDB::Table": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html",
    "Properties": {
      "AttributeDefinitions": "AttributeDefinition",
      "BillingMode": "String",
      "ContributorInsightsSpecification": "ContributorInsightsSpecification",
      "DeletionProtectionEnabled": "Boolean",
      "GlobalSecondaryIndexes": "GlobalSecondaryIndex",
      "ImportSourceSpecification": "ImportSourceSpecification",
      "KeySchema": "KeySchema",
      "KinesisStreamSpecification": "KinesisStreamSpecification",
      "LocalSecondaryIndexes": "LocalSecondaryIndex",
      "OnDemandThroughput": "OnDemandThroughput",
      "PointInTimeRecoverySpecification": "PointInTimeRecoverySpecification",
      "ProvisionedThroughput": "ProvisionedThroughput",
      "ResourcePolicy": "ResourcePolicy",
      "SSESpecification": "SSESpecification",
      "StreamSpecification": "StreamSpecification",
      "TableClass": "String",
      "TableName": "String",
      "Tags": "Tag",
      "TimeToLiveSpecification": "TimeToLiveSpecification"
    }
  },
  "AWS::EC2::CapacityReservation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html",
    "Properties": {
      "AvailabilityZone": "String",
      "EbsOptimized": "Boolean",
      "EndDate": "String",
      "EndDateType": "String",
      "EphemeralStorage": "Boolean",
      "InstanceCount": "Integer",
      "InstanceMatchCriteria": "String",
      "InstancePlatform": "String",
      "InstanceType": "String",
      "OutPostArn": "String",
      "PlacementGroupArn": "String",
      "TagSpecifications": "TagSpecification",
      "Tenancy": "String"
    }
  },
  "AWS::EC2::CapacityReservationFleet": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html",
    "Properties": {
      "AllocationStrategy": "String",
      "EndDate": "String",
      "InstanceMatchCriteria": "String",
      "InstanceTypeSpecifications": "InstanceTypeSpecification",
      "NoRemoveEndDate": "Boolean",
      "RemoveEndDate": "Boolean",
      "TagSpecifications": "TagSpecification",
      "Tenancy": "String",
      "TotalTargetCapacity": "Integer"
    }
  },
  "AWS::EC2::CarrierGateway": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-carriergateway.html",
    "Properties": {
      "Tags": "Tag",
      "VpcId": "String"
    }
  },
  "AWS::EC2::ClientVpnAuthorizationRule": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html",
    "Properties": {
      "AccessGroupId": "String",
      "AuthorizeAllGroups": "Boolean",
      "ClientVpnEndpointId": "String",
      "Description": "String",
      "TargetNetworkCidr": "String"
    }
  },
  "AWS::EC2::ClientVpnEndpoint": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html",
    "Properties": {
      "AuthenticationOptions": "ClientAuthenticationRequest",
      "ClientCidrBlock": "String",
      "ClientConnectOptions": "ClientConnectOptions",
      "ClientLoginBannerOptions": "ClientLoginBannerOptions",
      "ConnectionLogOptions": "ConnectionLogOptions",
      "Description": "String",
      "DnsServers": "String",
      "SecurityGroupIds": "String",
      "SelfServicePortal": "String",
      "ServerCertificateArn": "String",
      "SessionTimeoutHours": "Integer",
      "SplitTunnel": "Boolean",
      "TagSpecifications": "TagSpecification",
      "TransportProtocol": "String",
      "VpcId": "String",
      "VpnPort": "Integer"
    }
  },
  "AWS::EC2::ClientVpnRoute": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html",
    "Properties": {
      "ClientVpnEndpointId": "String",
      "Description": "String",
      "DestinationCidrBlock": "String",
      "TargetVpcSubnetId": "String"
    }
  },
  "AWS::EC2::ClientVpnTargetNetworkAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpntargetnetworkassociation.html",
    "Properties": {
      "ClientVpnEndpointId": "String",
      "SubnetId": "String"
    }
  },
  "AWS::EC2::CustomerGateway": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customergateway.html",
    "Properties": {
      "BgpAsn": "Integer",
      "BgpAsnExtended": "Double",
      "CertificateArn": "String",
      "DeviceName": "String",
      "IpAddress": "String",
      "Tags": "Tag",
      "Type": "String"
    }
  },
  "AWS::EC2::DHCPOptions": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html",
    "Properties": {
      "DomainName": "String",
      "DomainNameServers": "String",
      "Ipv6AddressPreferredLeaseTime": "Integer",
      "NetbiosNameServers": "String",
      "NetbiosNodeType": "Integer",
      "NtpServers": "String",
      "Tags": "Tag"
    }
  },
  "AWS::EC2::EC2Fleet": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html",
    "Properties": {
      "Context": "String",
      "ExcessCapacityTerminationPolicy": "String",
      "LaunchTemplateConfigs": "FleetLaunchTemplateConfigRequest",
      "OnDemandOptions": "OnDemandOptionsRequest",
      "ReplaceUnhealthyInstances": "Boolean",
      "SpotOptions": "SpotOptionsRequest",
      "TagSpecifications": "TagSpecification",
      "TargetCapacitySpecification": "TargetCapacitySpecificationRequest",
      "TerminateInstancesWithExpiration": "Boolean",
      "Type": "String",
      "ValidFrom": "String",
      "ValidUntil": "String"
    }
  },
  "AWS::EC2::EIP": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-eip.html",
    "Properties": {
      "Domain": "String",
      "InstanceId": "String",
      "NetworkBorderGroup": "String",
      "PublicIpv4Pool": "String",
      "Tags": "Tag",
      "TransferAddress": "String"
    }
  },
  "AWS::EC2::EIPAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-eipassociation.html",
    "Properties": {
      "AllocationId": "String",
      "InstanceId": "String",
      "NetworkInterfaceId": "String",
      "PrivateIpAddress": "String"
    }
  },
  "AWS::EC2::EgressOnlyInternetGateway": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-egressonlyinternetgateway.html",
    "Properties": {
      "VpcId": "String"
    }
  },
  "AWS::EC2::EnclaveCertificateIamRoleAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-enclavecertificateiamroleassociation.html",
    "Properties": {
      "CertificateArn": "String",
      "RoleArn": "String"
    }
  },
  "AWS::EC2::FlowLog": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html",
    "Properties": {
      "DeliverCrossAccountRole": "String",
      "DeliverLogsPermissionArn": "String",
      "DestinationOptions": "DestinationOptions",
      "LogDestination": "String",
      "LogDestinationType": "String",
      "LogFormat": "String",
      "LogGroupName": "String",
      "MaxAggregationInterval": "Integer",
      "ResourceId": "String",
      "ResourceType": "String",
      "Tags": "Tag",
      "TrafficType": "String"
    }
  },
  "AWS::EC2::GatewayRouteTableAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-gatewayroutetableassociation.html",
    "Properties": {
      "GatewayId": "String",
      "RouteTableId": "String"
    }
  },
  "AWS::EC2::Host": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html",
    "Properties": {
      "AssetId": "String",
      "AutoPlacement": "String",
      "AvailabilityZone": "String",
      "HostMaintenance": "String",
      "HostRecovery": "String",
      "InstanceFamily": "String",
      "InstanceType": "String",
      "OutpostArn": "String"
    }
  },
  "AWS::EC2::IPAM": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipam.html",
    "Properties": {
      "Description": "String",
      "EnablePrivateGua": "Boolean",
      "OperatingRegions": "IpamOperatingRegion",
      "Tags": "Tag",
      "Tier": "String"
    }
  },
  "AWS::EC2::IPAMAllocation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamallocation.html",
    "Properties": {
      "Cidr": "String",
      "Description": "String",
      "IpamPoolId": "String",
      "NetmaskLength": "Integer"
    }
  },
  "AWS::EC2::IPAMPool": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html",
    "Properties": {
      "AddressFamily": "String",
      "AllocationDefaultNetmaskLength": "Integer",
      "AllocationMaxNetmaskLength": "Integer",
      "AllocationMinNetmaskLength": "Integer",
      "AllocationResourceTags": "Tag",
      "AutoImport": "Boolean",
      "AwsService": "String",
      "Description": "String",
      "IpamScopeId": "String",
      "Locale": "String",
      "ProvisionedCidrs": "ProvisionedCidr",
      "PublicIpSource": "String",
      "PubliclyAdvertisable": "Boolean",
      "SourceIpamPoolId": "String",
      "SourceResource": "SourceResource",
      "Tags": "Tag"
    }
  },
  "AWS::EC2::IPAMPoolCidr": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampoolcidr.html",
    "Properties": {
      "Cidr": "String",
      "IpamPoolId": "String",
      "NetmaskLength": "Integer"
    }
  },
  "AWS::EC2::IPAMResourceDiscovery": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamresourcediscovery.html",
    "Properties": {
      "Description": "String",
      "OperatingRegions": "IpamOperatingRegion",
      "Tags": "Tag"
    }
  },
  "AWS::EC2::IPAMResourceDiscoveryAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamresourcediscoveryassociation.html",
    "Properties": {
      "IpamId": "String",
      "IpamResourceDiscoveryId": "String",
      "Tags": "Tag"
    }
  },
  "AWS::EC2::IPAMScope": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamscope.html",
    "Properties": {
      "Description": "String",
      "IpamId": "String",
      "Tags": "Tag"
    }
  },
  "AWS::EC2::Instance": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html",
    "Properties": {
      "AdditionalInfo": "String",
      "Affinity": "String",
      "AvailabilityZone": "String",
      "BlockDeviceMappings": "BlockDeviceMapping",
      "CpuOptions": "CpuOptions",
      "CreditSpecification": "CreditSpecification",
      "DisableApiTermination": "Boolean",
      "EbsOptimized": "Boolean",
      "ElasticGpuSpecifications": "ElasticGpuSpecification",
      "ElasticInferenceAccelerators": "ElasticInferenceAccelerator",
      "EnclaveOptions": "EnclaveOptions",
      "HibernationOptions": "HibernationOptions",
      "HostId": "String",
      "HostResourceGroupArn": "String",
      "IamInstanceProfile": "String",
      "ImageId": "String",
      "InstanceInitiatedShutdownBehavior": "String",
      "InstanceType": "String",
      "Ipv6AddressCount": "Integer",
      "Ipv6Addresses": "InstanceIpv6Address",
      "KernelId": "String",
      "KeyName": "String",
      "LaunchTemplate": "LaunchTemplateSpecification",
      "LicenseSpecifications": "LicenseSpecification",
      "Monitoring": "Boolean",
      "NetworkInterfaces": "NetworkInterface",
      "PlacementGroupName": "String",
      "PrivateDnsNameOptions": "PrivateDnsNameOptions",
      "PrivateIpAddress": "String",
      "PropagateTagsToVolumeOnCreation": "Boolean",
      "RamdiskId": "String",
      "SecurityGroupIds": "String",
      "SecurityGroups": "String",
      "SourceDestCheck": "Boolean",
      "SsmAssociations": "SsmAssociation",
      "SubnetId": "String",
      "Tags": "Tag",
      "Tenancy": "String",
      "UserData": "String",
      "Volumes": "Volume"
    }
  },
  "AWS::EC2::InstanceConnectEndpoint": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instanceconnectendpoint.html",
    "Properties": {
      "ClientToken": "String",
      "PreserveClientIp": "Boolean",
      "SecurityGroupIds": "String",
      "SubnetId": "String",
      "Tags": "Tag"
    }
  },
  "AWS::EC2::InternetGateway": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-internetgateway.html",
    "Properties": {
      "Tags": "Tag"
    }
  },
  "AWS::EC2::KeyPair": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-keypair.html",
    "Properties": {
      "KeyFormat": "String",
      "KeyName": "String",
      "KeyType": "String",
      "PublicKeyMaterial": "String",
      "Tags": "Tag"
    }
  },
  "AWS::EC2::LaunchTemplate": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html",
    "Properties": {
      "LaunchTemplateData": "LaunchTemplateData",
      "LaunchTemplateName": "String",
      "TagSpecifications": "LaunchTemplateTagSpecification",
      "VersionDescription": "String"
    }
  },
  "AWS::EC2::LocalGatewayRoute": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroute.html",
    "Properties": {
      "DestinationCidrBlock": "String",
      "LocalGatewayRouteTableId": "String",
      "LocalGatewayVirtualInterfaceGroupId": "String",
      "NetworkInterfaceId": "String"
    }
  },
  "AWS::EC2::LocalGatewayRouteTable": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroutetable.html",
    "Properties": {
      "LocalGatewayId": "String",
      "Mode": "String",
      "Tags": "Tag"
    }
  },
  "AWS::EC2::LocalGatewayRouteTableVPCAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroutetablevpcassociation.html",
    "Properties": {
      "LocalGatewayRouteTableId": "String",
      "Tags": "Tag",
      "VpcId": "String"
    }
  },
  "AWS::EC2::LocalGatewayRouteTableVirtualInterfaceGroupAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroutetablevirtualinterfacegroupassociation.html",
    "Properties": {
      "LocalGatewayRouteTableId": "String",
      "LocalGatewayVirtualInterfaceGroupId": "String",
      "Tags": "Tag"
    }
  },
  "AWS::EC2::NatGateway": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html",
    "Properties": {
      "AllocationId": "String",
      "ConnectivityType": "String",
      "MaxDrainDurationSeconds": "Integer",
      "PrivateIpAddress": "String",
      "SecondaryAllocationIds": "String",
      "SecondaryPrivateIpAddressCount": "Integer",
      "SecondaryPrivateIpAddresses": "String",
      "SubnetId": "String",
      "Tags": "Tag"
    }
  },
  "AWS::EC2::NetworkAcl": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkacl.html",
    "Properties": {
      "Tags": "Tag",
      "VpcId": "String"
    }
  },
  "AWS::EC2::NetworkAclEntry": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html",
    "Properties": {
      "CidrBlock": "String",
      "Egress": "Boolean",
      "Icmp": "Icmp",
      "Ipv6CidrBlock": "String",
      "NetworkAclId": "String",
      "PortRange": "PortRange",
      "Protocol": "Integer",
      "RuleAction": "String",
      "RuleNumber": "Integer"
    }
  },
  "AWS::EC2::NetworkInsightsAccessScope": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsaccessscope.html",
    "Properties": {
      "ExcludePaths": "AccessScopePathRequest",
      "MatchPaths": "AccessScopePathRequest",
      "Tags": "Tag"
    }
  },
  "AWS::EC2::NetworkInsightsAccessScopeAnalysis": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsaccessscopeanalysis.html",
    "Properties": {
      "NetworkInsightsAccessScopeId": "String",
      "Tags": "Tag"
    }
  },
  "AWS::EC2::NetworkInsightsAnalysis": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsanalysis.html",
    "Properties": {
      "AdditionalAccounts": "String",
      "FilterInArns": "String",
      "NetworkInsightsPathId": "String",
      "Tags": "Tag"
    }
  },
  "AWS::EC2::NetworkInsightsPath": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html",
    "Properties": {
      "Destination": "String",
      "DestinationIp": "String",
      "DestinationPort": "Integer",
      "FilterAtDestination": "PathFilter",
      "FilterAtSource": "PathFilter",
      "Protocol": "String",
      "Source": "String",
      "SourceIp": "String",
      "Tags": "Tag"
    }
  },
  "AWS::EC2::NetworkInterface": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html",
    "Properties": {
      "ConnectionTrackingSpecification": "ConnectionTrackingSpecification",
      "Description": "String",
      "GroupSet": "String",
      "InterfaceType": "String",
      "Ipv4PrefixCount": "Integer",
      "Ipv4Prefixes": "Ipv4PrefixSpecification",
      "Ipv6AddressCount": "Integer",
      "Ipv6Addresses": "InstanceIpv6Address",
      "Ipv6PrefixCount": "Integer",
      "Ipv6Prefixes": "Ipv6PrefixSpecification",
      "PrivateIpAddress": "String",
      "PrivateIpAddresses": "PrivateIpAddressSpecification",
      "SecondaryPrivateIpAddressCount": "Integer",
      "SourceDestCheck": "Boolean",
      "SubnetId": "String",
      "Tags": "Tag"
    }
  },
  "AWS::EC2::NetworkInterfaceAttachment": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfaceattachment.html",
    "Properties": {
      "DeleteOnTermination": "Boolean",
      "DeviceIndex": "String",
      "EnaSrdSpecification": "EnaSrdSpecification",
      "InstanceId": "String",
      "NetworkInterfaceId": "String"
    }
  },
  "AWS::EC2::NetworkInterfacePermission": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html",
    "Properties": {
      "AwsAccountId": "String",
      "NetworkInterfaceId": "String",
      "Permission": "String"
    }
  },
  "AWS::EC2::NetworkPerformanceMetricSubscription": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkperformancemetricsubscription.html",
    "Properties": {
      "Destination": "String",
      "Metric": "String",
      "Source": "String",
      "Statistic": "String"
    }
  },
  "AWS::EC2::PlacementGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-placementgroup.html",
    "Properties": {
      "PartitionCount": "Integer",
      "SpreadLevel": "String",
      "Strategy": "String",
      "Tags": "Tag"
    }
  },
  "AWS::EC2::PrefixList": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-prefixlist.html",
    "Properties": {
      "AddressFamily": "String",
      "Entries": "Entry",
      "MaxEntries": "Integer",
      "PrefixListName": "String",
      "Tags": "Tag"
    }
  },
  "AWS::EC2::Route": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html",
    "Properties": {
      "CarrierGatewayId": "String",
      "CoreNetworkArn": "String",
      "DestinationCidrBlock": "String",
      "DestinationIpv6CidrBlock": "String",
      "DestinationPrefixListId": "String",
      "EgressOnlyInternetGatewayId": "String",
      "GatewayId": "String",
      "InstanceId": "String",
      "LocalGatewayId": "String",
      "NatGatewayId": "String",
      "NetworkInterfaceId": "String",
      "RouteTableId": "String",
      "TransitGatewayId": "String",
      "VpcEndpointId": "String",
      "VpcPeeringConnectionId": "String"
    }
  },
  "AWS::EC2::RouteTable": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routetable.html",
    "Properties": {
      "Tags": "Tag",
      "VpcId": "String"
    }
  },
  "AWS::EC2::SecurityGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroup.html",
    "Properties": {
      "GroupDescription": "String",
      "GroupName": "String",
      "SecurityGroupEgress": "Egress",
      "SecurityGroupIngress": "Ingress",
      "Tags": "Tag",
      "VpcId": "String"
    }
  },
  "AWS::EC2::SecurityGroupEgress": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroupegress.html",
    "Properties": {
      "CidrIp": "String",
      "CidrIpv6": "String",
      "Description": "String",
      "DestinationPrefixListId": "String",
      "DestinationSecurityGroupId": "String",
      "FromPort": "Integer",
      "GroupId": "String",
      "IpProtocol": "String",
      "ToPort": "Integer"
    }
  },
  "AWS::EC2::SecurityGroupIngress": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroupingress.html",
    "Properties": {
      "CidrIp": "String",
      "CidrIpv6": "String",
      "Description": "String",
      "FromPort": "Integer",
      "GroupId": "String",
      "GroupName": "String",
      "IpProtocol": "String",
      "SourcePrefixListId": "String",
      "SourceSecurityGroupId": "String",
      "SourceSecurityGroupName": "String",
      "SourceSecurityGroupOwnerId": "String",
      "ToPort": "Integer"
    }
  },
  "AWS::EC2::SnapshotBlockPublicAccess": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-snapshotblockpublicaccess.html",
    "Properties": {
      "State": "String"
    }
  },
  "AWS::EC2::SpotFleet": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-spotfleet.html",
    "Properties": {
      "SpotFleetRequestConfigData": "SpotFleetRequestConfigData"
    }
  },
  "AWS::EC2::Subnet": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html",
    "Properties": {
      "AssignIpv6AddressOnCreation": "Boolean",
      "AvailabilityZone": "String",
      "AvailabilityZoneId": "String",
      "CidrBlock": "String",
      "EnableDns64": "Boolean",
      "EnableLniAtDeviceIndex": "Integer",
      "Ipv4IpamPoolId": "String",
      "Ipv4NetmaskLength": "Integer",
      "Ipv6CidrBlock": "String",
      "Ipv6IpamPoolId": "String",
      "Ipv6Native": "Boolean",
      "Ipv6NetmaskLength": "Integer",
      "MapPublicIpOnLaunch": "Boolean",
      "OutpostArn": "String",
      "PrivateDnsNameOptionsOnLaunch": "PrivateDnsNameOptionsOnLaunch",
      "Tags": "Tag",
      "VpcId": "String"
    }
  },
  "AWS::EC2::SubnetCidrBlock": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetcidrblock.html",
    "Properties": {
      "Ipv6CidrBlock": "String",
      "Ipv6IpamPoolId": "String",
      "Ipv6NetmaskLength": "Integer",
      "SubnetId": "String"
    }
  },
  "AWS::EC2::SubnetNetworkAclAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetnetworkaclassociation.html",
    "Properties": {
      "NetworkAclId": "String",
      "SubnetId": "String"
    }
  },
  "AWS::EC2::SubnetRouteTableAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetroutetableassociation.html",
    "Properties": {
      "RouteTableId": "String",
      "SubnetId": "String"
    }
  },
  "AWS::EC2::TrafficMirrorFilter": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilter.html",
    "Properties": {
      "Description": "String",
      "NetworkServices": "String",
      "Tags": "Tag"
    }
  },
  "AWS::EC2::TrafficMirrorFilterRule": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html",
    "Properties": {
      "Description": "String",
      "DestinationCidrBlock": "String",
      "DestinationPortRange": "TrafficMirrorPortRange",
      "Protocol": "Integer",
      "RuleAction": "String",
      "RuleNumber": "Integer",
      "SourceCidrBlock": "String",
      "SourcePortRange": "TrafficMirrorPortRange",
      "Tags": "Tag",
      "TrafficDirection": "String",
      "TrafficMirrorFilterId": "String"
    }
  },
  "AWS::EC2::TrafficMirrorSession": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html",
    "Properties": {
      "Description": "String",
      "NetworkInterfaceId": "String",
      "PacketLength": "Integer",
      "SessionNumber": "Integer",
      "Tags": "Tag",
      "TrafficMirrorFilterId": "String",
      "TrafficMirrorTargetId": "String",
      "VirtualNetworkId": "Integer"
    }
  },
  "AWS::EC2::TrafficMirrorTarget": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrortarget.html",
    "Properties": {
      "Description": "String",
      "GatewayLoadBalancerEndpointId": "String",
      "NetworkInterfaceId": "String",
      "NetworkLoadBalancerArn": "String",
      "Tags": "Tag"
    }
  },
  "AWS::EC2::TransitGateway": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html",
    "Properties": {
      "AmazonSideAsn": "Integer",
      "AssociationDefaultRouteTableId": "String",
      "AutoAcceptSharedAttachments": "String",
      "DefaultRouteTableAssociation": "String",
      "DefaultRouteTablePropagation": "String",
      "Description": "String",
      "DnsSupport": "String",
      "MulticastSupport": "String",
      "PropagationDefaultRouteTableId": "String",
      "Tags": "Tag",
      "TransitGatewayCidrBlocks": "String",
      "VpnEcmpSupport": "String"
    }
  },
  "AWS::EC2::TransitGatewayAttachment": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html",
    "Properties": {
      "Options": "Options",
      "SubnetIds": "String",
      "Tags": "Tag",
      "TransitGatewayId": "String",
      "VpcId": "String"
    }
  },
  "AWS::EC2::TransitGatewayConnect": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayconnect.html",
    "Properties": {
      "Options": "TransitGatewayConnectOptions",
      "Tags": "Tag",
      "TransportTransitGatewayAttachmentId": "String"
    }
  },
  "AWS::EC2::TransitGatewayMulticastDomain": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomain.html",
    "Properties": {
      "Options": "Options",
      "Tags": "Tag",
      "TransitGatewayId": "String"
    }
  },
  "AWS::EC2::TransitGatewayMulticastDomainAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomainassociation.html",
    "Properties": {
      "SubnetId": "String",
      "TransitGatewayAttachmentId": "String",
      "TransitGatewayMulticastDomainId": "String"
    }
  },
  "AWS::EC2::TransitGatewayMulticastGroupMember": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupmember.html",
    "Properties": {
      "GroupIpAddress": "String",
      "NetworkInterfaceId": "String",
      "TransitGatewayMulticastDomainId": "String"
    }
  },
  "AWS::EC2::TransitGatewayMulticastGroupSource": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupsource.html",
    "Properties": {
      "GroupIpAddress": "String",
      "NetworkInterfaceId": "String",
      "TransitGatewayMulticastDomainId": "String"
    }
  },
  "AWS::EC2::TransitGatewayPeeringAttachment": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html",
    "Properties": {
      "PeerAccountId": "String",
      "PeerRegion": "String",
      "PeerTransitGatewayId": "String",
      "Tags": "Tag",
      "TransitGatewayId": "String"
    }
  },
  "AWS::EC2::TransitGatewayRoute": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html",
    "Properties": {
      "Blackhole": "Boolean",
      "DestinationCidrBlock": "String",
      "TransitGatewayAttachmentId": "String",
      "TransitGatewayRouteTableId": "String"
    }
  },
  "AWS::EC2::TransitGatewayRouteTable": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetable.html",
    "Properties": {
      "Tags": "Tag",
      "TransitGatewayId": "String"
    }
  },
  "AWS::EC2::TransitGatewayRouteTableAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetableassociation.html",
    "Properties": {
      "TransitGatewayAttachmentId": "String",
      "TransitGatewayRouteTableId": "String"
    }
  },
  "AWS::EC2::TransitGatewayRouteTablePropagation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetablepropagation.html",
    "Properties": {
      "TransitGatewayAttachmentId": "String",
      "TransitGatewayRouteTableId": "String"
    }
  },
  "AWS::EC2::TransitGatewayVpcAttachment": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html",
    "Properties": {
      "AddSubnetIds": "String",
      "Options": "Options",
      "RemoveSubnetIds": "String",
      "SubnetIds": "String",
      "Tags": "Tag",
      "TransitGatewayId": "String",
      "VpcId": "String"
    }
  },
  "AWS::EC2::VPC": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html",
    "Properties": {
      "CidrBlock": "String",
      "EnableDnsHostnames": "Boolean",
      "EnableDnsSupport": "Boolean",
      "InstanceTenancy": "String",
      "Ipv4IpamPoolId": "String",
      "Ipv4NetmaskLength": "Integer",
      "Tags": "Tag"
    }
  },
  "AWS::EC2::VPCCidrBlock": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html",
    "Properties": {
      "AmazonProvidedIpv6CidrBlock": "Boolean",
      "CidrBlock": "String",
      "Ipv4IpamPoolId": "String",
      "Ipv4NetmaskLength": "Integer",
      "Ipv6CidrBlock": "String",
      "Ipv6IpamPoolId": "String",
      "Ipv6NetmaskLength": "Integer",
      "Ipv6Pool": "String",
      "VpcId": "String"
    }
  },
  "AWS::EC2::VPCDHCPOptionsAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcdhcpoptionsassociation.html",
    "Properties": {
      "DhcpOptionsId": "String",
      "VpcId": "String"
    }
  },
  "AWS::EC2::VPCEndpoint": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html",
    "Properties": {
      "PolicyDocument": "Json",
      "PrivateDnsEnabled": "Boolean",
      "RouteTableIds": "String",
      "SecurityGroupIds": "String",
      "ServiceName": "String",
      "SubnetIds": "String",
      "VpcEndpointType": "String",
      "VpcId": "String"
    }
  },
  "AWS::EC2::VPCEndpointConnectionNotification": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html",
    "Properties": {
      "ConnectionEvents": "String",
      "ConnectionNotificationArn": "String",
      "ServiceId": "String",
      "VPCEndpointId": "String"
    }
  },
  "AWS::EC2::VPCEndpointService": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html",
    "Properties": {
      "AcceptanceRequired": "Boolean",
      "ContributorInsightsEnabled": "Boolean",
      "GatewayLoadBalancerArns": "String",
      "NetworkLoadBalancerArns": "String",
      "PayerResponsibility": "String"
    }
  },
  "AWS::EC2::VPCEndpointServicePermissions": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservicepermissions.html",
    "Properties": {
      "AllowedPrincipals": "String",
      "ServiceId": "String"
    }
  },
  "AWS::EC2::VPCGatewayAttachment": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcgatewayattachment.html",
    "Properties": {
      "InternetGatewayId": "String",
      "VpcId": "String",
      "VpnGatewayId": "String"
    }
  },
  "AWS::EC2::VPCPeeringConnection": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html",
    "Properties": {
      "PeerOwnerId": "String",
      "PeerRegion": "String",
      "PeerRoleArn": "String",
      "PeerVpcId": "String",
      "Tags": "Tag",
      "VpcId": "String"
    }
  },
  "AWS::EC2::VPNConnection": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpnconnection.html",
    "Properties": {
      "CustomerGatewayId": "String",
      "EnableAcceleration": "Boolean",
      "LocalIpv4NetworkCidr": "String",
      "LocalIpv6NetworkCidr": "String",
      "OutsideIpAddressType": "String",
      "RemoteIpv4NetworkCidr": "String",
      "RemoteIpv6NetworkCidr": "String",
      "StaticRoutesOnly": "Boolean",
      "Tags": "Tag",
      "TransitGatewayId": "String",
      "TransportTransitGatewayAttachmentId": "String",
      "TunnelInsideIpVersion": "String",
      "Type": "String",
      "VpnGatewayId": "String",
      "VpnTunnelOptionsSpecifications": "VpnTunnelOptionsSpecification"
    }
  },
  "AWS::EC2::VPNConnectionRoute": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpnconnectionroute.html",
    "Properties": {
      "DestinationCidrBlock": "String",
      "VpnConnectionId": "String"
    }
  },
  "AWS::EC2::VPNGateway": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpngateway.html",
    "Properties": {
      "AmazonSideAsn": "Integer",
      "Tags": "Tag",
      "Type": "String"
    }
  },
  "AWS::EC2::VPNGatewayRoutePropagation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpngatewayroutepropagation.html",
    "Properties": {
      "RouteTableIds": "String",
      "VpnGatewayId": "String"
    }
  },
  "AWS::EC2::VerifiedAccessEndpoint": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessendpoint.html",
    "Properties": {
      "ApplicationDomain": "String",
      "AttachmentType": "String",
      "Description": "String",
      "DomainCertificateArn": "String",
      "EndpointDomainPrefix": "String",
      "EndpointType": "String",
      "LoadBalancerOptions": "LoadBalancerOptions",
      "NetworkInterfaceOptions": "NetworkInterfaceOptions",
      "PolicyDocument": "String",
      "PolicyEnabled": "Boolean",
      "SecurityGroupIds": "String",
      "SseSpecification": "SseSpecification",
      "Tags": "Tag",
      "VerifiedAccessGroupId": "String"
    }
  },
  "AWS::EC2::VerifiedAccessGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessgroup.html",
    "Properties": {
      "Description": "String",
      "PolicyDocument": "String",
      "PolicyEnabled": "Boolean",
      "SseSpecification": "SseSpecification",
      "Tags": "Tag",
      "VerifiedAccessInstanceId": "String"
    }
  },
  "AWS::EC2::VerifiedAccessInstance": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessinstance.html",
    "Properties": {
      "Description": "String",
      "FipsEnabled": "Boolean",
      "LoggingConfigurations": "VerifiedAccessLogs",
      "Tags": "Tag",
      "VerifiedAccessTrustProviderIds": "String",
      "VerifiedAccessTrustProviders": "VerifiedAccessTrustProvider"
    }
  },
  "AWS::EC2::VerifiedAccessTrustProvider": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccesstrustprovider.html",
    "Properties": {
      "Description": "String",
      "DeviceOptions": "DeviceOptions",
      "DeviceTrustProviderType": "String",
      "OidcOptions": "OidcOptions",
      "PolicyReferenceName": "String",
      "SseSpecification": "SseSpecification",
      "Tags": "Tag",
      "TrustProviderType": "String",
      "UserTrustProviderType": "String"
    }
  },
  "AWS::EC2::Volume": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-volume.html",
    "Properties": {
      "AutoEnableIO": "Boolean",
      "AvailabilityZone": "String",
      "Encrypted": "Boolean",
      "Iops": "Integer",
      "KmsKeyId": "String",
      "MultiAttachEnabled": "Boolean",
      "OutpostArn": "String",
      "Size": "Integer",
      "SnapshotId": "String",
      "Tags": "Tag",
      "Throughput": "Integer",
      "VolumeType": "String"
    }
  },
  "AWS::EC2::VolumeAttachment": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-volumeattachment.html",
    "Properties": {
      "Device": "String",
      "InstanceId": "String",
      "VolumeId": "String"
    }
  },
  "AWS::ECR::PublicRepository": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html",
    "Properties": {
      "RepositoryCatalogData": "RepositoryCatalogData",
      "RepositoryName": "String",
      "RepositoryPolicyText": "Json",
      "Tags": "Tag"
    }
  },
  "AWS::ECR::PullThroughCacheRule": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-pullthroughcacherule.html",
    "Properties": {
      "CredentialArn": "String",
      "EcrRepositoryPrefix": "String",
      "UpstreamRegistry": "String",
      "UpstreamRegistryUrl": "String"
    }
  },
  "AWS::ECR::RegistryPolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html",
    "Properties": {
      "PolicyText": "Json"
    }
  },
  "AWS::ECR::ReplicationConfiguration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html",
    "Properties": {
      "ReplicationConfiguration": "ReplicationConfiguration"
    }
  },
  "AWS::ECR::Repository": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html",
    "Properties": {
      "EmptyOnDelete": "Boolean",
      "EncryptionConfiguration": "EncryptionConfiguration",
      "ImageScanningConfiguration": "ImageScanningConfiguration",
      "ImageTagMutability": "String",
      "LifecyclePolicy": "LifecyclePolicy",
      "RepositoryName": "String",
      "RepositoryPolicyText": "Json",
      "Tags": "Tag"
    }
  },
  "AWS::ECR::RepositoryCreationTemplate": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repositorycreationtemplate.html",
    "Properties": {
      "AppliedFor": "String",
      "CustomRoleArn": "String",
      "Description": "String",
      "EncryptionConfiguration": "EncryptionConfiguration",
      "ImageTagMutability": "String",
      "LifecyclePolicy": "String",
      "Prefix": "String",
      "RepositoryPolicy": "String",
      "ResourceTags": "Tag"
    }
  },
  "AWS::ECS::CapacityProvider": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-capacityprovider.html",
    "Properties": {
      "AutoScalingGroupProvider": "AutoScalingGroupProvider",
      "Name": "String",
      "Tags": "Tag"
    }
  },
  "AWS::ECS::Cluster": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-cluster.html",
    "Properties": {
      "CapacityProviders": "String",
      "ClusterName": "String",
      "ClusterSettings": "ClusterSettings",
      "Configuration": "ClusterConfiguration",
      "DefaultCapacityProviderStrategy": "CapacityProviderStrategyItem",
      "ServiceConnectDefaults": "ServiceConnectDefaults",
      "Tags": "Tag"
    }
  },
  "AWS::ECS::ClusterCapacityProviderAssociations": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-clustercapacityproviderassociations.html",
    "Properties": {
      "CapacityProviders": "String",
      "Cluster": "String",
      "DefaultCapacityProviderStrategy": "CapacityProviderStrategy"
    }
  },
  "AWS::ECS::PrimaryTaskSet": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-primarytaskset.html",
    "Properties": {
      "Cluster": "String",
      "Service": "String",
      "TaskSetId": "String"
    }
  },
  "AWS::ECS::Service": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html",
    "Properties": {
      "CapacityProviderStrategy": "CapacityProviderStrategyItem",
      "Cluster": "String",
      "DeploymentConfiguration": "DeploymentConfiguration",
      "DeploymentController": "DeploymentController",
      "DesiredCount": "Integer",
      "EnableECSManagedTags": "Boolean",
      "EnableExecuteCommand": "Boolean",
      "HealthCheckGracePeriodSeconds": "Integer",
      "LaunchType": "String",
      "LoadBalancers": "LoadBalancer",
      "NetworkConfiguration": "NetworkConfiguration",
      "PlacementConstraints": "PlacementConstraint",
      "PlacementStrategies": "PlacementStrategy",
      "PlatformVersion": "String",
      "PropagateTags": "String",
      "Role": "String",
      "SchedulingStrategy": "String",
      "ServiceConnectConfiguration": "ServiceConnectConfiguration",
      "ServiceName": "String",
      "ServiceRegistries": "ServiceRegistry",
      "Tags": "Tag",
      "TaskDefinition": "String",
      "VolumeConfigurations": "ServiceVolumeConfiguration"
    }
  },
  "AWS::ECS::TaskDefinition": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html",
    "Properties": {
      "ContainerDefinitions": "ContainerDefinition",
      "Cpu": "String",
      "EphemeralStorage": "EphemeralStorage",
      "ExecutionRoleArn": "String",
      "Family": "String",
      "InferenceAccelerators": "InferenceAccelerator",
      "IpcMode": "String",
      "Memory": "String",
      "NetworkMode": "String",
      "PidMode": "String",
      "PlacementConstraints": "TaskDefinitionPlacementConstraint",
      "ProxyConfiguration": "ProxyConfiguration",
      "RequiresCompatibilities": "String",
      "RuntimePlatform": "RuntimePlatform",
      "Tags": "Tag",
      "TaskRoleArn": "String",
      "Volumes": "Volume"
    }
  },
  "AWS::ECS::TaskSet": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html",
    "Properties": {
      "Cluster": "String",
      "ExternalId": "String",
      "LaunchType": "String",
      "LoadBalancers": "LoadBalancer",
      "NetworkConfiguration": "NetworkConfiguration",
      "PlatformVersion": "String",
      "Scale": "Scale",
      "Service": "String",
      "ServiceRegistries": "ServiceRegistry",
      "Tags": "Tag",
      "TaskDefinition": "String"
    }
  },
  "AWS::EFS::AccessPoint": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-accesspoint.html",
    "Properties": {
      "AccessPointTags": "AccessPointTag",
      "ClientToken": "String",
      "FileSystemId": "String",
      "PosixUser": "PosixUser",
      "RootDirectory": "RootDirectory"
    }
  },
  "AWS::EFS::FileSystem": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-filesystem.html",
    "Properties": {
      "AvailabilityZoneName": "String",
      "BackupPolicy": "BackupPolicy",
      "BypassPolicyLockoutSafetyCheck": "Boolean",
      "Encrypted": "Boolean",
      "FileSystemPolicy": "Json",
      "FileSystemProtection": "FileSystemProtection",
      "FileSystemTags": "ElasticFileSystemTag",
      "KmsKeyId": "String",
      "LifecyclePolicies": "LifecyclePolicy",
      "PerformanceMode": "String",
      "ProvisionedThroughputInMibps": "Double",
      "ReplicationConfiguration": "ReplicationConfiguration",
      "ThroughputMode": "String"
    }
  },
  "AWS::EFS::MountTarget": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-mounttarget.html",
    "Properties": {
      "FileSystemId": "String",
      "IpAddress": "String",
      "SecurityGroups": "String",
      "SubnetId": "String"
    }
  },
  "AWS::EKS::AccessEntry": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-accessentry.html",
    "Properties": {
      "AccessPolicies": "AccessPolicy",
      "ClusterName": "String",
      "KubernetesGroups": "String",
      "PrincipalArn": "String",
      "Tags": "Tag",
      "Type": "String",
      "Username": "String"
    }
  },
  "AWS::EKS::Addon": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html",
    "Properties": {
      "AddonName": "String",
      "AddonVersion": "String",
      "ClusterName": "String",
      "ConfigurationValues": "String",
      "PodIdentityAssociations": "PodIdentityAssociation",
      "PreserveOnDelete": "Boolean",
      "ResolveConflicts": "String",
      "ServiceAccountRoleArn": "String",
      "Tags": "Tag"
    }
  },
  "AWS::EKS::Cluster": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html",
    "Properties": {
      "AccessConfig": "AccessConfig",
      "BootstrapSelfManagedAddons": "Boolean",
      "EncryptionConfig": "EncryptionConfig",
      "KubernetesNetworkConfig": "KubernetesNetworkConfig",
      "Logging": "Logging",
      "Name": "String",
      "OutpostConfig": "OutpostConfig",
      "ResourcesVpcConfig": "ResourcesVpcConfig",
      "RoleArn": "String",
      "Tags": "Tag",
      "UpgradePolicy": "UpgradePolicy",
      "Version": "String"
    }
  },
  "AWS::EKS::FargateProfile": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html",
    "Properties": {
      "ClusterName": "String",
      "FargateProfileName": "String",
      "PodExecutionRoleArn": "String",
      "Selectors": "Selector",
      "Subnets": "String",
      "Tags": "Tag"
    }
  },
  "AWS::EKS::IdentityProviderConfig": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-identityproviderconfig.html",
    "Properties": {
      "ClusterName": "String",
      "IdentityProviderConfigName": "String",
      "Oidc": "OidcIdentityProviderConfig",
      "Tags": "Tag",
      "Type": "String"
    }
  },
  "AWS::EKS::Nodegroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html",
    "Properties": {
      "AmiType": "String",
      "CapacityType": "String",
      "ClusterName": "String",
      "DiskSize": "Integer",
      "ForceUpdateEnabled": "Boolean",
      "InstanceTypes": "String",
      "Labels": "Map",
      "LaunchTemplate": "LaunchTemplateSpecification",
      "NodeRole": "String",
      "NodegroupName": "String",
      "ReleaseVersion": "String",
      "RemoteAccess": "RemoteAccess",
      "ScalingConfig": "ScalingConfig",
      "Subnets": "String",
      "Tags": "Map",
      "Taints": "Taint",
      "UpdateConfig": "UpdateConfig",
      "Version": "String"
    }
  },
  "AWS::EKS::PodIdentityAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-podidentityassociation.html",
    "Properties": {
      "ClusterName": "String",
      "Namespace": "String",
      "RoleArn": "String",
      "ServiceAccount": "String",
      "Tags": "Tag"
    }
  },
  "AWS::EMR::Cluster": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html",
    "Properties": {
      "AdditionalInfo": "Json",
      "Applications": "Application",
      "AutoScalingRole": "String",
      "AutoTerminationPolicy": "AutoTerminationPolicy",
      "BootstrapActions": "BootstrapActionConfig",
      "Configurations": "Configuration",
      "CustomAmiId": "String",
      "EbsRootVolumeIops": "Integer",
      "EbsRootVolumeSize": "Integer",
      "EbsRootVolumeThroughput": "Integer",
      "Instances": "JobFlowInstancesConfig",
      "JobFlowRole": "String",
      "KerberosAttributes": "KerberosAttributes",
      "LogEncryptionKmsKeyId": "String",
      "LogUri": "String",
      "ManagedScalingPolicy": "ManagedScalingPolicy",
      "Name": "String",
      "OSReleaseLabel": "String",
      "PlacementGroupConfigs": "PlacementGroupConfig",
      "ReleaseLabel": "String",
      "ScaleDownBehavior": "String",
      "SecurityConfiguration": "String",
      "ServiceRole": "String",
      "StepConcurrencyLevel": "Integer",
      "Steps": "StepConfig",
      "Tags": "Tag",
      "VisibleToAllUsers": "Boolean"
    }
  },
  "AWS::EMR::InstanceFleetConfig": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-instancefleetconfig.html",
    "Properties": {
      "ClusterId": "String",
      "InstanceFleetType": "String",
      "InstanceTypeConfigs": "InstanceTypeConfig",
      "LaunchSpecifications": "InstanceFleetProvisioningSpecifications",
      "Name": "String",
      "TargetOnDemandCapacity": "Integer",
      "TargetSpotCapacity": "Integer"
    }
  },
  "AWS::EMR::InstanceGroupConfig": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-instancegroupconfig.html",
    "Properties": {
      "AutoScalingPolicy": "AutoScalingPolicy",
      "BidPrice": "String",
      "Configurations": "Configuration",
      "CustomAmiId": "String",
      "EbsConfiguration": "EbsConfiguration",
      "InstanceCount": "Integer",
      "InstanceRole": "String",
      "InstanceType": "String",
      "JobFlowId": "String",
      "Market": "String",
      "Name": "String"
    }
  },
  "AWS::EMR::SecurityConfiguration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-securityconfiguration.html",
    "Properties": {
      "Name": "String",
      "SecurityConfiguration": "Json"
    }
  },
  "AWS::EMR::Step": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-step.html",
    "Properties": {
      "ActionOnFailure": "String",
      "HadoopJarStep": "HadoopJarStepConfig",
      "JobFlowId": "String",
      "Name": "String"
    }
  },
  "AWS::EMR::Studio": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html",
    "Properties": {
      "AuthMode": "String",
      "DefaultS3Location": "String",
      "Description": "String",
      "EncryptionKeyArn": "String",
      "EngineSecurityGroupId": "String",
      "IdcInstanceArn": "String",
      "IdcUserAssignment": "String",
      "IdpAuthUrl": "String",
      "IdpRelayStateParameterName": "String",
      "Name": "String",
      "ServiceRole": "String",
      "SubnetIds": "String",
      "Tags": "Tag",
      "TrustedIdentityPropagationEnabled": "Boolean",
      "UserRole": "String",
      "VpcId": "String",
      "WorkspaceSecurityGroupId": "String"
    }
  },
  "AWS::EMR::StudioSessionMapping": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studiosessionmapping.html",
    "Properties": {
      "IdentityName": "String",
      "IdentityType": "String",
      "SessionPolicyArn": "String",
      "StudioId": "String"
    }
  },
  "AWS::EMR::WALWorkspace": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-walworkspace.html",
    "Properties": {
      "Tags": "Tag",
      "WALWorkspaceName": "String"
    }
  },
  "AWS::EMRContainers::VirtualCluster": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrcontainers-virtualcluster.html",
    "Properties": {
      "ContainerProvider": "ContainerProvider",
      "Name": "String",
      "Tags": "Tag"
    }
  },
  "AWS::EMRServerless::Application": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html",
    "Properties": {
      "Architecture": "String",
      "AutoStartConfiguration": "AutoStartConfiguration",
      "AutoStopConfiguration": "AutoStopConfiguration",
      "ImageConfiguration": "ImageConfigurationInput",
      "InitialCapacity": "InitialCapacityConfigKeyValuePair",
      "InteractiveConfiguration": "InteractiveConfiguration",
      "MaximumCapacity": "MaximumAllowedResources",
      "MonitoringConfiguration": "MonitoringConfiguration",
      "Name": "String",
      "NetworkConfiguration": "NetworkConfiguration",
      "ReleaseLabel": "String",
      "RuntimeConfiguration": "ConfigurationObject",
      "Tags": "Tag",
      "Type": "String",
      "WorkerTypeSpecifications": "Map"
    }
  },
  "AWS::ElastiCache::CacheCluster": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html",
    "Properties": {
      "AZMode": "String",
      "AutoMinorVersionUpgrade": "Boolean",
      "CacheNodeType": "String",
      "CacheParameterGroupName": "String",
      "CacheSecurityGroupNames": "String",
      "CacheSubnetGroupName": "String",
      "ClusterName": "String",
      "Engine": "String",
      "EngineVersion": "String",
      "IpDiscovery": "String",
      "LogDeliveryConfigurations": "LogDeliveryConfigurationRequest",
      "NetworkType": "String",
      "NotificationTopicArn": "String",
      "NumCacheNodes": "Integer",
      "Port": "Integer",
      "PreferredAvailabilityZone": "String",
      "PreferredAvailabilityZones": "String",
      "PreferredMaintenanceWindow": "String",
      "SnapshotArns": "String",
      "SnapshotName": "String",
      "SnapshotRetentionLimit": "Integer",
      "SnapshotWindow": "String",
      "Tags": "Tag",
      "TransitEncryptionEnabled": "Boolean",
      "VpcSecurityGroupIds": "String"
    }
  },
  "AWS::ElastiCache::GlobalReplicationGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-globalreplicationgroup.html",
    "Properties": {
      "AutomaticFailoverEnabled": "Boolean",
      "CacheNodeType": "String",
      "CacheParameterGroupName": "String",
      "EngineVersion": "String",
      "GlobalNodeGroupCount": "Integer",
      "GlobalReplicationGroupDescription": "String",
      "GlobalReplicationGroupIdSuffix": "String",
      "Members": "GlobalReplicationGroupMember",
      "RegionalConfigurations": "RegionalConfiguration"
    }
  },
  "AWS::ElastiCache::ParameterGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-parametergroup.html",
    "Properties": {
      "CacheParameterGroupFamily": "String",
      "Description": "String",
      "Properties": "Map",
      "Tags": "Tag"
    }
  },
  "AWS::ElastiCache::ReplicationGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html",
    "Properties": {
      "AtRestEncryptionEnabled": "Boolean",
      "AuthToken": "String",
      "AutoMinorVersionUpgrade": "Boolean",
      "AutomaticFailoverEnabled": "Boolean",
      "CacheNodeType": "String",
      "CacheParameterGroupName": "String",
      "CacheSecurityGroupNames": "String",
      "CacheSubnetGroupName": "String",
      "ClusterMode": "String",
      "DataTieringEnabled": "Boolean",
      "Engine": "String",
      "EngineVersion": "String",
      "GlobalReplicationGroupId": "String",
      "IpDiscovery": "String",
      "KmsKeyId": "String",
      "LogDeliveryConfigurations": "LogDeliveryConfigurationRequest",
      "MultiAZEnabled": "Boolean",
      "NetworkType": "String",
      "NodeGroupConfiguration": "NodeGroupConfiguration",
      "NotificationTopicArn": "String",
      "NumCacheClusters": "Integer",
      "NumNodeGroups": "Integer",
      "Port": "Integer",
      "PreferredCacheClusterAZs": "String",
      "PreferredMaintenanceWindow": "String",
      "PrimaryClusterId": "String",
      "ReplicasPerNodeGroup": "Integer",
      "ReplicationGroupDescription": "String",
      "ReplicationGroupId": "String",
      "SecurityGroupIds": "String",
      "SnapshotArns": "String",
      "SnapshotName": "String",
      "SnapshotRetentionLimit": "Integer",
      "SnapshotWindow": "String",
      "SnapshottingClusterId": "String",
      "Tags": "Tag",
      "TransitEncryptionEnabled": "Boolean",
      "TransitEncryptionMode": "String",
      "UserGroupIds": "String"
    }
  },
  "AWS::ElastiCache::SecurityGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-security-group.html",
    "Properties": {
      "Description": "String",
      "Tags": "Tag"
    }
  },
  "AWS::ElastiCache::SecurityGroupIngress": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-security-group-ingress.html",
    "Properties": {
      "CacheSecurityGroupName": "String",
      "EC2SecurityGroupName": "String",
      "EC2SecurityGroupOwnerId": "String"
    }
  },
  "AWS::ElastiCache::ServerlessCache": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-serverlesscache.html",
    "Properties": {
      "CacheUsageLimits": "CacheUsageLimits",
      "DailySnapshotTime": "String",
      "Description": "String",
      "Endpoint": "Endpoint",
      "Engine": "String",
      "FinalSnapshotName": "String",
      "KmsKeyId": "String",
      "MajorEngineVersion": "String",
      "ReaderEndpoint": "Endpoint",
      "SecurityGroupIds": "String",
      "ServerlessCacheName": "String",
      "SnapshotArnsToRestore": "String",
      "SnapshotRetentionLimit": "Integer",
      "SubnetIds": "String",
      "Tags": "Tag",
      "UserGroupId": "String"
    }
  },
  "AWS::ElastiCache::SubnetGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-subnetgroup.html",
    "Properties": {
      "CacheSubnetGroupName": "String",
      "Description": "String",
      "SubnetIds": "String",
      "Tags": "Tag"
    }
  },
  "AWS::ElastiCache::User": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-user.html",
    "Properties": {
      "AccessString": "String",
      "AuthenticationMode": "AuthenticationMode",
      "Engine": "String",
      "NoPasswordRequired": "Boolean",
      "Passwords": "String",
      "Tags": "Tag",
      "UserId": "String",
      "UserName": "String"
    }
  },
  "AWS::ElastiCache::UserGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-usergroup.html",
    "Properties": {
      "Engine": "String",
      "Tags": "Tag",
      "UserGroupId": "String",
      "UserIds": "String"
    }
  },
  "AWS::ElasticBeanstalk::Application": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticbeanstalk-application.html",
    "Properties": {
      "ApplicationName": "String",
      "Description": "String",
      "ResourceLifecycleConfig": "ApplicationResourceLifecycleConfig"
    }
  },
  "AWS::ElasticBeanstalk::ApplicationVersion": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticbeanstalk-applicationversion.html",
    "Properties": {
      "ApplicationName": "String",
      "Description": "String",
      "SourceBundle": "SourceBundle"
    }
  },
  "AWS::ElasticBeanstalk::ConfigurationTemplate": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticbeanstalk-configurationtemplate.html",
    "Properties": {
      "ApplicationName": "String",
      "Description": "String",
      "EnvironmentId": "String",
      "OptionSettings": "ConfigurationOptionSetting",
      "PlatformArn": "String",
      "SolutionStackName": "String",
      "SourceConfiguration": "SourceConfiguration"
    }
  },
  "AWS::ElasticBeanstalk::Environment": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticbeanstalk-environment.html",
    "Properties": {
      "ApplicationName": "String",
      "CNAMEPrefix": "String",
      "Description": "String",
      "EnvironmentName": "String",
      "OperationsRole": "String",
      "OptionSettings": "OptionSetting",
      "PlatformArn": "String",
      "SolutionStackName": "String",
      "Tags": "Tag",
      "TemplateName": "String",
      "Tier": "Tier",
      "VersionLabel": "String"
    }
  },
  "AWS::ElasticLoadBalancing::LoadBalancer": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html",
    "Properties": {
      "AccessLoggingPolicy": "AccessLoggingPolicy",
      "AppCookieStickinessPolicy": "AppCookieStickinessPolicy",
      "AvailabilityZones": "String",
      "ConnectionDrainingPolicy": "ConnectionDrainingPolicy",
      "ConnectionSettings": "ConnectionSettings",
      "CrossZone": "Boolean",
      "HealthCheck": "HealthCheck",
      "Instances": "String",
      "LBCookieStickinessPolicy": "LBCookieStickinessPolicy",
      "Listeners": "Listeners",
      "LoadBalancerName": "String",
      "Policies": "Policies",
      "Scheme": "String",
      "SecurityGroups": "String",
      "Subnets": "String",
      "Tags": "Tag"
    }
  },
  "AWS::ElasticLoadBalancingV2::Listener": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html",
    "Properties": {
      "AlpnPolicy": "String",
      "Certificates": "Certificate",
      "DefaultActions": "Action",
      "ListenerAttributes": "ListenerAttribute",
      "LoadBalancerArn": "String",
      "MutualAuthentication": "MutualAuthentication",
      "Port": "Integer",
      "Protocol": "String",
      "SslPolicy": "String"
    }
  },
  "AWS::ElasticLoadBalancingV2::ListenerCertificate": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenercertificate.html",
    "Properties": {
      "Certificates": "Certificate",
      "ListenerArn": "String"
    }
  },
  "AWS::ElasticLoadBalancingV2::ListenerRule": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenerrule.html",
    "Properties": {
      "Actions": "Action",
      "Conditions": "RuleCondition",
      "ListenerArn": "String",
      "Priority": "Integer"
    }
  },
  "AWS::ElasticLoadBalancingV2::LoadBalancer": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html",
    "Properties": {
      "EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic": "String",
      "IpAddressType": "String",
      "LoadBalancerAttributes": "LoadBalancerAttribute",
      "Name": "String",
      "Scheme": "String",
      "SecurityGroups": "String",
      "SubnetMappings": "SubnetMapping",
      "Subnets": "String",
      "Tags": "Tag",
      "Type": "String"
    }
  },
  "AWS::ElasticLoadBalancingV2::TargetGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html",
    "Properties": {
      "HealthCheckEnabled": "Boolean",
      "HealthCheckIntervalSeconds": "Integer",
      "HealthCheckPath": "String",
      "HealthCheckPort": "String",
      "HealthCheckProtocol": "String",
      "HealthCheckTimeoutSeconds": "Integer",
      "HealthyThresholdCount": "Integer",
      "IpAddressType": "String",
      "Matcher": "Matcher",
      "Name": "String",
      "Port": "Integer",
      "Protocol": "String",
      "ProtocolVersion": "String",
      "Tags": "Tag",
      "TargetGroupAttributes": "TargetGroupAttribute",
      "TargetType": "String",
      "Targets": "TargetDescription",
      "UnhealthyThresholdCount": "Integer",
      "VpcId": "String"
    }
  },
  "AWS::ElasticLoadBalancingV2::TrustStore": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-truststore.html",
    "Properties": {
      "CaCertificatesBundleS3Bucket": "String",
      "CaCertificatesBundleS3Key": "String",
      "CaCertificatesBundleS3ObjectVersion": "String",
      "Name": "String",
      "Tags": "Tag"
    }
  },
  "AWS::ElasticLoadBalancingV2::TrustStoreRevocation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-truststorerevocation.html",
    "Properties": {
      "RevocationContents": "RevocationContent",
      "TrustStoreArn": "String"
    }
  },
  "AWS::Elasticsearch::Domain": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html",
    "Properties": {
      "AccessPolicies": "Json",
      "AdvancedOptions": "Map",
      "AdvancedSecurityOptions": "AdvancedSecurityOptionsInput",
      "CognitoOptions": "CognitoOptions",
      "DomainEndpointOptions": "DomainEndpointOptions",
      "DomainName": "String",
      "EBSOptions": "EBSOptions",
      "ElasticsearchClusterConfig": "ElasticsearchClusterConfig",
      "ElasticsearchVersion": "String",
      "EncryptionAtRestOptions": "EncryptionAtRestOptions",
      "LogPublishingOptions": "Map",
      "NodeToNodeEncryptionOptions": "NodeToNodeEncryptionOptions",
      "SnapshotOptions": "SnapshotOptions",
      "Tags": "Tag",
      "VPCOptions": "VPCOptions"
    }
  },
  "AWS::EntityResolution::IdMappingWorkflow": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-idmappingworkflow.html",
    "Properties": {
      "Description": "String",
      "IdMappingTechniques": "IdMappingTechniques",
      "InputSourceConfig": "IdMappingWorkflowInputSource",
      "OutputSourceConfig": "IdMappingWorkflowOutputSource",
      "RoleArn": "String",
      "Tags": "Tag",
      "WorkflowName": "String"
    }
  },
  "AWS::EntityResolution::IdNamespace": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-idnamespace.html",
    "Properties": {
      "Description": "String",
      "IdMappingWorkflowProperties": "IdNamespaceIdMappingWorkflowProperties",
      "IdNamespaceName": "String",
      "InputSourceConfig": "IdNamespaceInputSource",
      "RoleArn": "String",
      "Tags": "Tag",
      "Type": "String"
    }
  },
  "AWS::EntityResolution::MatchingWorkflow": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-matchingworkflow.html",
    "Properties": {
      "Description": "String",
      "IncrementalRunConfig": "IncrementalRunConfig",
      "InputSourceConfig": "InputSource",
      "OutputSourceConfig": "OutputSource",
      "ResolutionTechniques": "ResolutionTechniques",
      "RoleArn": "String",
      "Tags": "Tag",
      "WorkflowName": "String"
    }
  },
  "AWS::EntityResolution::PolicyStatement": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-policystatement.html",
    "Properties": {
      "Action": "String",
      "Arn": "String",
      "Condition": "String",
      "Effect": "String",
      "Principal": "String",
      "StatementId": "String"
    }
  },
  "AWS::EntityResolution::SchemaMapping": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-schemamapping.html",
    "Properties": {
      "Description": "String",
      "MappedInputFields": "SchemaInputAttribute",
      "SchemaName": "String",
      "Tags": "Tag"
    }
  },
  "AWS::EventSchemas::Discoverer": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-discoverer.html",
    "Properties": {
      "CrossAccount": "Boolean",
      "Description": "String",
      "SourceArn": "String",
      "Tags": "TagsEntry"
    }
  },
  "AWS::EventSchemas::Registry": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-registry.html",
    "Properties": {
      "Description": "String",
      "RegistryName": "String",
      "Tags": "TagsEntry"
    }
  },
  "AWS::EventSchemas::RegistryPolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-registrypolicy.html",
    "Properties": {
      "Policy": "Json",
      "RegistryName": "String",
      "RevisionId": "String"
    }
  },
  "AWS::EventSchemas::Schema": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-schema.html",
    "Properties": {
      "Content": "String",
      "Description": "String",
      "RegistryName": "String",
      "SchemaName": "String",
      "Tags": "TagsEntry",
      "Type": "String"
    }
  },
  "AWS::Events::ApiDestination": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-apidestination.html",
    "Properties": {
      "ConnectionArn": "String",
      "Description": "String",
      "HttpMethod": "String",
      "InvocationEndpoint": "String",
      "InvocationRateLimitPerSecond": "Integer",
      "Name": "String"
    }
  },
  "AWS::Events::Archive": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-archive.html",
    "Properties": {
      "ArchiveName": "String",
      "Description": "String",
      "EventPattern": "Json",
      "RetentionDays": "Integer",
      "SourceArn": "String"
    }
  },
  "AWS::Events::Connection": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-connection.html",
    "Properties": {
      "AuthParameters": "AuthParameters",
      "AuthorizationType": "String",
      "Description": "String",
      "Name": "String"
    }
  },
  "AWS::Events::Endpoint": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-endpoint.html",
    "Properties": {
      "Description": "String",
      "EventBuses": "EndpointEventBus",
      "Name": "String",
      "ReplicationConfig": "ReplicationConfig",
      "RoleArn": "String",
      "RoutingConfig": "RoutingConfig"
    }
  },
  "AWS::Events::EventBus": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-eventbus.html",
    "Properties": {
      "DeadLetterConfig": "DeadLetterConfig",
      "Description": "String",
      "EventSourceName": "String",
      "KmsKeyIdentifier": "String",
      "Name": "String",
      "Policy": "Json",
      "Tags": "Tag"
    }
  },
  "AWS::Events::EventBusPolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-eventbuspolicy.html",
    "Properties": {
      "Action": "String",
      "Condition": "Condition",
      "EventBusName": "String",
      "Principal": "String",
      "Statement": "Json",
      "StatementId": "String"
    }
  },
  "AWS::Events::Rule": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-rule.html",
    "Properties": {
      "Description": "String",
      "EventBusName": "String",
      "EventPattern": "Json",
      "Name": "String",
      "RoleArn": "String",
      "ScheduleExpression": "String",
      "State": "String",
      "Targets": "Target"
    }
  },
  "AWS::Evidently::Experiment": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-experiment.html",
    "Properties": {
      "Description": "String",
      "MetricGoals": "MetricGoalObject",
      "Name": "String",
      "OnlineAbConfig": "OnlineAbConfigObject",
      "Project": "String",
      "RandomizationSalt": "String",
      "RemoveSegment": "Boolean",
      "RunningStatus": "RunningStatusObject",
      "SamplingRate": "Integer",
      "Segment": "String",
      "Tags": "Tag",
      "Treatments": "TreatmentObject"
    }
  },
  "AWS::Evidently::Feature": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-feature.html",
    "Properties": {
      "DefaultVariation": "String",
      "Description": "String",
      "EntityOverrides": "EntityOverride",
      "EvaluationStrategy": "String",
      "Name": "String",
      "Project": "String",
      "Tags": "Tag",
      "Variations": "VariationObject"
    }
  },
  "AWS::Evidently::Launch": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-launch.html",
    "Properties": {
      "Description": "String",
      "ExecutionStatus": "ExecutionStatusObject",
      "Groups": "LaunchGroupObject",
      "MetricMonitors": "MetricDefinitionObject",
      "Name": "String",
      "Project": "String",
      "RandomizationSalt": "String",
      "ScheduledSplitsConfig": "StepConfig",
      "Tags": "Tag"
    }
  },
  "AWS::Evidently::Project": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-project.html",
    "Properties": {
      "AppConfigResource": "AppConfigResourceObject",
      "DataDelivery": "DataDeliveryObject",
      "Description": "String",
      "Name": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Evidently::Segment": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-segment.html",
    "Properties": {
      "Description": "String",
      "Name": "String",
      "Pattern": "String",
      "Tags": "Tag"
    }
  },
  "AWS::FIS::ExperimentTemplate": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fis-experimenttemplate.html",
    "Properties": {
      "Actions": "Map",
      "Description": "String",
      "ExperimentOptions": "ExperimentTemplateExperimentOptions",
      "LogConfiguration": "ExperimentTemplateLogConfiguration",
      "RoleArn": "String",
      "StopConditions": "ExperimentTemplateStopCondition",
      "Tags": "Map",
      "Targets": "Map"
    }
  },
  "AWS::FIS::TargetAccountConfiguration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fis-targetaccountconfiguration.html",
    "Properties": {
      "AccountId": "String",
      "Description": "String",
      "ExperimentTemplateId": "String",
      "RoleArn": "String"
    }
  },
  "AWS::FMS::NotificationChannel": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-notificationchannel.html",
    "Properties": {
      "SnsRoleName": "String",
      "SnsTopicArn": "String"
    }
  },
  "AWS::FMS::Policy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html",
    "Properties": {
      "DeleteAllPolicyResources": "Boolean",
      "ExcludeMap": "IEMap",
      "ExcludeResourceTags": "Boolean",
      "IncludeMap": "IEMap",
      "PolicyDescription": "String",
      "PolicyName": "String",
      "RemediationEnabled": "Boolean",
      "ResourceSetIds": "String",
      "ResourceTags": "ResourceTag",
      "ResourceType": "String",
      "ResourceTypeList": "String",
      "ResourcesCleanUp": "Boolean",
      "SecurityServicePolicyData": "SecurityServicePolicyData",
      "Tags": "PolicyTag"
    }
  },
  "AWS::FMS::ResourceSet": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-resourceset.html",
    "Properties": {
      "Description": "String",
      "Name": "String",
      "ResourceTypeList": "String",
      "Resources": "String",
      "Tags": "Tag"
    }
  },
  "AWS::FSx::DataRepositoryAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-datarepositoryassociation.html",
    "Properties": {
      "BatchImportMetaDataOnCreate": "Boolean",
      "DataRepositoryPath": "String",
      "FileSystemId": "String",
      "FileSystemPath": "String",
      "ImportedFileChunkSize": "Integer",
      "S3": "S3",
      "Tags": "Tag"
    }
  },
  "AWS::FSx::FileSystem": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-filesystem.html",
    "Properties": {
      "BackupId": "String",
      "FileSystemType": "String",
      "FileSystemTypeVersion": "String",
      "KmsKeyId": "String",
      "LustreConfiguration": "LustreConfiguration",
      "OntapConfiguration": "OntapConfiguration",
      "OpenZFSConfiguration": "OpenZFSConfiguration",
      "SecurityGroupIds": "String",
      "StorageCapacity": "Integer",
      "StorageType": "String",
      "SubnetIds": "String",
      "Tags": "Tag",
      "WindowsConfiguration": "WindowsConfiguration"
    }
  },
  "AWS::FSx::Snapshot": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-snapshot.html",
    "Properties": {
      "Name": "String",
      "Tags": "Tag",
      "VolumeId": "String"
    }
  },
  "AWS::FSx::StorageVirtualMachine": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-storagevirtualmachine.html",
    "Properties": {
      "ActiveDirectoryConfiguration": "ActiveDirectoryConfiguration",
      "FileSystemId": "String",
      "Name": "String",
      "RootVolumeSecurityStyle": "String",
      "SvmAdminPassword": "String",
      "Tags": "Tag"
    }
  },
  "AWS::FSx::Volume": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-volume.html",
    "Properties": {
      "BackupId": "String",
      "Name": "String",
      "OntapConfiguration": "OntapConfiguration",
      "OpenZFSConfiguration": "OpenZFSConfiguration",
      "Tags": "Tag",
      "VolumeType": "String"
    }
  },
  "AWS::FinSpace::Environment": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-finspace-environment.html",
    "Properties": {
      "Description": "String",
      "FederationMode": "String",
      "FederationParameters": "FederationParameters",
      "KmsKeyId": "String",
      "Name": "String",
      "SuperuserParameters": "SuperuserParameters",
      "Tags": "Tag"
    }
  },
  "AWS::Forecast::Dataset": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-forecast-dataset.html",
    "Properties": {
      "DataFrequency": "String",
      "DatasetName": "String",
      "DatasetType": "String",
      "Domain": "String",
      "EncryptionConfig": "EncryptionConfig",
      "Schema": "Schema",
      "Tags": "TagsItems"
    }
  },
  "AWS::Forecast::DatasetGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-forecast-datasetgroup.html",
    "Properties": {
      "DatasetArns": "String",
      "DatasetGroupName": "String",
      "Domain": "String",
      "Tags": "Tag"
    }
  },
  "AWS::FraudDetector::Detector": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-detector.html",
    "Properties": {
      "AssociatedModels": "Model",
      "Description": "String",
      "DetectorId": "String",
      "DetectorVersionStatus": "String",
      "EventType": "EventType",
      "RuleExecutionMode": "String",
      "Rules": "Rule",
      "Tags": "Tag"
    }
  },
  "AWS::FraudDetector::EntityType": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-entitytype.html",
    "Properties": {
      "Description": "String",
      "Name": "String",
      "Tags": "Tag"
    }
  },
  "AWS::FraudDetector::EventType": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-eventtype.html",
    "Properties": {
      "Description": "String",
      "EntityTypes": "EntityType",
      "EventVariables": "EventVariable",
      "Labels": "Label",
      "Name": "String",
      "Tags": "Tag"
    }
  },
  "AWS::FraudDetector::Label": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-label.html",
    "Properties": {
      "Description": "String",
      "Name": "String",
      "Tags": "Tag"
    }
  },
  "AWS::FraudDetector::List": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-list.html",
    "Properties": {
      "Description": "String",
      "Elements": "String",
      "Name": "String",
      "Tags": "Tag",
      "VariableType": "String"
    }
  },
  "AWS::FraudDetector::Outcome": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-outcome.html",
    "Properties": {
      "Description": "String",
      "Name": "String",
      "Tags": "Tag"
    }
  },
  "AWS::FraudDetector::Variable": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-variable.html",
    "Properties": {
      "DataSource": "String",
      "DataType": "String",
      "DefaultValue": "String",
      "Description": "String",
      "Name": "String",
      "Tags": "Tag",
      "VariableType": "String"
    }
  },
  "AWS::GameLift::Alias": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-alias.html",
    "Properties": {
      "Description": "String",
      "Name": "String",
      "RoutingStrategy": "RoutingStrategy"
    }
  },
  "AWS::GameLift::Build": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-build.html",
    "Properties": {
      "Name": "String",
      "OperatingSystem": "String",
      "ServerSdkVersion": "String",
      "StorageLocation": "StorageLocation",
      "Version": "String"
    }
  },
  "AWS::GameLift::ContainerGroupDefinition": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-containergroupdefinition.html",
    "Properties": {
      "ContainerDefinitions": "ContainerDefinition",
      "Name": "String",
      "OperatingSystem": "String",
      "SchedulingStrategy": "String",
      "Tags": "Tag",
      "TotalCpuLimit": "Integer",
      "TotalMemoryLimit": "Integer"
    }
  },
  "AWS::GameLift::Fleet": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html",
    "Properties": {
      "AnywhereConfiguration": "AnywhereConfiguration",
      "ApplyCapacity": "String",
      "BuildId": "String",
      "CertificateConfiguration": "CertificateConfiguration",
      "ComputeType": "String",
      "ContainerGroupsConfiguration": "ContainerGroupsConfiguration",
      "Description": "String",
      "DesiredEC2Instances": "Integer",
      "EC2InboundPermissions": "IpPermission",
      "EC2InstanceType": "String",
      "FleetType": "String",
      "InstanceRoleARN": "String",
      "InstanceRoleCredentialsProvider": "String",
      "Locations": "LocationConfiguration",
      "MaxSize": "Integer",
      "MetricGroups": "String",
      "MinSize": "Integer",
      "Name": "String",
      "NewGameSessionProtectionPolicy": "String",
      "PeerVpcAwsAccountId": "String",
      "PeerVpcId": "String",
      "ResourceCreationLimitPolicy": "ResourceCreationLimitPolicy",
      "RuntimeConfiguration": "RuntimeConfiguration",
      "ScalingPolicies": "ScalingPolicy",
      "ScriptId": "String"
    }
  },
  "AWS::GameLift::GameServerGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html",
    "Properties": {
      "AutoScalingPolicy": "AutoScalingPolicy",
      "BalancingStrategy": "String",
      "DeleteOption": "String",
      "GameServerGroupName": "String",
      "GameServerProtectionPolicy": "String",
      "InstanceDefinitions": "InstanceDefinition",
      "LaunchTemplate": "LaunchTemplate",
      "MaxSize": "Double",
      "MinSize": "Double",
      "RoleArn": "String",
      "Tags": "Tag",
      "VpcSubnets": "String"
    }
  },
  "AWS::GameLift::GameSessionQueue": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gamesessionqueue.html",
    "Properties": {
      "CustomEventData": "String",
      "Destinations": "GameSessionQueueDestination",
      "FilterConfiguration": "FilterConfiguration",
      "Name": "String",
      "NotificationTarget": "String",
      "PlayerLatencyPolicies": "PlayerLatencyPolicy",
      "PriorityConfiguration": "PriorityConfiguration",
      "Tags": "Tag",
      "TimeoutInSeconds": "Integer"
    }
  },
  "AWS::GameLift::Location": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-location.html",
    "Properties": {
      "LocationName": "String",
      "Tags": "Tag"
    }
  },
  "AWS::GameLift::MatchmakingConfiguration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingconfiguration.html",
    "Properties": {
      "AcceptanceRequired": "Boolean",
      "AcceptanceTimeoutSeconds": "Integer",
      "AdditionalPlayerCount": "Integer",
      "BackfillMode": "String",
      "CreationTime": "String",
      "CustomEventData": "String",
      "Description": "String",
      "FlexMatchMode": "String",
      "GameProperties": "GameProperty",
      "GameSessionData": "String",
      "GameSessionQueueArns": "String",
      "Name": "String",
      "NotificationTarget": "String",
      "RequestTimeoutSeconds": "Integer",
      "RuleSetArn": "String",
      "RuleSetName": "String",
      "Tags": "Tag"
    }
  },
  "AWS::GameLift::MatchmakingRuleSet": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingruleset.html",
    "Properties": {
      "Name": "String",
      "RuleSetBody": "String",
      "Tags": "Tag"
    }
  },
  "AWS::GameLift::Script": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-script.html",
    "Properties": {
      "Name": "String",
      "StorageLocation": "S3Location",
      "Tags": "Tag",
      "Version": "String"
    }
  },
  "AWS::GlobalAccelerator::Accelerator": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-accelerator.html",
    "Properties": {
      "Enabled": "Boolean",
      "IpAddressType": "String",
      "IpAddresses": "String",
      "Name": "String",
      "Tags": "Tag"
    }
  },
  "AWS::GlobalAccelerator::CrossAccountAttachment": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-crossaccountattachment.html",
    "Properties": {
      "Name": "String",
      "Principals": "String",
      "Resources": "Resource",
      "Tags": "Tag"
    }
  },
  "AWS::GlobalAccelerator::EndpointGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html",
    "Properties": {
      "EndpointConfigurations": "EndpointConfiguration",
      "EndpointGroupRegion": "String",
      "HealthCheckIntervalSeconds": "Integer",
      "HealthCheckPath": "String",
      "HealthCheckPort": "Integer",
      "HealthCheckProtocol": "String",
      "ListenerArn": "String",
      "PortOverrides": "PortOverride",
      "ThresholdCount": "Integer",
      "TrafficDialPercentage": "Double"
    }
  },
  "AWS::GlobalAccelerator::Listener": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-listener.html",
    "Properties": {
      "AcceleratorArn": "String",
      "ClientAffinity": "String",
      "PortRanges": "PortRange",
      "Protocol": "String"
    }
  },
  "AWS::Glue::Classifier": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-classifier.html",
    "Properties": {
      "CsvClassifier": "CsvClassifier",
      "GrokClassifier": "GrokClassifier",
      "JsonClassifier": "JsonClassifier",
      "XMLClassifier": "XMLClassifier"
    }
  },
  "AWS::Glue::Connection": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-connection.html",
    "Properties": {
      "CatalogId": "String",
      "ConnectionInput": "ConnectionInput"
    }
  },
  "AWS::Glue::Crawler": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-crawler.html",
    "Properties": {
      "Classifiers": "String",
      "Configuration": "String",
      "CrawlerSecurityConfiguration": "String",
      "DatabaseName": "String",
      "Description": "String",
      "LakeFormationConfiguration": "LakeFormationConfiguration",
      "Name": "String",
      "RecrawlPolicy": "RecrawlPolicy",
      "Role": "String",
      "Schedule": "Schedule",
      "SchemaChangePolicy": "SchemaChangePolicy",
      "TablePrefix": "String",
      "Tags": "Json",
      "Targets": "Targets"
    }
  },
  "AWS::Glue::CustomEntityType": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-customentitytype.html",
    "Properties": {
      "ContextWords": "String",
      "Name": "String",
      "RegexString": "String",
      "Tags": "Json"
    }
  },
  "AWS::Glue::DataCatalogEncryptionSettings": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-datacatalogencryptionsettings.html",
    "Properties": {
      "CatalogId": "String",
      "DataCatalogEncryptionSettings": "DataCatalogEncryptionSettings"
    }
  },
  "AWS::Glue::DataQualityRuleset": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-dataqualityruleset.html",
    "Properties": {
      "ClientToken": "String",
      "Description": "String",
      "Name": "String",
      "Ruleset": "String",
      "Tags": "Json",
      "TargetTable": "DataQualityTargetTable"
    }
  },
  "AWS::Glue::Database": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-database.html",
    "Properties": {
      "CatalogId": "String",
      "DatabaseInput": "DatabaseInput",
      "DatabaseName": "String"
    }
  },
  "AWS::Glue::DevEndpoint": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-devendpoint.html",
    "Properties": {
      "Arguments": "Json",
      "EndpointName": "String",
      "ExtraJarsS3Path": "String",
      "ExtraPythonLibsS3Path": "String",
      "GlueVersion": "String",
      "NumberOfNodes": "Integer",
      "NumberOfWorkers": "Integer",
      "PublicKey": "String",
      "PublicKeys": "String",
      "RoleArn": "String",
      "SecurityConfiguration": "String",
      "SecurityGroupIds": "String",
      "SubnetId": "String",
      "Tags": "Json",
      "WorkerType": "String"
    }
  },
  "AWS::Glue::Job": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-job.html",
    "Properties": {
      "AllocatedCapacity": "Double",
      "Command": "JobCommand",
      "Connections": "ConnectionsList",
      "DefaultArguments": "Json",
      "Description": "String",
      "ExecutionClass": "String",
      "ExecutionProperty": "ExecutionProperty",
      "GlueVersion": "String",
      "JobMode": "String",
      "LogUri": "String",
      "MaintenanceWindow": "String",
      "MaxCapacity": "Double",
      "MaxRetries": "Double",
      "Name": "String",
      "NonOverridableArguments": "Json",
      "NotificationProperty": "NotificationProperty",
      "NumberOfWorkers": "Integer",
      "Role": "String",
      "SecurityConfiguration": "String",
      "Tags": "Json",
      "Timeout": "Integer",
      "WorkerType": "String"
    }
  },
  "AWS::Glue::MLTransform": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-mltransform.html",
    "Properties": {
      "Description": "String",
      "GlueVersion": "String",
      "InputRecordTables": "InputRecordTables",
      "MaxCapacity": "Double",
      "MaxRetries": "Integer",
      "Name": "String",
      "NumberOfWorkers": "Integer",
      "Role": "String",
      "Tags": "Json",
      "Timeout": "Integer",
      "TransformEncryption": "TransformEncryption",
      "TransformParameters": "TransformParameters",
      "WorkerType": "String"
    }
  },
  "AWS::Glue::Partition": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-partition.html",
    "Properties": {
      "CatalogId": "String",
      "DatabaseName": "String",
      "PartitionInput": "PartitionInput",
      "TableName": "String"
    }
  },
  "AWS::Glue::Registry": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-registry.html",
    "Properties": {
      "Description": "String",
      "Name": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Glue::Schema": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-schema.html",
    "Properties": {
      "CheckpointVersion": "SchemaVersion",
      "Compatibility": "String",
      "DataFormat": "String",
      "Description": "String",
      "Name": "String",
      "Registry": "Registry",
      "SchemaDefinition": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Glue::SchemaVersion": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-schemaversion.html",
    "Properties": {
      "Schema": "Schema",
      "SchemaDefinition": "String"
    }
  },
  "AWS::Glue::SchemaVersionMetadata": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-schemaversionmetadata.html",
    "Properties": {
      "Key": "String",
      "SchemaVersionId": "String",
      "Value": "String"
    }
  },
  "AWS::Glue::SecurityConfiguration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-securityconfiguration.html",
    "Properties": {
      "EncryptionConfiguration": "EncryptionConfiguration",
      "Name": "String"
    }
  },
  "AWS::Glue::Table": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-table.html",
    "Properties": {
      "CatalogId": "String",
      "DatabaseName": "String",
      "OpenTableFormatInput": "OpenTableFormatInput",
      "TableInput": "TableInput"
    }
  },
  "AWS::Glue::TableOptimizer": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-tableoptimizer.html",
    "Properties": {
      "CatalogId": "String",
      "DatabaseName": "String",
      "TableName": "String",
      "TableOptimizerConfiguration": "TableOptimizerConfiguration",
      "Type": "String"
    }
  },
  "AWS::Glue::Trigger": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-trigger.html",
    "Properties": {
      "Actions": "Action",
      "Description": "String",
      "EventBatchingCondition": "EventBatchingCondition",
      "Name": "String",
      "Predicate": "Predicate",
      "Schedule": "String",
      "StartOnCreation": "Boolean",
      "Tags": "Json",
      "Type": "String",
      "WorkflowName": "String"
    }
  },
  "AWS::Glue::Workflow": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-workflow.html",
    "Properties": {
      "DefaultRunProperties": "Json",
      "Description": "String",
      "MaxConcurrentRuns": "Integer",
      "Name": "String",
      "Tags": "Json"
    }
  },
  "AWS::Grafana::Workspace": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-grafana-workspace.html",
    "Properties": {
      "AccountAccessType": "String",
      "AuthenticationProviders": "String",
      "ClientToken": "String",
      "DataSources": "String",
      "Description": "String",
      "GrafanaVersion": "String",
      "Name": "String",
      "NetworkAccessControl": "NetworkAccessControl",
      "NotificationDestinations": "String",
      "OrganizationRoleName": "String",
      "OrganizationalUnits": "String",
      "PermissionType": "String",
      "PluginAdminEnabled": "Boolean",
      "RoleArn": "String",
      "SamlConfiguration": "SamlConfiguration",
      "StackSetName": "String",
      "VpcConfiguration": "VpcConfiguration"
    }
  },
  "AWS::Greengrass::ConnectorDefinition": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-connectordefinition.html",
    "Properties": {
      "InitialVersion": "ConnectorDefinitionVersion",
      "Name": "String",
      "Tags": "Json"
    }
  },
  "AWS::Greengrass::ConnectorDefinitionVersion": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-connectordefinitionversion.html",
    "Properties": {
      "ConnectorDefinitionId": "String",
      "Connectors": "Connector"
    }
  },
  "AWS::Greengrass::CoreDefinition": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-coredefinition.html",
    "Properties": {
      "InitialVersion": "CoreDefinitionVersion",
      "Name": "String",
      "Tags": "Json"
    }
  },
  "AWS::Greengrass::CoreDefinitionVersion": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-coredefinitionversion.html",
    "Properties": {
      "CoreDefinitionId": "String",
      "Cores": "Core"
    }
  },
  "AWS::Greengrass::DeviceDefinition": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-devicedefinition.html",
    "Properties": {
      "InitialVersion": "DeviceDefinitionVersion",
      "Name": "String",
      "Tags": "Json"
    }
  },
  "AWS::Greengrass::DeviceDefinitionVersion": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-devicedefinitionversion.html",
    "Properties": {
      "DeviceDefinitionId": "String",
      "Devices": "Device"
    }
  },
  "AWS::Greengrass::FunctionDefinition": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-functiondefinition.html",
    "Properties": {
      "InitialVersion": "FunctionDefinitionVersion",
      "Name": "String",
      "Tags": "Json"
    }
  },
  "AWS::Greengrass::FunctionDefinitionVersion": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-functiondefinitionversion.html",
    "Properties": {
      "DefaultConfig": "DefaultConfig",
      "FunctionDefinitionId": "String",
      "Functions": "Function"
    }
  },
  "AWS::Greengrass::Group": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-group.html",
    "Properties": {
      "InitialVersion": "GroupVersion",
      "Name": "String",
      "RoleArn": "String",
      "Tags": "Json"
    }
  },
  "AWS::Greengrass::GroupVersion": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-groupversion.html",
    "Properties": {
      "ConnectorDefinitionVersionArn": "String",
      "CoreDefinitionVersionArn": "String",
      "DeviceDefinitionVersionArn": "String",
      "FunctionDefinitionVersionArn": "String",
      "GroupId": "String",
      "LoggerDefinitionVersionArn": "String",
      "ResourceDefinitionVersionArn": "String",
      "SubscriptionDefinitionVersionArn": "String"
    }
  },
  "AWS::Greengrass::LoggerDefinition": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-loggerdefinition.html",
    "Properties": {
      "InitialVersion": "LoggerDefinitionVersion",
      "Name": "String",
      "Tags": "Json"
    }
  },
  "AWS::Greengrass::LoggerDefinitionVersion": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-loggerdefinitionversion.html",
    "Properties": {
      "LoggerDefinitionId": "String",
      "Loggers": "Logger"
    }
  },
  "AWS::Greengrass::ResourceDefinition": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-resourcedefinition.html",
    "Properties": {
      "InitialVersion": "ResourceDefinitionVersion",
      "Name": "String",
      "Tags": "Json"
    }
  },
  "AWS::Greengrass::ResourceDefinitionVersion": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-resourcedefinitionversion.html",
    "Properties": {
      "ResourceDefinitionId": "String",
      "Resources": "ResourceInstance"
    }
  },
  "AWS::Greengrass::SubscriptionDefinition": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-subscriptiondefinition.html",
    "Properties": {
      "InitialVersion": "SubscriptionDefinitionVersion",
      "Name": "String",
      "Tags": "Json"
    }
  },
  "AWS::Greengrass::SubscriptionDefinitionVersion": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-subscriptiondefinitionversion.html",
    "Properties": {
      "SubscriptionDefinitionId": "String",
      "Subscriptions": "Subscription"
    }
  },
  "AWS::GreengrassV2::ComponentVersion": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrassv2-componentversion.html",
    "Properties": {
      "InlineRecipe": "String",
      "LambdaFunction": "LambdaFunctionRecipeSource",
      "Tags": "Map"
    }
  },
  "AWS::GreengrassV2::Deployment": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrassv2-deployment.html",
    "Properties": {
      "Components": "Map",
      "DeploymentName": "String",
      "DeploymentPolicies": "DeploymentPolicies",
      "IotJobConfiguration": "DeploymentIoTJobConfiguration",
      "ParentTargetArn": "String",
      "Tags": "Map",
      "TargetArn": "String"
    }
  },
  "AWS::GroundStation::Config": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-groundstation-config.html",
    "Properties": {
      "ConfigData": "ConfigData",
      "Name": "String",
      "Tags": "Tag"
    }
  },
  "AWS::GroundStation::DataflowEndpointGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-groundstation-dataflowendpointgroup.html",
    "Properties": {
      "ContactPostPassDurationSeconds": "Integer",
      "ContactPrePassDurationSeconds": "Integer",
      "EndpointDetails": "EndpointDetails",
      "Tags": "Tag"
    }
  },
  "AWS::GroundStation::MissionProfile": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-groundstation-missionprofile.html",
    "Properties": {
      "ContactPostPassDurationSeconds": "Integer",
      "ContactPrePassDurationSeconds": "Integer",
      "DataflowEdges": "DataflowEdge",
      "MinimumViableContactDurationSeconds": "Integer",
      "Name": "String",
      "StreamsKmsKey": "StreamsKmsKey",
      "StreamsKmsRole": "String",
      "Tags": "Tag",
      "TrackingConfigArn": "String"
    }
  },
  "AWS::GuardDuty::Detector": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-detector.html",
    "Properties": {
      "DataSources": "CFNDataSourceConfigurations",
      "Enable": "Boolean",
      "Features": "CFNFeatureConfiguration",
      "FindingPublishingFrequency": "String",
      "Tags": "TagItem"
    }
  },
  "AWS::GuardDuty::Filter": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-filter.html",
    "Properties": {
      "Action": "String",
      "Description": "String",
      "DetectorId": "String",
      "FindingCriteria": "FindingCriteria",
      "Name": "String",
      "Rank": "Integer",
      "Tags": "TagItem"
    }
  },
  "AWS::GuardDuty::IPSet": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-ipset.html",
    "Properties": {
      "Activate": "Boolean",
      "DetectorId": "String",
      "Format": "String",
      "Location": "String",
      "Name": "String",
      "Tags": "TagItem"
    }
  },
  "AWS::GuardDuty::MalwareProtectionPlan": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-malwareprotectionplan.html",
    "Properties": {
      "Actions": "CFNActions",
      "ProtectedResource": "CFNProtectedResource",
      "Role": "String",
      "Tags": "TagItem"
    }
  },
  "AWS::GuardDuty::Master": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-master.html",
    "Properties": {
      "DetectorId": "String",
      "InvitationId": "String",
      "MasterId": "String"
    }
  },
  "AWS::GuardDuty::Member": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-member.html",
    "Properties": {
      "DetectorId": "String",
      "DisableEmailNotification": "Boolean",
      "Email": "String",
      "MemberId": "String",
      "Message": "String",
      "Status": "String"
    }
  },
  "AWS::GuardDuty::ThreatIntelSet": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-threatintelset.html",
    "Properties": {
      "Activate": "Boolean",
      "DetectorId": "String",
      "Format": "String",
      "Location": "String",
      "Name": "String",
      "Tags": "TagItem"
    }
  },
  "AWS::HealthImaging::Datastore": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-healthimaging-datastore.html",
    "Properties": {
      "DatastoreName": "String",
      "KmsKeyArn": "String",
      "Tags": "Map"
    }
  },
  "AWS::HealthLake::FHIRDatastore": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-healthlake-fhirdatastore.html",
    "Properties": {
      "DatastoreName": "String",
      "DatastoreTypeVersion": "String",
      "IdentityProviderConfiguration": "IdentityProviderConfiguration",
      "PreloadDataConfig": "PreloadDataConfig",
      "SseConfiguration": "SseConfiguration",
      "Tags": "Tag"
    }
  },
  "AWS::IAM::AccessKey": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html",
    "Properties": {
      "Serial": "Integer",
      "Status": "String",
      "UserName": "String"
    }
  },
  "AWS::IAM::Group": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-group.html",
    "Properties": {
      "GroupName": "String",
      "ManagedPolicyArns": "String",
      "Path": "String",
      "Policies": "Policy"
    }
  },
  "AWS::IAM::GroupPolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-grouppolicy.html",
    "Properties": {
      "GroupName": "String",
      "PolicyDocument": "Json",
      "PolicyName": "String"
    }
  },
  "AWS::IAM::InstanceProfile": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html",
    "Properties": {
      "InstanceProfileName": "String",
      "Path": "String",
      "Roles": "String"
    }
  },
  "AWS::IAM::ManagedPolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-managedpolicy.html",
    "Properties": {
      "Description": "String",
      "Groups": "String",
      "ManagedPolicyName": "String",
      "Path": "String",
      "PolicyDocument": "Json",
      "Roles": "String",
      "Users": "String"
    }
  },
  "AWS::IAM::OIDCProvider": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-oidcprovider.html",
    "Properties": {
      "ClientIdList": "String",
      "Tags": "Tag",
      "ThumbprintList": "String",
      "Url": "String"
    }
  },
  "AWS::IAM::Policy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-policy.html",
    "Properties": {
      "Groups": "String",
      "PolicyDocument": "Json",
      "PolicyName": "String",
      "Roles": "String",
      "Users": "String"
    }
  },
  "AWS::IAM::Role": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html",
    "Properties": {
      "AssumeRolePolicyDocument": "Json",
      "Description": "String",
      "ManagedPolicyArns": "String",
      "MaxSessionDuration": "Integer",
      "Path": "String",
      "PermissionsBoundary": "String",
      "Policies": "Policy",
      "RoleName": "String",
      "Tags": "Tag"
    }
  },
  "AWS::IAM::RolePolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-rolepolicy.html",
    "Properties": {
      "PolicyDocument": "Json",
      "PolicyName": "String",
      "RoleName": "String"
    }
  },
  "AWS::IAM::SAMLProvider": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-samlprovider.html",
    "Properties": {
      "Name": "String",
      "SamlMetadataDocument": "String",
      "Tags": "Tag"
    }
  },
  "AWS::IAM::ServerCertificate": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-servercertificate.html",
    "Properties": {
      "CertificateBody": "String",
      "CertificateChain": "String",
      "Path": "String",
      "PrivateKey": "String",
      "ServerCertificateName": "String",
      "Tags": "Tag"
    }
  },
  "AWS::IAM::ServiceLinkedRole": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-servicelinkedrole.html",
    "Properties": {
      "AWSServiceName": "String",
      "CustomSuffix": "String",
      "Description": "String"
    }
  },
  "AWS::IAM::User": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-user.html",
    "Properties": {
      "Groups": "String",
      "LoginProfile": "LoginProfile",
      "ManagedPolicyArns": "String",
      "Path": "String",
      "PermissionsBoundary": "String",
      "Policies": "Policy",
      "Tags": "Tag",
      "UserName": "String"
    }
  },
  "AWS::IAM::UserPolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-userpolicy.html",
    "Properties": {
      "PolicyDocument": "Json",
      "PolicyName": "String",
      "UserName": "String"
    }
  },
  "AWS::IAM::UserToGroupAddition": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html",
    "Properties": {
      "GroupName": "String",
      "Users": "String"
    }
  },
  "AWS::IAM::VirtualMFADevice": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-virtualmfadevice.html",
    "Properties": {
      "Path": "String",
      "Tags": "Tag",
      "Users": "String",
      "VirtualMfaDeviceName": "String"
    }
  },
  "AWS::IVS::Channel": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-channel.html",
    "Properties": {
      "Authorized": "Boolean",
      "InsecureIngest": "Boolean",
      "LatencyMode": "String",
      "Name": "String",
      "Preset": "String",
      "RecordingConfigurationArn": "String",
      "Tags": "Tag",
      "Type": "String"
    }
  },
  "AWS::IVS::EncoderConfiguration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-encoderconfiguration.html",
    "Properties": {
      "Name": "String",
      "Tags": "Tag",
      "Video": "Video"
    }
  },
  "AWS::IVS::PlaybackKeyPair": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-playbackkeypair.html",
    "Properties": {
      "Name": "String",
      "PublicKeyMaterial": "String",
      "Tags": "Tag"
    }
  },
  "AWS::IVS::PlaybackRestrictionPolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-playbackrestrictionpolicy.html",
    "Properties": {
      "AllowedCountries": "String",
      "AllowedOrigins": "String",
      "EnableStrictOriginEnforcement": "Boolean",
      "Name": "String",
      "Tags": "Tag"
    }
  },
  "AWS::IVS::PublicKey": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-publickey.html",
    "Properties": {
      "Name": "String",
      "PublicKeyMaterial": "String",
      "Tags": "Tag"
    }
  },
  "AWS::IVS::RecordingConfiguration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-recordingconfiguration.html",
    "Properties": {
      "DestinationConfiguration": "DestinationConfiguration",
      "Name": "String",
      "RecordingReconnectWindowSeconds": "Integer",
      "RenditionConfiguration": "RenditionConfiguration",
      "Tags": "Tag",
      "ThumbnailConfiguration": "ThumbnailConfiguration"
    }
  },
  "AWS::IVS::Stage": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-stage.html",
    "Properties": {
      "AutoParticipantRecordingConfiguration": "AutoParticipantRecordingConfiguration",
      "Name": "String",
      "Tags": "Tag"
    }
  },
  "AWS::IVS::StorageConfiguration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-storageconfiguration.html",
    "Properties": {
      "Name": "String",
      "S3": "S3StorageConfiguration",
      "Tags": "Tag"
    }
  },
  "AWS::IVS::StreamKey": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-streamkey.html",
    "Properties": {
      "ChannelArn": "String",
      "Tags": "Tag"
    }
  },
  "AWS::IVSChat::LoggingConfiguration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivschat-loggingconfiguration.html",
    "Properties": {
      "DestinationConfiguration": "DestinationConfiguration",
      "Name": "String",
      "Tags": "Tag"
    }
  },
  "AWS::IVSChat::Room": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivschat-room.html",
    "Properties": {
      "LoggingConfigurationIdentifiers": "String",
      "MaximumMessageLength": "Integer",
      "MaximumMessageRatePerSecond": "Integer",
      "MessageReviewHandler": "MessageReviewHandler",
      "Name": "String",
      "Tags": "Tag"
    }
  },
  "AWS::IdentityStore::Group": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-identitystore-group.html",
    "Properties": {
      "Description": "String",
      "DisplayName": "String",
      "IdentityStoreId": "String"
    }
  },
  "AWS::IdentityStore::GroupMembership": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-identitystore-groupmembership.html",
    "Properties": {
      "GroupId": "String",
      "IdentityStoreId": "String",
      "MemberId": "MemberId"
    }
  },
  "AWS::ImageBuilder::Component": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-component.html",
    "Properties": {
      "ChangeDescription": "String",
      "Data": "String",
      "Description": "String",
      "KmsKeyId": "String",
      "Name": "String",
      "Platform": "String",
      "SupportedOsVersions": "String",
      "Tags": "Map",
      "Uri": "String",
      "Version": "String"
    }
  },
  "AWS::ImageBuilder::ContainerRecipe": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-containerrecipe.html",
    "Properties": {
      "Components": "ComponentConfiguration",
      "ContainerType": "String",
      "Description": "String",
      "DockerfileTemplateData": "String",
      "DockerfileTemplateUri": "String",
      "ImageOsVersionOverride": "String",
      "InstanceConfiguration": "InstanceConfiguration",
      "KmsKeyId": "String",
      "Name": "String",
      "ParentImage": "String",
      "PlatformOverride": "String",
      "Tags": "Map",
      "TargetRepository": "TargetContainerRepository",
      "Version": "String",
      "WorkingDirectory": "String"
    }
  },
  "AWS::ImageBuilder::DistributionConfiguration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-distributionconfiguration.html",
    "Properties": {
      "Description": "String",
      "Distributions": "Distribution",
      "Name": "String",
      "Tags": "Map"
    }
  },
  "AWS::ImageBuilder::Image": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-image.html",
    "Properties": {
      "ContainerRecipeArn": "String",
      "DistributionConfigurationArn": "String",
      "EnhancedImageMetadataEnabled": "Boolean",
      "ExecutionRole": "String",
      "ImageRecipeArn": "String",
      "ImageScanningConfiguration": "ImageScanningConfiguration",
      "ImageTestsConfiguration": "ImageTestsConfiguration",
      "InfrastructureConfigurationArn": "String",
      "Tags": "Map",
      "Workflows": "WorkflowConfiguration"
    }
  },
  "AWS::ImageBuilder::ImagePipeline": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagepipeline.html",
    "Properties": {
      "ContainerRecipeArn": "String",
      "Description": "String",
      "DistributionConfigurationArn": "String",
      "EnhancedImageMetadataEnabled": "Boolean",
      "ExecutionRole": "String",
      "ImageRecipeArn": "String",
      "ImageScanningConfiguration": "ImageScanningConfiguration",
      "ImageTestsConfiguration": "ImageTestsConfiguration",
      "InfrastructureConfigurationArn": "String",
      "Name": "String",
      "Schedule": "Schedule",
      "Status": "String",
      "Tags": "Map",
      "Workflows": "WorkflowConfiguration"
    }
  },
  "AWS::ImageBuilder::ImageRecipe": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagerecipe.html",
    "Properties": {
      "AdditionalInstanceConfiguration": "AdditionalInstanceConfiguration",
      "BlockDeviceMappings": "InstanceBlockDeviceMapping",
      "Components": "ComponentConfiguration",
      "Description": "String",
      "Name": "String",
      "ParentImage": "String",
      "Tags": "Map",
      "Version": "String",
      "WorkingDirectory": "String"
    }
  },
  "AWS::ImageBuilder::InfrastructureConfiguration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-infrastructureconfiguration.html",
    "Properties": {
      "Description": "String",
      "InstanceMetadataOptions": "InstanceMetadataOptions",
      "InstanceProfileName": "String",
      "InstanceTypes": "String",
      "KeyPair": "String",
      "Logging": "Logging",
      "Name": "String",
      "ResourceTags": "Map",
      "SecurityGroupIds": "String",
      "SnsTopicArn": "String",
      "SubnetId": "String",
      "Tags": "Map",
      "TerminateInstanceOnFailure": "Boolean"
    }
  },
  "AWS::ImageBuilder::LifecyclePolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-lifecyclepolicy.html",
    "Properties": {
      "Description": "String",
      "ExecutionRole": "String",
      "Name": "String",
      "PolicyDetails": "PolicyDetail",
      "ResourceSelection": "ResourceSelection",
      "ResourceType": "String",
      "Status": "String",
      "Tags": "Map"
    }
  },
  "AWS::ImageBuilder::Workflow": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-workflow.html",
    "Properties": {
      "ChangeDescription": "String",
      "Data": "String",
      "Description": "String",
      "KmsKeyId": "String",
      "Name": "String",
      "Tags": "Map",
      "Type": "String",
      "Uri": "String",
      "Version": "String"
    }
  },
  "AWS::Inspector::AssessmentTarget": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspector-assessmenttarget.html",
    "Properties": {
      "AssessmentTargetName": "String",
      "ResourceGroupArn": "String"
    }
  },
  "AWS::Inspector::AssessmentTemplate": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspector-assessmenttemplate.html",
    "Properties": {
      "AssessmentTargetArn": "String",
      "AssessmentTemplateName": "String",
      "DurationInSeconds": "Integer",
      "RulesPackageArns": "String",
      "UserAttributesForFindings": "Tag"
    }
  },
  "AWS::Inspector::ResourceGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspector-resourcegroup.html",
    "Properties": {
      "ResourceGroupTags": "Tag"
    }
  },
  "AWS::InspectorV2::CisScanConfiguration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspectorv2-cisscanconfiguration.html",
    "Properties": {
      "ScanName": "String",
      "Schedule": "Schedule",
      "SecurityLevel": "String",
      "Tags": "Map",
      "Targets": "CisTargets"
    }
  },
  "AWS::InspectorV2::Filter": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspectorv2-filter.html",
    "Properties": {
      "Description": "String",
      "FilterAction": "String",
      "FilterCriteria": "FilterCriteria",
      "Name": "String"
    }
  },
  "AWS::InternetMonitor::Monitor": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-internetmonitor-monitor.html",
    "Properties": {
      "HealthEventsConfig": "HealthEventsConfig",
      "IncludeLinkedAccounts": "Boolean",
      "InternetMeasurementsLogDelivery": "InternetMeasurementsLogDelivery",
      "LinkedAccountId": "String",
      "MaxCityNetworksToMonitor": "Integer",
      "MonitorName": "String",
      "Resources": "String",
      "ResourcesToAdd": "String",
      "ResourcesToRemove": "String",
      "Status": "String",
      "Tags": "Tag",
      "TrafficPercentageToMonitor": "Integer"
    }
  },
  "AWS::IoT1Click::Device": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot1click-device.html",
    "Properties": {
      "DeviceId": "String",
      "Enabled": "Boolean"
    }
  },
  "AWS::IoT1Click::Placement": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot1click-placement.html",
    "Properties": {
      "AssociatedDevices": "Json",
      "Attributes": "Json",
      "PlacementName": "String",
      "ProjectName": "String"
    }
  },
  "AWS::IoT1Click::Project": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot1click-project.html",
    "Properties": {
      "Description": "String",
      "PlacementTemplate": "PlacementTemplate",
      "ProjectName": "String"
    }
  },
  "AWS::IoT::AccountAuditConfiguration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-accountauditconfiguration.html",
    "Properties": {
      "AccountId": "String",
      "AuditCheckConfigurations": "AuditCheckConfigurations",
      "AuditNotificationTargetConfigurations": "AuditNotificationTargetConfigurations",
      "RoleArn": "String"
    }
  },
  "AWS::IoT::Authorizer": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-authorizer.html",
    "Properties": {
      "AuthorizerFunctionArn": "String",
      "AuthorizerName": "String",
      "EnableCachingForHttp": "Boolean",
      "SigningDisabled": "Boolean",
      "Status": "String",
      "Tags": "Tag",
      "TokenKeyName": "String",
      "TokenSigningPublicKeys": "Map"
    }
  },
  "AWS::IoT::BillingGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-billinggroup.html",
    "Properties": {
      "BillingGroupName": "String",
      "BillingGroupProperties": "BillingGroupProperties",
      "Tags": "Tag"
    }
  },
  "AWS::IoT::CACertificate": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-cacertificate.html",
    "Properties": {
      "AutoRegistrationStatus": "String",
      "CACertificatePem": "String",
      "CertificateMode": "String",
      "RegistrationConfig": "RegistrationConfig",
      "RemoveAutoRegistration": "Boolean",
      "Status": "String",
      "Tags": "Tag",
      "VerificationCertificatePem": "String"
    }
  },
  "AWS::IoT::Certificate": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-certificate.html",
    "Properties": {
      "CACertificatePem": "String",
      "CertificateMode": "String",
      "CertificatePem": "String",
      "CertificateSigningRequest": "String",
      "Status": "String"
    }
  },
  "AWS::IoT::CertificateProvider": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-certificateprovider.html",
    "Properties": {
      "AccountDefaultForOperations": "String",
      "CertificateProviderName": "String",
      "LambdaFunctionArn": "String",
      "Tags": "Tag"
    }
  },
  "AWS::IoT::CustomMetric": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-custommetric.html",
    "Properties": {
      "DisplayName": "String",
      "MetricName": "String",
      "MetricType": "String",
      "Tags": "Tag"
    }
  },
  "AWS::IoT::Dimension": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-dimension.html",
    "Properties": {
      "Name": "String",
      "StringValues": "String",
      "Tags": "Tag",
      "Type": "String"
    }
  },
  "AWS::IoT::DomainConfiguration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-domainconfiguration.html",
    "Properties": {
      "AuthorizerConfig": "AuthorizerConfig",
      "DomainConfigurationName": "String",
      "DomainConfigurationStatus": "String",
      "DomainName": "String",
      "ServerCertificateArns": "String",
      "ServerCertificateConfig": "ServerCertificateConfig",
      "ServiceType": "String",
      "Tags": "Tag",
      "TlsConfig": "TlsConfig",
      "ValidationCertificateArn": "String"
    }
  },
  "AWS::IoT::FleetMetric": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-fleetmetric.html",
    "Properties": {
      "AggregationField": "String",
      "AggregationType": "AggregationType",
      "Description": "String",
      "IndexName": "String",
      "MetricName": "String",
      "Period": "Integer",
      "QueryString": "String",
      "QueryVersion": "String",
      "Tags": "Tag",
      "Unit": "String"
    }
  },
  "AWS::IoT::JobTemplate": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-jobtemplate.html",
    "Properties": {
      "AbortConfig": "AbortConfig",
      "Description": "String",
      "DestinationPackageVersions": "String",
      "Document": "String",
      "DocumentSource": "String",
      "JobArn": "String",
      "JobExecutionsRetryConfig": "JobExecutionsRetryConfig",
      "JobExecutionsRolloutConfig": "JobExecutionsRolloutConfig",
      "JobTemplateId": "String",
      "MaintenanceWindows": "MaintenanceWindow",
      "PresignedUrlConfig": "PresignedUrlConfig",
      "Tags": "Tag",
      "TimeoutConfig": "TimeoutConfig"
    }
  },
  "AWS::IoT::Logging": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-logging.html",
    "Properties": {
      "AccountId": "String",
      "DefaultLogLevel": "String",
      "RoleArn": "String"
    }
  },
  "AWS::IoT::MitigationAction": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-mitigationaction.html",
    "Properties": {
      "ActionName": "String",
      "ActionParams": "ActionParams",
      "RoleArn": "String",
      "Tags": "Tag"
    }
  },
  "AWS::IoT::Policy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-policy.html",
    "Properties": {
      "PolicyDocument": "Json",
      "PolicyName": "String",
      "Tags": "Tag"
    }
  },
  "AWS::IoT::PolicyPrincipalAttachment": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-policyprincipalattachment.html",
    "Properties": {
      "PolicyName": "String",
      "Principal": "String"
    }
  },
  "AWS::IoT::ProvisioningTemplate": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-provisioningtemplate.html",
    "Properties": {
      "Description": "String",
      "Enabled": "Boolean",
      "PreProvisioningHook": "ProvisioningHook",
      "ProvisioningRoleArn": "String",
      "Tags": "Tag",
      "TemplateBody": "String",
      "TemplateName": "String",
      "TemplateType": "String"
    }
  },
  "AWS::IoT::ResourceSpecificLogging": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-resourcespecificlogging.html",
    "Properties": {
      "LogLevel": "String",
      "TargetName": "String",
      "TargetType": "String"
    }
  },
  "AWS::IoT::RoleAlias": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-rolealias.html",
    "Properties": {
      "CredentialDurationSeconds": "Integer",
      "RoleAlias": "String",
      "RoleArn": "String",
      "Tags": "Tag"
    }
  },
  "AWS::IoT::ScheduledAudit": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-scheduledaudit.html",
    "Properties": {
      "DayOfMonth": "String",
      "DayOfWeek": "String",
      "Frequency": "String",
      "ScheduledAuditName": "String",
      "Tags": "Tag",
      "TargetCheckNames": "String"
    }
  },
  "AWS::IoT::SecurityProfile": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-securityprofile.html",
    "Properties": {
      "AdditionalMetricsToRetainV2": "MetricToRetain",
      "AlertTargets": "Map",
      "Behaviors": "Behavior",
      "MetricsExportConfig": "MetricsExportConfig",
      "SecurityProfileDescription": "String",
      "SecurityProfileName": "String",
      "Tags": "Tag",
      "TargetArns": "String"
    }
  },
  "AWS::IoT::SoftwarePackage": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-softwarepackage.html",
    "Properties": {
      "Description": "String",
      "PackageName": "String",
      "Tags": "Tag"
    }
  },
  "AWS::IoT::SoftwarePackageVersion": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-softwarepackageversion.html",
    "Properties": {
      "Attributes": "Map",
      "Description": "String",
      "PackageName": "String",
      "Tags": "Tag",
      "VersionName": "String"
    }
  },
  "AWS::IoT::Thing": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-thing.html",
    "Properties": {
      "AttributePayload": "AttributePayload",
      "ThingName": "String"
    }
  },
  "AWS::IoT::ThingGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-thinggroup.html",
    "Properties": {
      "ParentGroupName": "String",
      "QueryString": "String",
      "Tags": "Tag",
      "ThingGroupName": "String",
      "ThingGroupProperties": "ThingGroupProperties"
    }
  },
  "AWS::IoT::ThingPrincipalAttachment": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-thingprincipalattachment.html",
    "Properties": {
      "Principal": "String",
      "ThingName": "String"
    }
  },
  "AWS::IoT::ThingType": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-thingtype.html",
    "Properties": {
      "DeprecateThingType": "Boolean",
      "Tags": "Tag",
      "ThingTypeName": "String",
      "ThingTypeProperties": "ThingTypeProperties"
    }
  },
  "AWS::IoT::TopicRule": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-topicrule.html",
    "Properties": {
      "RuleName": "String",
      "Tags": "Tag",
      "TopicRulePayload": "TopicRulePayload"
    }
  },
  "AWS::IoT::TopicRuleDestination": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-topicruledestination.html",
    "Properties": {
      "HttpUrlProperties": "HttpUrlDestinationSummary",
      "Status": "String",
      "VpcProperties": "VpcDestinationProperties"
    }
  },
  "AWS::IoTAnalytics::Channel": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotanalytics-channel.html",
    "Properties": {
      "ChannelName": "String",
      "ChannelStorage": "ChannelStorage",
      "RetentionPeriod": "RetentionPeriod",
      "Tags": "Tag"
    }
  },
  "AWS::IoTAnalytics::Dataset": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotanalytics-dataset.html",
    "Properties": {
      "Actions": "Action",
      "ContentDeliveryRules": "DatasetContentDeliveryRule",
      "DatasetName": "String",
      "LateDataRules": "LateDataRule",
      "RetentionPeriod": "RetentionPeriod",
      "Tags": "Tag",
      "Triggers": "Trigger",
      "VersioningConfiguration": "VersioningConfiguration"
    }
  },
  "AWS::IoTAnalytics::Datastore": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotanalytics-datastore.html",
    "Properties": {
      "DatastoreName": "String",
      "DatastorePartitions": "DatastorePartitions",
      "DatastoreStorage": "DatastoreStorage",
      "FileFormatConfiguration": "FileFormatConfiguration",
      "RetentionPeriod": "RetentionPeriod",
      "Tags": "Tag"
    }
  },
  "AWS::IoTAnalytics::Pipeline": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotanalytics-pipeline.html",
    "Properties": {
      "PipelineActivities": "Activity",
      "PipelineName": "String",
      "Tags": "Tag"
    }
  },
  "AWS::IoTCoreDeviceAdvisor::SuiteDefinition": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotcoredeviceadvisor-suitedefinition.html",
    "Properties": {
      "SuiteDefinitionConfiguration": "SuiteDefinitionConfiguration",
      "Tags": "Tag"
    }
  },
  "AWS::IoTEvents::AlarmModel": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotevents-alarmmodel.html",
    "Properties": {
      "AlarmCapabilities": "AlarmCapabilities",
      "AlarmEventActions": "AlarmEventActions",
      "AlarmModelDescription": "String",
      "AlarmModelName": "String",
      "AlarmRule": "AlarmRule",
      "Key": "String",
      "RoleArn": "String",
      "Severity": "Integer",
      "Tags": "Tag"
    }
  },
  "AWS::IoTEvents::DetectorModel": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotevents-detectormodel.html",
    "Properties": {
      "DetectorModelDefinition": "DetectorModelDefinition",
      "DetectorModelDescription": "String",
      "DetectorModelName": "String",
      "EvaluationMethod": "String",
      "Key": "String",
      "RoleArn": "String",
      "Tags": "Tag"
    }
  },
  "AWS::IoTEvents::Input": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotevents-input.html",
    "Properties": {
      "InputDefinition": "InputDefinition",
      "InputDescription": "String",
      "InputName": "String",
      "Tags": "Tag"
    }
  },
  "AWS::IoTFleetHub::Application": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleethub-application.html",
    "Properties": {
      "ApplicationDescription": "String",
      "ApplicationName": "String",
      "RoleArn": "String",
      "Tags": "Tag"
    }
  },
  "AWS::IoTFleetWise::Campaign": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-campaign.html",
    "Properties": {
      "Action": "String",
      "CollectionScheme": "CollectionScheme",
      "Compression": "String",
      "DataDestinationConfigs": "DataDestinationConfig",
      "DataExtraDimensions": "String",
      "Description": "String",
      "DiagnosticsMode": "String",
      "ExpiryTime": "String",
      "Name": "String",
      "PostTriggerCollectionDuration": "Double",
      "Priority": "Integer",
      "SignalCatalogArn": "String",
      "SignalsToCollect": "SignalInformation",
      "SignalsToFetch": "SignalFetchInformation",
      "SpoolingMode": "String",
      "StartTime": "String",
      "Tags": "Tag",
      "TargetArn": "String"
    }
  },
  "AWS::IoTFleetWise::DecoderManifest": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-decodermanifest.html",
    "Properties": {
      "Description": "String",
      "ModelManifestArn": "String",
      "Name": "String",
      "NetworkInterfaces": "NetworkInterfacesItems",
      "SignalDecoders": "SignalDecodersItems",
      "Status": "String",
      "Tags": "Tag"
    }
  },
  "AWS::IoTFleetWise::Fleet": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-fleet.html",
    "Properties": {
      "Description": "String",
      "Id": "String",
      "SignalCatalogArn": "String",
      "Tags": "Tag"
    }
  },
  "AWS::IoTFleetWise::ModelManifest": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-modelmanifest.html",
    "Properties": {
      "Description": "String",
      "Name": "String",
      "Nodes": "String",
      "SignalCatalogArn": "String",
      "Status": "String",
      "Tags": "Tag"
    }
  },
  "AWS::IoTFleetWise::SignalCatalog": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-signalcatalog.html",
    "Properties": {
      "Description": "String",
      "Name": "String",
      "NodeCounts": "NodeCounts",
      "Nodes": "Node",
      "Tags": "Tag"
    }
  },
  "AWS::IoTFleetWise::Vehicle": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-vehicle.html",
    "Properties": {
      "AssociationBehavior": "String",
      "Attributes": "Map",
      "DecoderManifestArn": "String",
      "ModelManifestArn": "String",
      "Name": "String",
      "Tags": "Tag"
    }
  },
  "AWS::IoTSiteWise::AccessPolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-accesspolicy.html",
    "Properties": {
      "AccessPolicyIdentity": "AccessPolicyIdentity",
      "AccessPolicyPermission": "String",
      "AccessPolicyResource": "AccessPolicyResource"
    }
  },
  "AWS::IoTSiteWise::Asset": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-asset.html",
    "Properties": {
      "AssetDescription": "String",
      "AssetExternalId": "String",
      "AssetHierarchies": "AssetHierarchy",
      "AssetModelId": "String",
      "AssetName": "String",
      "AssetProperties": "AssetProperty",
      "Tags": "Tag"
    }
  },
  "AWS::IoTSiteWise::AssetModel": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-assetmodel.html",
    "Properties": {
      "AssetModelCompositeModels": "AssetModelCompositeModel",
      "AssetModelDescription": "String",
      "AssetModelExternalId": "String",
      "AssetModelHierarchies": "AssetModelHierarchy",
      "AssetModelName": "String",
      "AssetModelProperties": "AssetModelProperty",
      "AssetModelType": "String",
      "Tags": "Tag"
    }
  },
  "AWS::IoTSiteWise::Dashboard": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-dashboard.html",
    "Properties": {
      "DashboardDefinition": "String",
      "DashboardDescription": "String",
      "DashboardName": "String",
      "ProjectId": "String",
      "Tags": "Tag"
    }
  },
  "AWS::IoTSiteWise::Gateway": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-gateway.html",
    "Properties": {
      "GatewayCapabilitySummaries": "GatewayCapabilitySummary",
      "GatewayName": "String",
      "GatewayPlatform": "GatewayPlatform",
      "Tags": "Tag"
    }
  },
  "AWS::IoTSiteWise::Portal": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-portal.html",
    "Properties": {
      "Alarms": "Alarms",
      "NotificationSenderEmail": "String",
      "PortalAuthMode": "String",
      "PortalContactEmail": "String",
      "PortalDescription": "String",
      "PortalName": "String",
      "RoleArn": "String",
      "Tags": "Tag"
    }
  },
  "AWS::IoTSiteWise::Project": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-project.html",
    "Properties": {
      "AssetIds": "String",
      "PortalId": "String",
      "ProjectDescription": "String",
      "ProjectName": "String",
      "Tags": "Tag"
    }
  },
  "AWS::IoTThingsGraph::FlowTemplate": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotthingsgraph-flowtemplate.html",
    "Properties": {
      "CompatibleNamespaceVersion": "Double",
      "Definition": "DefinitionDocument"
    }
  },
  "AWS::IoTTwinMaker::ComponentType": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-componenttype.html",
    "Properties": {
      "ComponentTypeId": "String",
      "CompositeComponentTypes": "Map",
      "Description": "String",
      "ExtendsFrom": "String",
      "Functions": "Map",
      "IsSingleton": "Boolean",
      "PropertyDefinitions": "Map",
      "PropertyGroups": "Map",
      "Tags": "Map",
      "WorkspaceId": "String"
    }
  },
  "AWS::IoTTwinMaker::Entity": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-entity.html",
    "Properties": {
      "Components": "Map",
      "CompositeComponents": "Map",
      "Description": "String",
      "EntityId": "String",
      "EntityName": "String",
      "ParentEntityId": "String",
      "Tags": "Map",
      "WorkspaceId": "String"
    }
  },
  "AWS::IoTTwinMaker::Scene": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-scene.html",
    "Properties": {
      "Capabilities": "String",
      "ContentLocation": "String",
      "Description": "String",
      "SceneId": "String",
      "SceneMetadata": "Map",
      "Tags": "Map",
      "WorkspaceId": "String"
    }
  },
  "AWS::IoTTwinMaker::SyncJob": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-syncjob.html",
    "Properties": {
      "SyncRole": "String",
      "SyncSource": "String",
      "Tags": "Map",
      "WorkspaceId": "String"
    }
  },
  "AWS::IoTTwinMaker::Workspace": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-workspace.html",
    "Properties": {
      "Description": "String",
      "Role": "String",
      "S3Location": "String",
      "Tags": "Map",
      "WorkspaceId": "String"
    }
  },
  "AWS::IoTWireless::Destination": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-destination.html",
    "Properties": {
      "Description": "String",
      "Expression": "String",
      "ExpressionType": "String",
      "Name": "String",
      "RoleArn": "String",
      "Tags": "Tag"
    }
  },
  "AWS::IoTWireless::DeviceProfile": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-deviceprofile.html",
    "Properties": {
      "LoRaWAN": "LoRaWANDeviceProfile",
      "Name": "String",
      "Tags": "Tag"
    }
  },
  "AWS::IoTWireless::FuotaTask": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-fuotatask.html",
    "Properties": {
      "AssociateMulticastGroup": "String",
      "AssociateWirelessDevice": "String",
      "Description": "String",
      "DisassociateMulticastGroup": "String",
      "DisassociateWirelessDevice": "String",
      "FirmwareUpdateImage": "String",
      "FirmwareUpdateRole": "String",
      "LoRaWAN": "LoRaWAN",
      "Name": "String",
      "Tags": "Tag"
    }
  },
  "AWS::IoTWireless::MulticastGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-multicastgroup.html",
    "Properties": {
      "AssociateWirelessDevice": "String",
      "Description": "String",
      "DisassociateWirelessDevice": "String",
      "LoRaWAN": "LoRaWAN",
      "Name": "String",
      "Tags": "Tag"
    }
  },
  "AWS::IoTWireless::NetworkAnalyzerConfiguration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-networkanalyzerconfiguration.html",
    "Properties": {
      "Description": "String",
      "Name": "String",
      "Tags": "Tag",
      "TraceContent": "TraceContent",
      "WirelessDevices": "String",
      "WirelessGateways": "String"
    }
  },
  "AWS::IoTWireless::PartnerAccount": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-partneraccount.html",
    "Properties": {
      "AccountLinked": "Boolean",
      "PartnerAccountId": "String",
      "PartnerType": "String",
      "Sidewalk": "SidewalkAccountInfo",
      "SidewalkResponse": "SidewalkAccountInfoWithFingerprint",
      "SidewalkUpdate": "SidewalkUpdateAccount",
      "Tags": "Tag"
    }
  },
  "AWS::IoTWireless::ServiceProfile": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-serviceprofile.html",
    "Properties": {
      "LoRaWAN": "LoRaWANServiceProfile",
      "Name": "String",
      "Tags": "Tag"
    }
  },
  "AWS::IoTWireless::TaskDefinition": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-taskdefinition.html",
    "Properties": {
      "AutoCreateTasks": "Boolean",
      "LoRaWANUpdateGatewayTaskEntry": "LoRaWANUpdateGatewayTaskEntry",
      "Name": "String",
      "Tags": "Tag",
      "TaskDefinitionType": "String",
      "Update": "UpdateWirelessGatewayTaskCreate"
    }
  },
  "AWS::IoTWireless::WirelessDevice": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessdevice.html",
    "Properties": {
      "Description": "String",
      "DestinationName": "String",
      "LastUplinkReceivedAt": "String",
      "LoRaWAN": "LoRaWANDevice",
      "Name": "String",
      "Positioning": "String",
      "Tags": "Tag",
      "ThingArn": "String",
      "Type": "String"
    }
  },
  "AWS::IoTWireless::WirelessDeviceImportTask": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessdeviceimporttask.html",
    "Properties": {
      "DestinationName": "String",
      "Sidewalk": "Sidewalk",
      "Tags": "Tag"
    }
  },
  "AWS::IoTWireless::WirelessGateway": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessgateway.html",
    "Properties": {
      "Description": "String",
      "LastUplinkReceivedAt": "String",
      "LoRaWAN": "LoRaWANGateway",
      "Name": "String",
      "Tags": "Tag",
      "ThingArn": "String",
      "ThingName": "String"
    }
  },
  "AWS::KMS::Alias": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-alias.html",
    "Properties": {
      "AliasName": "String",
      "TargetKeyId": "String"
    }
  },
  "AWS::KMS::Key": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html",
    "Properties": {
      "BypassPolicyLockoutSafetyCheck": "Boolean",
      "Description": "String",
      "EnableKeyRotation": "Boolean",
      "Enabled": "Boolean",
      "KeyPolicy": "Json",
      "KeySpec": "String",
      "KeyUsage": "String",
      "MultiRegion": "Boolean",
      "Origin": "String",
      "PendingWindowInDays": "Integer",
      "RotationPeriodInDays": "Integer",
      "Tags": "Tag"
    }
  },
  "AWS::KMS::ReplicaKey": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-replicakey.html",
    "Properties": {
      "Description": "String",
      "Enabled": "Boolean",
      "KeyPolicy": "Json",
      "PendingWindowInDays": "Integer",
      "PrimaryKeyArn": "String",
      "Tags": "Tag"
    }
  },
  "AWS::KafkaConnect::Connector": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html",
    "Properties": {
      "Capacity": "Capacity",
      "ConnectorConfiguration": "Map",
      "ConnectorDescription": "String",
      "ConnectorName": "String",
      "KafkaCluster": "KafkaCluster",
      "KafkaClusterClientAuthentication": "KafkaClusterClientAuthentication",
      "KafkaClusterEncryptionInTransit": "KafkaClusterEncryptionInTransit",
      "KafkaConnectVersion": "String",
      "LogDelivery": "LogDelivery",
      "Plugins": "Plugin",
      "ServiceExecutionRoleArn": "String",
      "Tags": "Tag",
      "WorkerConfiguration": "WorkerConfiguration"
    }
  },
  "AWS::KafkaConnect::CustomPlugin": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-customplugin.html",
    "Properties": {
      "ContentType": "String",
      "Description": "String",
      "Location": "CustomPluginLocation",
      "Name": "String",
      "Tags": "Tag"
    }
  },
  "AWS::KafkaConnect::WorkerConfiguration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-workerconfiguration.html",
    "Properties": {
      "Description": "String",
      "Name": "String",
      "PropertiesFileContent": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Kendra::DataSource": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendra-datasource.html",
    "Properties": {
      "CustomDocumentEnrichmentConfiguration": "CustomDocumentEnrichmentConfiguration",
      "DataSourceConfiguration": "DataSourceConfiguration",
      "Description": "String",
      "IndexId": "String",
      "LanguageCode": "String",
      "Name": "String",
      "RoleArn": "String",
      "Schedule": "String",
      "Tags": "Tag",
      "Type": "String"
    }
  },
  "AWS::Kendra::Faq": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendra-faq.html",
    "Properties": {
      "Description": "String",
      "FileFormat": "String",
      "IndexId": "String",
      "LanguageCode": "String",
      "Name": "String",
      "RoleArn": "String",
      "S3Path": "S3Path",
      "Tags": "Tag"
    }
  },
  "AWS::Kendra::Index": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendra-index.html",
    "Properties": {
      "CapacityUnits": "CapacityUnitsConfiguration",
      "Description": "String",
      "DocumentMetadataConfigurations": "DocumentMetadataConfiguration",
      "Edition": "String",
      "Name": "String",
      "RoleArn": "String",
      "ServerSideEncryptionConfiguration": "ServerSideEncryptionConfiguration",
      "Tags": "Tag",
      "UserContextPolicy": "String",
      "UserTokenConfigurations": "UserTokenConfiguration"
    }
  },
  "AWS::KendraRanking::ExecutionPlan": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendraranking-executionplan.html",
    "Properties": {
      "CapacityUnits": "CapacityUnitsConfiguration",
      "Description": "String",
      "Name": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Kinesis::Stream": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html",
    "Properties": {
      "Name": "String",
      "RetentionPeriodHours": "Integer",
      "ShardCount": "Integer",
      "StreamEncryption": "StreamEncryption",
      "StreamModeDetails": "StreamModeDetails",
      "Tags": "Tag"
    }
  },
  "AWS::Kinesis::StreamConsumer": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-streamconsumer.html",
    "Properties": {
      "ConsumerName": "String",
      "StreamARN": "String"
    }
  },
  "AWS::KinesisAnalytics::Application": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalytics-application.html",
    "Properties": {
      "ApplicationCode": "String",
      "ApplicationDescription": "String",
      "ApplicationName": "String",
      "Inputs": "Input"
    }
  },
  "AWS::KinesisAnalytics::ApplicationOutput": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalytics-applicationoutput.html",
    "Properties": {
      "ApplicationName": "String",
      "Output": "Output"
    }
  },
  "AWS::KinesisAnalytics::ApplicationReferenceDataSource": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalytics-applicationreferencedatasource.html",
    "Properties": {
      "ApplicationName": "String",
      "ReferenceDataSource": "ReferenceDataSource"
    }
  },
  "AWS::KinesisAnalyticsV2::Application": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-application.html",
    "Properties": {
      "ApplicationConfiguration": "ApplicationConfiguration",
      "ApplicationDescription": "String",
      "ApplicationMaintenanceConfiguration": "ApplicationMaintenanceConfiguration",
      "ApplicationMode": "String",
      "ApplicationName": "String",
      "RunConfiguration": "RunConfiguration",
      "RuntimeEnvironment": "String",
      "ServiceExecutionRole": "String",
      "Tags": "Tag"
    }
  },
  "AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-applicationcloudwatchloggingoption.html",
    "Properties": {
      "ApplicationName": "String",
      "CloudWatchLoggingOption": "CloudWatchLoggingOption"
    }
  },
  "AWS::KinesisAnalyticsV2::ApplicationOutput": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-applicationoutput.html",
    "Properties": {
      "ApplicationName": "String",
      "Output": "Output"
    }
  },
  "AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-applicationreferencedatasource.html",
    "Properties": {
      "ApplicationName": "String",
      "ReferenceDataSource": "ReferenceDataSource"
    }
  },
  "AWS::KinesisFirehose::DeliveryStream": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisfirehose-deliverystream.html",
    "Properties": {
      "AmazonOpenSearchServerlessDestinationConfiguration": "AmazonOpenSearchServerlessDestinationConfiguration",
      "AmazonopensearchserviceDestinationConfiguration": "AmazonopensearchserviceDestinationConfiguration",
      "DeliveryStreamEncryptionConfigurationInput": "DeliveryStreamEncryptionConfigurationInput",
      "DeliveryStreamName": "String",
      "DeliveryStreamType": "String",
      "ElasticsearchDestinationConfiguration": "ElasticsearchDestinationConfiguration",
      "ExtendedS3DestinationConfiguration": "ExtendedS3DestinationConfiguration",
      "HttpEndpointDestinationConfiguration": "HttpEndpointDestinationConfiguration",
      "IcebergDestinationConfiguration": "IcebergDestinationConfiguration",
      "KinesisStreamSourceConfiguration": "KinesisStreamSourceConfiguration",
      "MSKSourceConfiguration": "MSKSourceConfiguration",
      "RedshiftDestinationConfiguration": "RedshiftDestinationConfiguration",
      "S3DestinationConfiguration": "S3DestinationConfiguration",
      "SnowflakeDestinationConfiguration": "SnowflakeDestinationConfiguration",
      "SplunkDestinationConfiguration": "SplunkDestinationConfiguration",
      "Tags": "Tag"
    }
  },
  "AWS::KinesisVideo::SignalingChannel": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisvideo-signalingchannel.html",
    "Properties": {
      "MessageTtlSeconds": "Integer",
      "Name": "String",
      "Tags": "Tag",
      "Type": "String"
    }
  },
  "AWS::KinesisVideo::Stream": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisvideo-stream.html",
    "Properties": {
      "DataRetentionInHours": "Integer",
      "DeviceName": "String",
      "KmsKeyId": "String",
      "MediaType": "String",
      "Name": "String",
      "Tags": "Tag"
    }
  },
  "AWS::LakeFormation::DataCellsFilter": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datacellsfilter.html",
    "Properties": {
      "ColumnNames": "String",
      "ColumnWildcard": "ColumnWildcard",
      "DatabaseName": "String",
      "Name": "String",
      "RowFilter": "RowFilter",
      "TableCatalogId": "String",
      "TableName": "String"
    }
  },
  "AWS::LakeFormation::DataLakeSettings": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datalakesettings.html",
    "Properties": {
      "Admins": "Admins",
      "AllowExternalDataFiltering": "Boolean",
      "AllowFullTableExternalDataAccess": "Boolean",
      "AuthorizedSessionTagValueList": "String",
      "CreateDatabaseDefaultPermissions": "CreateDatabaseDefaultPermissions",
      "CreateTableDefaultPermissions": "CreateTableDefaultPermissions",
      "ExternalDataFilteringAllowList": "ExternalDataFilteringAllowList",
      "MutationType": "String",
      "Parameters": "Json",
      "TrustedResourceOwners": "String"
    }
  },
  "AWS::LakeFormation::Permissions": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-permissions.html",
    "Properties": {
      "DataLakePrincipal": "DataLakePrincipal",
      "Permissions": "String",
      "PermissionsWithGrantOption": "String",
      "Resource": "Resource"
    }
  },
  "AWS::LakeFormation::PrincipalPermissions": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-principalpermissions.html",
    "Properties": {
      "Catalog": "String",
      "Permissions": "String",
      "PermissionsWithGrantOption": "String",
      "Principal": "DataLakePrincipal",
      "Resource": "Resource"
    }
  },
  "AWS::LakeFormation::Resource": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-resource.html",
    "Properties": {
      "HybridAccessEnabled": "Boolean",
      "ResourceArn": "String",
      "RoleArn": "String",
      "UseServiceLinkedRole": "Boolean",
      "WithFederation": "Boolean"
    }
  },
  "AWS::LakeFormation::Tag": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-tag.html",
    "Properties": {
      "CatalogId": "String",
      "TagKey": "String",
      "TagValues": "String"
    }
  },
  "AWS::LakeFormation::TagAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-tagassociation.html",
    "Properties": {
      "LFTags": "LFTagPair",
      "Resource": "Resource"
    }
  },
  "AWS::Lambda::Alias": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-alias.html",
    "Properties": {
      "Description": "String",
      "FunctionName": "String",
      "FunctionVersion": "String",
      "Name": "String",
      "ProvisionedConcurrencyConfig": "ProvisionedConcurrencyConfiguration",
      "RoutingConfig": "AliasRoutingConfiguration"
    }
  },
  "AWS::Lambda::CodeSigningConfig": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-codesigningconfig.html",
    "Properties": {
      "AllowedPublishers": "AllowedPublishers",
      "CodeSigningPolicies": "CodeSigningPolicies",
      "Description": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Lambda::EventInvokeConfig": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventinvokeconfig.html",
    "Properties": {
      "DestinationConfig": "DestinationConfig",
      "FunctionName": "String",
      "MaximumEventAgeInSeconds": "Integer",
      "MaximumRetryAttempts": "Integer",
      "Qualifier": "String"
    }
  },
  "AWS::Lambda::EventSourceMapping": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html",
    "Properties": {
      "AmazonManagedKafkaEventSourceConfig": "AmazonManagedKafkaEventSourceConfig",
      "BatchSize": "Integer",
      "BisectBatchOnFunctionError": "Boolean",
      "DestinationConfig": "DestinationConfig",
      "DocumentDBEventSourceConfig": "DocumentDBEventSourceConfig",
      "Enabled": "Boolean",
      "EventSourceArn": "String",
      "FilterCriteria": "FilterCriteria",
      "FunctionName": "String",
      "FunctionResponseTypes": "String",
      "KmsKeyArn": "String",
      "MaximumBatchingWindowInSeconds": "Integer",
      "MaximumRecordAgeInSeconds": "Integer",
      "MaximumRetryAttempts": "Integer",
      "ParallelizationFactor": "Integer",
      "Queues": "String",
      "ScalingConfig": "ScalingConfig",
      "SelfManagedEventSource": "SelfManagedEventSource",
      "SelfManagedKafkaEventSourceConfig": "SelfManagedKafkaEventSourceConfig",
      "SourceAccessConfigurations": "SourceAccessConfiguration",
      "StartingPosition": "String",
      "StartingPositionTimestamp": "Double",
      "Tags": "Tag",
      "Topics": "String",
      "TumblingWindowInSeconds": "Integer"
    }
  },
  "AWS::Lambda::Function": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html",
    "Properties": {
      "Architectures": "String",
      "Code": "Code",
      "CodeSigningConfigArn": "String",
      "DeadLetterConfig": "DeadLetterConfig",
      "Description": "String",
      "Environment": "Environment",
      "EphemeralStorage": "EphemeralStorage",
      "FileSystemConfigs": "FileSystemConfig",
      "FunctionName": "String",
      "Handler": "String",
      "ImageConfig": "ImageConfig",
      "KmsKeyArn": "String",
      "Layers": "String",
      "LoggingConfig": "LoggingConfig",
      "MemorySize": "Integer",
      "PackageType": "String",
      "RecursiveLoop": "String",
      "ReservedConcurrentExecutions": "Integer",
      "Role": "String",
      "Runtime": "String",
      "RuntimeManagementConfig": "RuntimeManagementConfig",
      "SnapStart": "SnapStart",
      "Tags": "Tag",
      "Timeout": "Integer",
      "TracingConfig": "TracingConfig",
      "VpcConfig": "VpcConfig"
    }
  },
  "AWS::Lambda::LayerVersion": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-layerversion.html",
    "Properties": {
      "CompatibleArchitectures": "String",
      "CompatibleRuntimes": "String",
      "Content": "Content",
      "Description": "String",
      "LayerName": "String",
      "LicenseInfo": "String"
    }
  },
  "AWS::Lambda::LayerVersionPermission": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-layerversionpermission.html",
    "Properties": {
      "Action": "String",
      "LayerVersionArn": "String",
      "OrganizationId": "String",
      "Principal": "String"
    }
  },
  "AWS::Lambda::Permission": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html",
    "Properties": {
      "Action": "String",
      "EventSourceToken": "String",
      "FunctionName": "String",
      "FunctionUrlAuthType": "String",
      "Principal": "String",
      "PrincipalOrgID": "String",
      "SourceAccount": "String",
      "SourceArn": "String"
    }
  },
  "AWS::Lambda::Url": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-url.html",
    "Properties": {
      "AuthType": "String",
      "Cors": "Cors",
      "InvokeMode": "String",
      "Qualifier": "String",
      "TargetFunctionArn": "String"
    }
  },
  "AWS::Lambda::Version": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-version.html",
    "Properties": {
      "CodeSha256": "String",
      "Description": "String",
      "FunctionName": "String",
      "Policy": "Json",
      "ProvisionedConcurrencyConfig": "ProvisionedConcurrencyConfiguration",
      "RuntimePolicy": "RuntimePolicy"
    }
  },
  "AWS::LaunchWizard::Deployment": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-launchwizard-deployment.html",
    "Properties": {
      "DeploymentPatternName": "String",
      "Name": "String",
      "Specifications": "Map",
      "Tags": "Tags",
      "WorkloadName": "String"
    }
  },
  "AWS::Lex::Bot": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-bot.html",
    "Properties": {
      "AutoBuildBotLocales": "Boolean",
      "BotFileS3Location": "S3Location",
      "BotLocales": "BotLocale",
      "BotTags": "Tag",
      "DataPrivacy": "DataPrivacy",
      "Description": "String",
      "IdleSessionTTLInSeconds": "Integer",
      "Name": "String",
      "RoleArn": "String",
      "TestBotAliasSettings": "TestBotAliasSettings",
      "TestBotAliasTags": "Tag"
    }
  },
  "AWS::Lex::BotAlias": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-botalias.html",
    "Properties": {
      "BotAliasLocaleSettings": "BotAliasLocaleSettingsItem",
      "BotAliasName": "String",
      "BotAliasTags": "Tag",
      "BotId": "String",
      "BotVersion": "String",
      "ConversationLogSettings": "ConversationLogSettings",
      "Description": "String",
      "SentimentAnalysisSettings": "SentimentAnalysisSettings"
    }
  },
  "AWS::Lex::BotVersion": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-botversion.html",
    "Properties": {
      "BotId": "String",
      "BotVersionLocaleSpecification": "BotVersionLocaleSpecification",
      "Description": "String"
    }
  },
  "AWS::Lex::ResourcePolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-resourcepolicy.html",
    "Properties": {
      "Policy": "Json",
      "ResourceArn": "String"
    }
  },
  "AWS::LicenseManager::Grant": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html",
    "Properties": {
      "AllowedOperations": "String",
      "GrantName": "String",
      "HomeRegion": "String",
      "LicenseArn": "String",
      "Principals": "String",
      "Status": "String"
    }
  },
  "AWS::LicenseManager::License": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html",
    "Properties": {
      "Beneficiary": "String",
      "ConsumptionConfiguration": "ConsumptionConfiguration",
      "Entitlements": "Entitlement",
      "HomeRegion": "String",
      "Issuer": "IssuerData",
      "LicenseMetadata": "Metadata",
      "LicenseName": "String",
      "ProductName": "String",
      "ProductSKU": "String",
      "Status": "String",
      "Validity": "ValidityDateFormat"
    }
  },
  "AWS::Lightsail::Alarm": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-alarm.html",
    "Properties": {
      "AlarmName": "String",
      "ComparisonOperator": "String",
      "ContactProtocols": "String",
      "DatapointsToAlarm": "Integer",
      "EvaluationPeriods": "Integer",
      "MetricName": "String",
      "MonitoredResourceName": "String",
      "NotificationEnabled": "Boolean",
      "NotificationTriggers": "String",
      "Threshold": "Double",
      "TreatMissingData": "String"
    }
  },
  "AWS::Lightsail::Bucket": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-bucket.html",
    "Properties": {
      "AccessRules": "AccessRules",
      "BucketName": "String",
      "BundleId": "String",
      "ObjectVersioning": "Boolean",
      "ReadOnlyAccessAccounts": "String",
      "ResourcesReceivingAccess": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Lightsail::Certificate": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-certificate.html",
    "Properties": {
      "CertificateName": "String",
      "DomainName": "String",
      "SubjectAlternativeNames": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Lightsail::Container": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-container.html",
    "Properties": {
      "ContainerServiceDeployment": "ContainerServiceDeployment",
      "IsDisabled": "Boolean",
      "Power": "String",
      "PrivateRegistryAccess": "PrivateRegistryAccess",
      "PublicDomainNames": "PublicDomainName",
      "Scale": "Integer",
      "ServiceName": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Lightsail::Database": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-database.html",
    "Properties": {
      "AvailabilityZone": "String",
      "BackupRetention": "Boolean",
      "CaCertificateIdentifier": "String",
      "MasterDatabaseName": "String",
      "MasterUserPassword": "String",
      "MasterUsername": "String",
      "PreferredBackupWindow": "String",
      "PreferredMaintenanceWindow": "String",
      "PubliclyAccessible": "Boolean",
      "RelationalDatabaseBlueprintId": "String",
      "RelationalDatabaseBundleId": "String",
      "RelationalDatabaseName": "String",
      "RelationalDatabaseParameters": "RelationalDatabaseParameter",
      "RotateMasterUserPassword": "Boolean",
      "Tags": "Tag"
    }
  },
  "AWS::Lightsail::Disk": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-disk.html",
    "Properties": {
      "AddOns": "AddOn",
      "AvailabilityZone": "String",
      "DiskName": "String",
      "Location": "Location",
      "SizeInGb": "Integer",
      "Tags": "Tag"
    }
  },
  "AWS::Lightsail::Distribution": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-distribution.html",
    "Properties": {
      "BundleId": "String",
      "CacheBehaviorSettings": "CacheSettings",
      "CacheBehaviors": "CacheBehaviorPerPath",
      "CertificateName": "String",
      "DefaultCacheBehavior": "CacheBehavior",
      "DistributionName": "String",
      "IpAddressType": "String",
      "IsEnabled": "Boolean",
      "Origin": "InputOrigin",
      "Tags": "Tag"
    }
  },
  "AWS::Lightsail::Instance": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-instance.html",
    "Properties": {
      "AddOns": "AddOn",
      "AvailabilityZone": "String",
      "BlueprintId": "String",
      "BundleId": "String",
      "Hardware": "Hardware",
      "InstanceName": "String",
      "KeyPairName": "String",
      "Location": "Location",
      "Networking": "Networking",
      "State": "State",
      "Tags": "Tag",
      "UserData": "String"
    }
  },
  "AWS::Lightsail::LoadBalancer": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-loadbalancer.html",
    "Properties": {
      "AttachedInstances": "String",
      "HealthCheckPath": "String",
      "InstancePort": "Integer",
      "IpAddressType": "String",
      "LoadBalancerName": "String",
      "SessionStickinessEnabled": "Boolean",
      "SessionStickinessLBCookieDurationSeconds": "String",
      "Tags": "Tag",
      "TlsPolicyName": "String"
    }
  },
  "AWS::Lightsail::LoadBalancerTlsCertificate": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-loadbalancertlscertificate.html",
    "Properties": {
      "CertificateAlternativeNames": "String",
      "CertificateDomainName": "String",
      "CertificateName": "String",
      "HttpsRedirectionEnabled": "Boolean",
      "IsAttached": "Boolean",
      "LoadBalancerName": "String"
    }
  },
  "AWS::Lightsail::StaticIp": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-staticip.html",
    "Properties": {
      "AttachedTo": "String",
      "StaticIpName": "String"
    }
  },
  "AWS::Location::APIKey": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-apikey.html",
    "Properties": {
      "Description": "String",
      "ExpireTime": "String",
      "ForceDelete": "Boolean",
      "ForceUpdate": "Boolean",
      "KeyName": "String",
      "NoExpiry": "Boolean",
      "Restrictions": "ApiKeyRestrictions",
      "Tags": "Tag"
    }
  },
  "AWS::Location::GeofenceCollection": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-geofencecollection.html",
    "Properties": {
      "CollectionName": "String",
      "Description": "String",
      "KmsKeyId": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Location::Map": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-map.html",
    "Properties": {
      "Configuration": "MapConfiguration",
      "Description": "String",
      "MapName": "String",
      "PricingPlan": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Location::PlaceIndex": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-placeindex.html",
    "Properties": {
      "DataSource": "String",
      "DataSourceConfiguration": "DataSourceConfiguration",
      "Description": "String",
      "IndexName": "String",
      "PricingPlan": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Location::RouteCalculator": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-routecalculator.html",
    "Properties": {
      "CalculatorName": "String",
      "DataSource": "String",
      "Description": "String",
      "PricingPlan": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Location::Tracker": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-tracker.html",
    "Properties": {
      "Description": "String",
      "EventBridgeEnabled": "Boolean",
      "KmsKeyEnableGeospatialQueries": "Boolean",
      "KmsKeyId": "String",
      "PositionFiltering": "String",
      "Tags": "Tag",
      "TrackerName": "String"
    }
  },
  "AWS::Location::TrackerConsumer": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-trackerconsumer.html",
    "Properties": {
      "ConsumerArn": "String",
      "TrackerName": "String"
    }
  },
  "AWS::Logs::AccountPolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-accountpolicy.html",
    "Properties": {
      "PolicyDocument": "String",
      "PolicyName": "String",
      "PolicyType": "String",
      "Scope": "String",
      "SelectionCriteria": "String"
    }
  },
  "AWS::Logs::Delivery": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-delivery.html",
    "Properties": {
      "DeliveryDestinationArn": "String",
      "DeliverySourceName": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Logs::DeliveryDestination": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-deliverydestination.html",
    "Properties": {
      "DeliveryDestinationPolicy": "Json",
      "DestinationResourceArn": "String",
      "Name": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Logs::DeliverySource": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-deliverysource.html",
    "Properties": {
      "LogType": "String",
      "Name": "String",
      "ResourceArn": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Logs::Destination": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-destination.html",
    "Properties": {
      "DestinationName": "String",
      "DestinationPolicy": "String",
      "RoleArn": "String",
      "TargetArn": "String"
    }
  },
  "AWS::Logs::LogAnomalyDetector": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-loganomalydetector.html",
    "Properties": {
      "AccountId": "String",
      "AnomalyVisibilityTime": "Double",
      "DetectorName": "String",
      "EvaluationFrequency": "String",
      "FilterPattern": "String",
      "KmsKeyId": "String",
      "LogGroupArnList": "String"
    }
  },
  "AWS::Logs::LogGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-loggroup.html",
    "Properties": {
      "DataProtectionPolicy": "Json",
      "KmsKeyId": "String",
      "LogGroupClass": "String",
      "LogGroupName": "String",
      "RetentionInDays": "Integer",
      "Tags": "Tag"
    }
  },
  "AWS::Logs::LogStream": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-logstream.html",
    "Properties": {
      "LogGroupName": "String",
      "LogStreamName": "String"
    }
  },
  "AWS::Logs::MetricFilter": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-metricfilter.html",
    "Properties": {
      "FilterName": "String",
      "FilterPattern": "String",
      "LogGroupName": "String",
      "MetricTransformations": "MetricTransformation"
    }
  },
  "AWS::Logs::QueryDefinition": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-querydefinition.html",
    "Properties": {
      "LogGroupNames": "String",
      "Name": "String",
      "QueryString": "String"
    }
  },
  "AWS::Logs::ResourcePolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-resourcepolicy.html",
    "Properties": {
      "PolicyDocument": "String",
      "PolicyName": "String"
    }
  },
  "AWS::Logs::SubscriptionFilter": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-subscriptionfilter.html",
    "Properties": {
      "DestinationArn": "String",
      "Distribution": "String",
      "FilterName": "String",
      "FilterPattern": "String",
      "LogGroupName": "String",
      "RoleArn": "String"
    }
  },
  "AWS::LookoutEquipment::InferenceScheduler": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lookoutequipment-inferencescheduler.html",
    "Properties": {
      "DataDelayOffsetInMinutes": "Integer",
      "DataInputConfiguration": "DataInputConfiguration",
      "DataOutputConfiguration": "DataOutputConfiguration",
      "DataUploadFrequency": "String",
      "InferenceSchedulerName": "String",
      "ModelName": "String",
      "RoleArn": "String",
      "ServerSideKmsKeyId": "String",
      "Tags": "Tag"
    }
  },
  "AWS::LookoutMetrics::Alert": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lookoutmetrics-alert.html",
    "Properties": {
      "Action": "Action",
      "AlertDescription": "String",
      "AlertName": "String",
      "AlertSensitivityThreshold": "Integer",
      "AnomalyDetectorArn": "String"
    }
  },
  "AWS::LookoutMetrics::AnomalyDetector": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lookoutmetrics-anomalydetector.html",
    "Properties": {
      "AnomalyDetectorConfig": "AnomalyDetectorConfig",
      "AnomalyDetectorDescription": "String",
      "AnomalyDetectorName": "String",
      "KmsKeyArn": "String",
      "MetricSetList": "MetricSet"
    }
  },
  "AWS::LookoutVision::Project": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lookoutvision-project.html",
    "Properties": {
      "ProjectName": "String"
    }
  },
  "AWS::M2::Application": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-application.html",
    "Properties": {
      "Definition": "Definition",
      "Description": "String",
      "EngineType": "String",
      "KmsKeyId": "String",
      "Name": "String",
      "RoleArn": "String",
      "Tags": "Map"
    }
  },
  "AWS::M2::Environment": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-environment.html",
    "Properties": {
      "Description": "String",
      "EngineType": "String",
      "EngineVersion": "String",
      "HighAvailabilityConfig": "HighAvailabilityConfig",
      "InstanceType": "String",
      "KmsKeyId": "String",
      "Name": "String",
      "PreferredMaintenanceWindow": "String",
      "PubliclyAccessible": "Boolean",
      "SecurityGroupIds": "String",
      "StorageConfigurations": "StorageConfiguration",
      "SubnetIds": "String",
      "Tags": "Map"
    }
  },
  "AWS::MSK::BatchScramSecret": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-batchscramsecret.html",
    "Properties": {
      "ClusterArn": "String",
      "SecretArnList": "String"
    }
  },
  "AWS::MSK::Cluster": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-cluster.html",
    "Properties": {
      "BrokerNodeGroupInfo": "BrokerNodeGroupInfo",
      "ClientAuthentication": "ClientAuthentication",
      "ClusterName": "String",
      "ConfigurationInfo": "ConfigurationInfo",
      "CurrentVersion": "String",
      "EncryptionInfo": "EncryptionInfo",
      "EnhancedMonitoring": "String",
      "KafkaVersion": "String",
      "LoggingInfo": "LoggingInfo",
      "NumberOfBrokerNodes": "Integer",
      "OpenMonitoring": "OpenMonitoring",
      "StorageMode": "String",
      "Tags": "Map"
    }
  },
  "AWS::MSK::ClusterPolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-clusterpolicy.html",
    "Properties": {
      "ClusterArn": "String",
      "Policy": "Json"
    }
  },
  "AWS::MSK::Configuration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-configuration.html",
    "Properties": {
      "Description": "String",
      "KafkaVersionsList": "String",
      "LatestRevision": "LatestRevision",
      "Name": "String",
      "ServerProperties": "String"
    }
  },
  "AWS::MSK::Replicator": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-replicator.html",
    "Properties": {
      "CurrentVersion": "String",
      "Description": "String",
      "KafkaClusters": "KafkaCluster",
      "ReplicationInfoList": "ReplicationInfo",
      "ReplicatorName": "String",
      "ServiceExecutionRoleArn": "String",
      "Tags": "Tag"
    }
  },
  "AWS::MSK::ServerlessCluster": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-serverlesscluster.html",
    "Properties": {
      "ClientAuthentication": "ClientAuthentication",
      "ClusterName": "String",
      "Tags": "Map",
      "VpcConfigs": "VpcConfig"
    }
  },
  "AWS::MSK::VpcConnection": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-vpcconnection.html",
    "Properties": {
      "Authentication": "String",
      "ClientSubnets": "String",
      "SecurityGroups": "String",
      "Tags": "Map",
      "TargetClusterArn": "String",
      "VpcId": "String"
    }
  },
  "AWS::MWAA::Environment": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html",
    "Properties": {
      "AirflowConfigurationOptions": "Json",
      "AirflowVersion": "String",
      "DagS3Path": "String",
      "EndpointManagement": "String",
      "EnvironmentClass": "String",
      "ExecutionRoleArn": "String",
      "KmsKey": "String",
      "LoggingConfiguration": "LoggingConfiguration",
      "MaxWebservers": "Integer",
      "MaxWorkers": "Integer",
      "MinWebservers": "Integer",
      "MinWorkers": "Integer",
      "Name": "String",
      "NetworkConfiguration": "NetworkConfiguration",
      "PluginsS3ObjectVersion": "String",
      "PluginsS3Path": "String",
      "RequirementsS3ObjectVersion": "String",
      "RequirementsS3Path": "String",
      "Schedulers": "Integer",
      "SourceBucketArn": "String",
      "StartupScriptS3ObjectVersion": "String",
      "StartupScriptS3Path": "String",
      "Tags": "Json",
      "WebserverAccessMode": "String",
      "WeeklyMaintenanceWindowStart": "String"
    }
  },
  "AWS::Macie::AllowList": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-macie-allowlist.html",
    "Properties": {
      "Criteria": "Criteria",
      "Description": "String",
      "Name": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Macie::CustomDataIdentifier": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-macie-customdataidentifier.html",
    "Properties": {
      "Description": "String",
      "IgnoreWords": "String",
      "Keywords": "String",
      "MaximumMatchDistance": "Integer",
      "Name": "String",
      "Regex": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Macie::FindingsFilter": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-macie-findingsfilter.html",
    "Properties": {
      "Action": "String",
      "Description": "String",
      "FindingCriteria": "FindingCriteria",
      "Name": "String",
      "Position": "Integer",
      "Tags": "Tag"
    }
  },
  "AWS::Macie::Session": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-macie-session.html",
    "Properties": {
      "FindingPublishingFrequency": "String",
      "Status": "String"
    }
  },
  "AWS::ManagedBlockchain::Accessor": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-managedblockchain-accessor.html",
    "Properties": {
      "AccessorType": "String",
      "NetworkType": "String",
      "Tags": "Tag"
    }
  },
  "AWS::ManagedBlockchain::Member": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-managedblockchain-member.html",
    "Properties": {
      "InvitationId": "String",
      "MemberConfiguration": "MemberConfiguration",
      "NetworkConfiguration": "NetworkConfiguration",
      "NetworkId": "String"
    }
  },
  "AWS::ManagedBlockchain::Node": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-managedblockchain-node.html",
    "Properties": {
      "MemberId": "String",
      "NetworkId": "String",
      "NodeConfiguration": "NodeConfiguration"
    }
  },
  "AWS::MediaConnect::Bridge": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-bridge.html",
    "Properties": {
      "EgressGatewayBridge": "EgressGatewayBridge",
      "IngressGatewayBridge": "IngressGatewayBridge",
      "Name": "String",
      "Outputs": "BridgeOutput",
      "PlacementArn": "String",
      "SourceFailoverConfig": "FailoverConfig",
      "Sources": "BridgeSource"
    }
  },
  "AWS::MediaConnect::BridgeOutput": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-bridgeoutput.html",
    "Properties": {
      "BridgeArn": "String",
      "Name": "String",
      "NetworkOutput": "BridgeNetworkOutput"
    }
  },
  "AWS::MediaConnect::BridgeSource": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-bridgesource.html",
    "Properties": {
      "BridgeArn": "String",
      "FlowSource": "BridgeFlowSource",
      "Name": "String",
      "NetworkSource": "BridgeNetworkSource"
    }
  },
  "AWS::MediaConnect::Flow": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flow.html",
    "Properties": {
      "AvailabilityZone": "String",
      "Maintenance": "Maintenance",
      "MediaStreams": "MediaStream",
      "Name": "String",
      "Source": "Source",
      "SourceFailoverConfig": "FailoverConfig",
      "SourceMonitoringConfig": "SourceMonitoringConfig",
      "VpcInterfaces": "VpcInterface"
    }
  },
  "AWS::MediaConnect::FlowEntitlement": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowentitlement.html",
    "Properties": {
      "DataTransferSubscriberFeePercent": "Integer",
      "Description": "String",
      "Encryption": "Encryption",
      "EntitlementStatus": "String",
      "FlowArn": "String",
      "Name": "String",
      "Subscribers": "String"
    }
  },
  "AWS::MediaConnect::FlowOutput": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowoutput.html",
    "Properties": {
      "CidrAllowList": "String",
      "Description": "String",
      "Destination": "String",
      "Encryption": "Encryption",
      "FlowArn": "String",
      "MaxLatency": "Integer",
      "MediaStreamOutputConfigurations": "MediaStreamOutputConfiguration",
      "MinLatency": "Integer",
      "Name": "String",
      "OutputStatus": "String",
      "Port": "Integer",
      "Protocol": "String",
      "RemoteId": "String",
      "SmoothingLatency": "Integer",
      "StreamId": "String",
      "VpcInterfaceAttachment": "VpcInterfaceAttachment"
    }
  },
  "AWS::MediaConnect::FlowSource": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowsource.html",
    "Properties": {
      "Decryption": "Encryption",
      "Description": "String",
      "EntitlementArn": "String",
      "FlowArn": "String",
      "GatewayBridgeSource": "GatewayBridgeSource",
      "IngestPort": "Integer",
      "MaxBitrate": "Integer",
      "MaxLatency": "Integer",
      "MinLatency": "Integer",
      "Name": "String",
      "Protocol": "String",
      "SenderControlPort": "Integer",
      "SenderIpAddress": "String",
      "SourceListenerAddress": "String",
      "SourceListenerPort": "Integer",
      "StreamId": "String",
      "VpcInterfaceName": "String",
      "WhitelistCidr": "String"
    }
  },
  "AWS::MediaConnect::FlowVpcInterface": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowvpcinterface.html",
    "Properties": {
      "FlowArn": "String",
      "Name": "String",
      "RoleArn": "String",
      "SecurityGroupIds": "String",
      "SubnetId": "String"
    }
  },
  "AWS::MediaConnect::Gateway": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-gateway.html",
    "Properties": {
      "EgressCidrBlocks": "String",
      "Name": "String",
      "Networks": "GatewayNetwork"
    }
  },
  "AWS::MediaConvert::JobTemplate": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconvert-jobtemplate.html",
    "Properties": {
      "AccelerationSettings": "AccelerationSettings",
      "Category": "String",
      "Description": "String",
      "HopDestinations": "HopDestination",
      "Name": "String",
      "Priority": "Integer",
      "Queue": "String",
      "SettingsJson": "Json",
      "StatusUpdateInterval": "String",
      "Tags": "Json"
    }
  },
  "AWS::MediaConvert::Preset": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconvert-preset.html",
    "Properties": {
      "Category": "String",
      "Description": "String",
      "Name": "String",
      "SettingsJson": "Json",
      "Tags": "Json"
    }
  },
  "AWS::MediaConvert::Queue": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconvert-queue.html",
    "Properties": {
      "Description": "String",
      "Name": "String",
      "PricingPlan": "String",
      "Status": "String",
      "Tags": "Json"
    }
  },
  "AWS::MediaLive::Channel": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-channel.html",
    "Properties": {
      "CdiInputSpecification": "CdiInputSpecification",
      "ChannelClass": "String",
      "Destinations": "OutputDestination",
      "EncoderSettings": "EncoderSettings",
      "InputAttachments": "InputAttachment",
      "InputSpecification": "InputSpecification",
      "LogLevel": "String",
      "Maintenance": "MaintenanceCreateSettings",
      "Name": "String",
      "RoleArn": "String",
      "Tags": "Json",
      "Vpc": "VpcOutputSettings"
    }
  },
  "AWS::MediaLive::ChannelPlacementGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-channelplacementgroup.html",
    "Properties": {
      "ClusterId": "String",
      "Name": "String",
      "Nodes": "String",
      "Tags": "Tags"
    }
  },
  "AWS::MediaLive::CloudWatchAlarmTemplate": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-cloudwatchalarmtemplate.html",
    "Properties": {
      "ComparisonOperator": "String",
      "DatapointsToAlarm": "Double",
      "Description": "String",
      "EvaluationPeriods": "Double",
      "GroupIdentifier": "String",
      "MetricName": "String",
      "Name": "String",
      "Period": "Double",
      "Statistic": "String",
      "Tags": "Map",
      "TargetResourceType": "String",
      "Threshold": "Double",
      "TreatMissingData": "String"
    }
  },
  "AWS::MediaLive::CloudWatchAlarmTemplateGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-cloudwatchalarmtemplategroup.html",
    "Properties": {
      "Description": "String",
      "Name": "String",
      "Tags": "Map"
    }
  },
  "AWS::MediaLive::Cluster": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-cluster.html",
    "Properties": {
      "ClusterType": "String",
      "InstanceRoleArn": "String",
      "Name": "String",
      "NetworkSettings": "ClusterNetworkSettings",
      "Tags": "Tags"
    }
  },
  "AWS::MediaLive::EventBridgeRuleTemplate": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-eventbridgeruletemplate.html",
    "Properties": {
      "Description": "String",
      "EventTargets": "EventBridgeRuleTemplateTarget",
      "EventType": "String",
      "GroupIdentifier": "String",
      "Name": "String",
      "Tags": "Map"
    }
  },
  "AWS::MediaLive::EventBridgeRuleTemplateGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-eventbridgeruletemplategroup.html",
    "Properties": {
      "Description": "String",
      "Name": "String",
      "Tags": "Map"
    }
  },
  "AWS::MediaLive::Input": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-input.html",
    "Properties": {
      "Destinations": "InputDestinationRequest",
      "InputDevices": "InputDeviceSettings",
      "InputSecurityGroups": "String",
      "MediaConnectFlows": "MediaConnectFlowRequest",
      "Name": "String",
      "RoleArn": "String",
      "Sources": "InputSourceRequest",
      "SrtSettings": "SrtSettingsRequest",
      "Tags": "Json",
      "Type": "String",
      "Vpc": "InputVpcRequest"
    }
  },
  "AWS::MediaLive::InputSecurityGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-inputsecuritygroup.html",
    "Properties": {
      "Tags": "Json",
      "WhitelistRules": "InputWhitelistRuleCidr"
    }
  },
  "AWS::MediaLive::Multiplex": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-multiplex.html",
    "Properties": {
      "AvailabilityZones": "String",
      "Destinations": "MultiplexOutputDestination",
      "MultiplexSettings": "MultiplexSettings",
      "Name": "String",
      "Tags": "Tags"
    }
  },
  "AWS::MediaLive::Multiplexprogram": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-multiplexprogram.html",
    "Properties": {
      "MultiplexId": "String",
      "MultiplexProgramSettings": "MultiplexProgramSettings",
      "PacketIdentifiersMap": "MultiplexProgramPacketIdentifiersMap",
      "PipelineDetails": "MultiplexProgramPipelineDetail",
      "PreferredChannelPipeline": "String",
      "ProgramName": "String"
    }
  },
  "AWS::MediaLive::Network": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-network.html",
    "Properties": {
      "IpPools": "IpPool",
      "Name": "String",
      "Routes": "Route",
      "Tags": "Tags"
    }
  },
  "AWS::MediaLive::SdiSource": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-sdisource.html",
    "Properties": {
      "Mode": "String",
      "Name": "String",
      "Tags": "Tags",
      "Type": "String"
    }
  },
  "AWS::MediaLive::SignalMap": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-signalmap.html",
    "Properties": {
      "CloudWatchAlarmTemplateGroupIdentifiers": "String",
      "Description": "String",
      "DiscoveryEntryPointArn": "String",
      "EventBridgeRuleTemplateGroupIdentifiers": "String",
      "ForceRediscovery": "Boolean",
      "Name": "String",
      "Tags": "Map"
    }
  },
  "AWS::MediaPackage::Asset": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-asset.html",
    "Properties": {
      "EgressEndpoints": "EgressEndpoint",
      "Id": "String",
      "PackagingGroupId": "String",
      "ResourceId": "String",
      "SourceArn": "String",
      "SourceRoleArn": "String",
      "Tags": "Tag"
    }
  },
  "AWS::MediaPackage::Channel": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-channel.html",
    "Properties": {
      "Description": "String",
      "EgressAccessLogs": "LogConfiguration",
      "HlsIngest": "HlsIngest",
      "Id": "String",
      "IngressAccessLogs": "LogConfiguration",
      "Tags": "Tag"
    }
  },
  "AWS::MediaPackage::OriginEndpoint": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-originendpoint.html",
    "Properties": {
      "Authorization": "Authorization",
      "ChannelId": "String",
      "CmafPackage": "CmafPackage",
      "DashPackage": "DashPackage",
      "Description": "String",
      "HlsPackage": "HlsPackage",
      "Id": "String",
      "ManifestName": "String",
      "MssPackage": "MssPackage",
      "Origination": "String",
      "StartoverWindowSeconds": "Integer",
      "Tags": "Tag",
      "TimeDelaySeconds": "Integer",
      "Whitelist": "String"
    }
  },
  "AWS::MediaPackage::PackagingConfiguration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-packagingconfiguration.html",
    "Properties": {
      "CmafPackage": "CmafPackage",
      "DashPackage": "DashPackage",
      "HlsPackage": "HlsPackage",
      "Id": "String",
      "MssPackage": "MssPackage",
      "PackagingGroupId": "String",
      "Tags": "Tag"
    }
  },
  "AWS::MediaPackage::PackagingGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-packaginggroup.html",
    "Properties": {
      "Authorization": "Authorization",
      "EgressAccessLogs": "LogConfiguration",
      "Id": "String",
      "Tags": "Tag"
    }
  },
  "AWS::MediaPackageV2::Channel": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackagev2-channel.html",
    "Properties": {
      "ChannelGroupName": "String",
      "ChannelName": "String",
      "Description": "String",
      "InputType": "String",
      "Tags": "Tag"
    }
  },
  "AWS::MediaPackageV2::ChannelGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackagev2-channelgroup.html",
    "Properties": {
      "ChannelGroupName": "String",
      "Description": "String",
      "Tags": "Tag"
    }
  },
  "AWS::MediaPackageV2::ChannelPolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackagev2-channelpolicy.html",
    "Properties": {
      "ChannelGroupName": "String",
      "ChannelName": "String",
      "Policy": "Json"
    }
  },
  "AWS::MediaPackageV2::OriginEndpoint": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackagev2-originendpoint.html",
    "Properties": {
      "ChannelGroupName": "String",
      "ChannelName": "String",
      "ContainerType": "String",
      "DashManifests": "DashManifestConfiguration",
      "Description": "String",
      "ForceEndpointErrorConfiguration": "ForceEndpointErrorConfiguration",
      "HlsManifests": "HlsManifestConfiguration",
      "LowLatencyHlsManifests": "LowLatencyHlsManifestConfiguration",
      "OriginEndpointName": "String",
      "Segment": "Segment",
      "StartoverWindowSeconds": "Integer",
      "Tags": "Tag"
    }
  },
  "AWS::MediaPackageV2::OriginEndpointPolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackagev2-originendpointpolicy.html",
    "Properties": {
      "ChannelGroupName": "String",
      "ChannelName": "String",
      "OriginEndpointName": "String",
      "Policy": "Json"
    }
  },
  "AWS::MediaStore::Container": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediastore-container.html",
    "Properties": {
      "AccessLoggingEnabled": "Boolean",
      "ContainerName": "String",
      "CorsPolicy": "CorsRule",
      "LifecyclePolicy": "String",
      "MetricPolicy": "MetricPolicy",
      "Policy": "String",
      "Tags": "Tag"
    }
  },
  "AWS::MediaTailor::Channel": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-channel.html",
    "Properties": {
      "Audiences": "String",
      "ChannelName": "String",
      "FillerSlate": "SlateSource",
      "LogConfiguration": "LogConfigurationForChannel",
      "Outputs": "RequestOutputItem",
      "PlaybackMode": "String",
      "Tags": "Tag",
      "Tier": "String",
      "TimeShiftConfiguration": "TimeShiftConfiguration"
    }
  },
  "AWS::MediaTailor::ChannelPolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-channelpolicy.html",
    "Properties": {
      "ChannelName": "String",
      "Policy": "Json"
    }
  },
  "AWS::MediaTailor::LiveSource": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-livesource.html",
    "Properties": {
      "HttpPackageConfigurations": "HttpPackageConfiguration",
      "LiveSourceName": "String",
      "SourceLocationName": "String",
      "Tags": "Tag"
    }
  },
  "AWS::MediaTailor::PlaybackConfiguration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-playbackconfiguration.html",
    "Properties": {
      "AdDecisionServerUrl": "String",
      "AvailSuppression": "AvailSuppression",
      "Bumper": "Bumper",
      "CdnConfiguration": "CdnConfiguration",
      "ConfigurationAliases": "Map",
      "DashConfiguration": "DashConfiguration",
      "HlsConfiguration": "HlsConfiguration",
      "LivePreRollConfiguration": "LivePreRollConfiguration",
      "ManifestProcessingRules": "ManifestProcessingRules",
      "Name": "String",
      "PersonalizationThresholdSeconds": "Integer",
      "SlateAdUrl": "String",
      "Tags": "Tag",
      "TranscodeProfileName": "String",
      "VideoContentSourceUrl": "String"
    }
  },
  "AWS::MediaTailor::SourceLocation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-sourcelocation.html",
    "Properties": {
      "AccessConfiguration": "AccessConfiguration",
      "DefaultSegmentDeliveryConfiguration": "DefaultSegmentDeliveryConfiguration",
      "HttpConfiguration": "HttpConfiguration",
      "SegmentDeliveryConfigurations": "SegmentDeliveryConfiguration",
      "SourceLocationName": "String",
      "Tags": "Tag"
    }
  },
  "AWS::MediaTailor::VodSource": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-vodsource.html",
    "Properties": {
      "HttpPackageConfigurations": "HttpPackageConfiguration",
      "SourceLocationName": "String",
      "Tags": "Tag",
      "VodSourceName": "String"
    }
  },
  "AWS::MemoryDB::ACL": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-acl.html",
    "Properties": {
      "ACLName": "String",
      "Tags": "Tag",
      "UserNames": "String"
    }
  },
  "AWS::MemoryDB::Cluster": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-cluster.html",
    "Properties": {
      "ACLName": "String",
      "AutoMinorVersionUpgrade": "Boolean",
      "ClusterEndpoint": "Endpoint",
      "ClusterName": "String",
      "DataTiering": "String",
      "Description": "String",
      "EngineVersion": "String",
      "FinalSnapshotName": "String",
      "KmsKeyId": "String",
      "MaintenanceWindow": "String",
      "NodeType": "String",
      "NumReplicasPerShard": "Integer",
      "NumShards": "Integer",
      "ParameterGroupName": "String",
      "Port": "Integer",
      "SecurityGroupIds": "String",
      "SnapshotArns": "String",
      "SnapshotName": "String",
      "SnapshotRetentionLimit": "Integer",
      "SnapshotWindow": "String",
      "SnsTopicArn": "String",
      "SnsTopicStatus": "String",
      "SubnetGroupName": "String",
      "TLSEnabled": "Boolean",
      "Tags": "Tag"
    }
  },
  "AWS::MemoryDB::ParameterGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-parametergroup.html",
    "Properties": {
      "Description": "String",
      "Family": "String",
      "ParameterGroupName": "String",
      "Parameters": "Json",
      "Tags": "Tag"
    }
  },
  "AWS::MemoryDB::SubnetGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-subnetgroup.html",
    "Properties": {
      "Description": "String",
      "SubnetGroupName": "String",
      "SubnetIds": "String",
      "Tags": "Tag"
    }
  },
  "AWS::MemoryDB::User": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-user.html",
    "Properties": {
      "AccessString": "String",
      "AuthenticationMode": "AuthenticationMode",
      "Tags": "Tag",
      "UserName": "String"
    }
  },
  "AWS::Neptune::DBCluster": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbcluster.html",
    "Properties": {
      "AssociatedRoles": "DBClusterRole",
      "AvailabilityZones": "String",
      "BackupRetentionPeriod": "Integer",
      "CopyTagsToSnapshot": "Boolean",
      "DBClusterIdentifier": "String",
      "DBClusterParameterGroupName": "String",
      "DBInstanceParameterGroupName": "String",
      "DBPort": "Integer",
      "DBSubnetGroupName": "String",
      "DeletionProtection": "Boolean",
      "EnableCloudwatchLogsExports": "String",
      "EngineVersion": "String",
      "IamAuthEnabled": "Boolean",
      "KmsKeyId": "String",
      "PreferredBackupWindow": "String",
      "PreferredMaintenanceWindow": "String",
      "RestoreToTime": "String",
      "RestoreType": "String",
      "ServerlessScalingConfiguration": "ServerlessScalingConfiguration",
      "SnapshotIdentifier": "String",
      "SourceDBClusterIdentifier": "String",
      "StorageEncrypted": "Boolean",
      "Tags": "Tag",
      "UseLatestRestorableTime": "Boolean",
      "VpcSecurityGroupIds": "String"
    }
  },
  "AWS::Neptune::DBClusterParameterGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbclusterparametergroup.html",
    "Properties": {
      "Description": "String",
      "Family": "String",
      "Name": "String",
      "Parameters": "Json",
      "Tags": "Tag"
    }
  },
  "AWS::Neptune::DBInstance": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbinstance.html",
    "Properties": {
      "AllowMajorVersionUpgrade": "Boolean",
      "AutoMinorVersionUpgrade": "Boolean",
      "AvailabilityZone": "String",
      "DBClusterIdentifier": "String",
      "DBInstanceClass": "String",
      "DBInstanceIdentifier": "String",
      "DBParameterGroupName": "String",
      "DBSnapshotIdentifier": "String",
      "DBSubnetGroupName": "String",
      "PreferredMaintenanceWindow": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Neptune::DBParameterGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbparametergroup.html",
    "Properties": {
      "Description": "String",
      "Family": "String",
      "Name": "String",
      "Parameters": "Json",
      "Tags": "Tag"
    }
  },
  "AWS::Neptune::DBSubnetGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbsubnetgroup.html",
    "Properties": {
      "DBSubnetGroupDescription": "String",
      "DBSubnetGroupName": "String",
      "SubnetIds": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Neptune::EventSubscription": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-eventsubscription.html",
    "Properties": {
      "Enabled": "Boolean",
      "EventCategories": "String",
      "SnsTopicArn": "String",
      "SourceIds": "String",
      "SourceType": "String"
    }
  },
  "AWS::NeptuneGraph::Graph": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptunegraph-graph.html",
    "Properties": {
      "DeletionProtection": "Boolean",
      "GraphName": "String",
      "ProvisionedMemory": "Integer",
      "PublicConnectivity": "Boolean",
      "ReplicaCount": "Integer",
      "Tags": "Tag",
      "VectorSearchConfiguration": "VectorSearchConfiguration"
    }
  },
  "AWS::NeptuneGraph::PrivateGraphEndpoint": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptunegraph-privategraphendpoint.html",
    "Properties": {
      "GraphIdentifier": "String",
      "SecurityGroupIds": "String",
      "SubnetIds": "String",
      "VpcId": "String"
    }
  },
  "AWS::NetworkFirewall::Firewall": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-firewall.html",
    "Properties": {
      "DeleteProtection": "Boolean",
      "Description": "String",
      "FirewallName": "String",
      "FirewallPolicyArn": "String",
      "FirewallPolicyChangeProtection": "Boolean",
      "SubnetChangeProtection": "Boolean",
      "SubnetMappings": "SubnetMapping",
      "Tags": "Tag",
      "VpcId": "String"
    }
  },
  "AWS::NetworkFirewall::FirewallPolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-firewallpolicy.html",
    "Properties": {
      "Description": "String",
      "FirewallPolicy": "FirewallPolicy",
      "FirewallPolicyName": "String",
      "Tags": "Tag"
    }
  },
  "AWS::NetworkFirewall::LoggingConfiguration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-loggingconfiguration.html",
    "Properties": {
      "FirewallArn": "String",
      "FirewallName": "String",
      "LoggingConfiguration": "LoggingConfiguration"
    }
  },
  "AWS::NetworkFirewall::RuleGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-rulegroup.html",
    "Properties": {
      "Capacity": "Integer",
      "Description": "String",
      "RuleGroup": "RuleGroup",
      "RuleGroupName": "String",
      "Tags": "Tag",
      "Type": "String"
    }
  },
  "AWS::NetworkFirewall::TLSInspectionConfiguration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-tlsinspectionconfiguration.html",
    "Properties": {
      "Description": "String",
      "TLSInspectionConfiguration": "TLSInspectionConfiguration",
      "TLSInspectionConfigurationName": "String",
      "Tags": "Tag"
    }
  },
  "AWS::NetworkManager::ConnectAttachment": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-connectattachment.html",
    "Properties": {
      "CoreNetworkId": "String",
      "EdgeLocation": "String",
      "NetworkFunctionGroupName": "String",
      "Options": "ConnectAttachmentOptions",
      "ProposedNetworkFunctionGroupChange": "ProposedNetworkFunctionGroupChange",
      "ProposedSegmentChange": "ProposedSegmentChange",
      "Tags": "Tag",
      "TransportAttachmentId": "String"
    }
  },
  "AWS::NetworkManager::ConnectPeer": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-connectpeer.html",
    "Properties": {
      "BgpOptions": "BgpOptions",
      "ConnectAttachmentId": "String",
      "CoreNetworkAddress": "String",
      "InsideCidrBlocks": "String",
      "PeerAddress": "String",
      "SubnetArn": "String",
      "Tags": "Tag"
    }
  },
  "AWS::NetworkManager::CoreNetwork": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-corenetwork.html",
    "Properties": {
      "Description": "String",
      "GlobalNetworkId": "String",
      "PolicyDocument": "Json",
      "Tags": "Tag"
    }
  },
  "AWS::NetworkManager::CustomerGatewayAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-customergatewayassociation.html",
    "Properties": {
      "CustomerGatewayArn": "String",
      "DeviceId": "String",
      "GlobalNetworkId": "String",
      "LinkId": "String"
    }
  },
  "AWS::NetworkManager::Device": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-device.html",
    "Properties": {
      "AWSLocation": "AWSLocation",
      "Description": "String",
      "GlobalNetworkId": "String",
      "Location": "Location",
      "Model": "String",
      "SerialNumber": "String",
      "SiteId": "String",
      "Tags": "Tag",
      "Type": "String",
      "Vendor": "String"
    }
  },
  "AWS::NetworkManager::GlobalNetwork": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-globalnetwork.html",
    "Properties": {
      "CreatedAt": "String",
      "Description": "String",
      "State": "String",
      "Tags": "Tag"
    }
  },
  "AWS::NetworkManager::Link": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-link.html",
    "Properties": {
      "Bandwidth": "Bandwidth",
      "Description": "String",
      "GlobalNetworkId": "String",
      "Provider": "String",
      "SiteId": "String",
      "Tags": "Tag",
      "Type": "String"
    }
  },
  "AWS::NetworkManager::LinkAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-linkassociation.html",
    "Properties": {
      "DeviceId": "String",
      "GlobalNetworkId": "String",
      "LinkId": "String"
    }
  },
  "AWS::NetworkManager::Site": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-site.html",
    "Properties": {
      "Description": "String",
      "GlobalNetworkId": "String",
      "Location": "Location",
      "Tags": "Tag"
    }
  },
  "AWS::NetworkManager::SiteToSiteVpnAttachment": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-sitetositevpnattachment.html",
    "Properties": {
      "CoreNetworkId": "String",
      "NetworkFunctionGroupName": "String",
      "ProposedNetworkFunctionGroupChange": "ProposedNetworkFunctionGroupChange",
      "ProposedSegmentChange": "ProposedSegmentChange",
      "Tags": "Tag",
      "VpnConnectionArn": "String"
    }
  },
  "AWS::NetworkManager::TransitGatewayPeering": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-transitgatewaypeering.html",
    "Properties": {
      "CoreNetworkId": "String",
      "Tags": "Tag",
      "TransitGatewayArn": "String"
    }
  },
  "AWS::NetworkManager::TransitGatewayRegistration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-transitgatewayregistration.html",
    "Properties": {
      "GlobalNetworkId": "String",
      "TransitGatewayArn": "String"
    }
  },
  "AWS::NetworkManager::TransitGatewayRouteTableAttachment": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-transitgatewayroutetableattachment.html",
    "Properties": {
      "NetworkFunctionGroupName": "String",
      "PeeringId": "String",
      "ProposedNetworkFunctionGroupChange": "ProposedNetworkFunctionGroupChange",
      "ProposedSegmentChange": "ProposedSegmentChange",
      "Tags": "Tag",
      "TransitGatewayRouteTableArn": "String"
    }
  },
  "AWS::NetworkManager::VpcAttachment": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-vpcattachment.html",
    "Properties": {
      "CoreNetworkId": "String",
      "Options": "VpcOptions",
      "ProposedNetworkFunctionGroupChange": "ProposedNetworkFunctionGroupChange",
      "ProposedSegmentChange": "ProposedSegmentChange",
      "SubnetArns": "String",
      "Tags": "Tag",
      "VpcArn": "String"
    }
  },
  "AWS::NimbleStudio::LaunchProfile": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-launchprofile.html",
    "Properties": {
      "Description": "String",
      "Ec2SubnetIds": "String",
      "LaunchProfileProtocolVersions": "String",
      "Name": "String",
      "StreamConfiguration": "StreamConfiguration",
      "StudioComponentIds": "String",
      "StudioId": "String",
      "Tags": "Map"
    }
  },
  "AWS::NimbleStudio::StreamingImage": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-streamingimage.html",
    "Properties": {
      "Description": "String",
      "Ec2ImageId": "String",
      "Name": "String",
      "StudioId": "String",
      "Tags": "Map"
    }
  },
  "AWS::NimbleStudio::Studio": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-studio.html",
    "Properties": {
      "AdminRoleArn": "String",
      "DisplayName": "String",
      "StudioEncryptionConfiguration": "StudioEncryptionConfiguration",
      "StudioName": "String",
      "Tags": "Map",
      "UserRoleArn": "String"
    }
  },
  "AWS::NimbleStudio::StudioComponent": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-studiocomponent.html",
    "Properties": {
      "Configuration": "StudioComponentConfiguration",
      "Description": "String",
      "Ec2SecurityGroupIds": "String",
      "InitializationScripts": "StudioComponentInitializationScript",
      "Name": "String",
      "ScriptParameters": "ScriptParameterKeyValue",
      "StudioId": "String",
      "Subtype": "String",
      "Tags": "Map",
      "Type": "String"
    }
  },
  "AWS::OSIS::Pipeline": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-osis-pipeline.html",
    "Properties": {
      "BufferOptions": "BufferOptions",
      "EncryptionAtRestOptions": "EncryptionAtRestOptions",
      "LogPublishingOptions": "LogPublishingOptions",
      "MaxUnits": "Integer",
      "MinUnits": "Integer",
      "PipelineConfigurationBody": "String",
      "PipelineName": "String",
      "Tags": "Tag",
      "VpcOptions": "VpcOptions"
    }
  },
  "AWS::Oam::Link": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-oam-link.html",
    "Properties": {
      "LabelTemplate": "String",
      "LinkConfiguration": "LinkConfiguration",
      "ResourceTypes": "String",
      "SinkIdentifier": "String",
      "Tags": "Map"
    }
  },
  "AWS::Oam::Sink": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-oam-sink.html",
    "Properties": {
      "Name": "String",
      "Policy": "Json",
      "Tags": "Map"
    }
  },
  "AWS::Omics::AnnotationStore": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-annotationstore.html",
    "Properties": {
      "Description": "String",
      "Name": "String",
      "Reference": "ReferenceItem",
      "SseConfig": "SseConfig",
      "StoreFormat": "String",
      "StoreOptions": "StoreOptions",
      "Tags": "Map"
    }
  },
  "AWS::Omics::ReferenceStore": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-referencestore.html",
    "Properties": {
      "Description": "String",
      "Name": "String",
      "SseConfig": "SseConfig",
      "Tags": "Map"
    }
  },
  "AWS::Omics::RunGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-rungroup.html",
    "Properties": {
      "MaxCpus": "Double",
      "MaxDuration": "Double",
      "MaxGpus": "Double",
      "MaxRuns": "Double",
      "Name": "String",
      "Tags": "Map"
    }
  },
  "AWS::Omics::SequenceStore": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-sequencestore.html",
    "Properties": {
      "Description": "String",
      "FallbackLocation": "String",
      "Name": "String",
      "SseConfig": "SseConfig",
      "Tags": "Map"
    }
  },
  "AWS::Omics::VariantStore": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-variantstore.html",
    "Properties": {
      "Description": "String",
      "Name": "String",
      "Reference": "ReferenceItem",
      "SseConfig": "SseConfig",
      "Tags": "Map"
    }
  },
  "AWS::Omics::Workflow": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-workflow.html",
    "Properties": {
      "Accelerators": "String",
      "DefinitionUri": "String",
      "Description": "String",
      "Engine": "String",
      "Main": "String",
      "Name": "String",
      "ParameterTemplate": "Map",
      "StorageCapacity": "Double",
      "Tags": "Map"
    }
  },
  "AWS::OpenSearchServerless::AccessPolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchserverless-accesspolicy.html",
    "Properties": {
      "Description": "String",
      "Name": "String",
      "Policy": "String",
      "Type": "String"
    }
  },
  "AWS::OpenSearchServerless::Collection": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchserverless-collection.html",
    "Properties": {
      "Description": "String",
      "Name": "String",
      "StandbyReplicas": "String",
      "Tags": "Tag",
      "Type": "String"
    }
  },
  "AWS::OpenSearchServerless::LifecyclePolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchserverless-lifecyclepolicy.html",
    "Properties": {
      "Description": "String",
      "Name": "String",
      "Policy": "String",
      "Type": "String"
    }
  },
  "AWS::OpenSearchServerless::SecurityConfig": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchserverless-securityconfig.html",
    "Properties": {
      "Description": "String",
      "Name": "String",
      "SamlOptions": "SamlConfigOptions",
      "Type": "String"
    }
  },
  "AWS::OpenSearchServerless::SecurityPolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchserverless-securitypolicy.html",
    "Properties": {
      "Description": "String",
      "Name": "String",
      "Policy": "String",
      "Type": "String"
    }
  },
  "AWS::OpenSearchServerless::VpcEndpoint": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchserverless-vpcendpoint.html",
    "Properties": {
      "Name": "String",
      "SecurityGroupIds": "String",
      "SubnetIds": "String",
      "VpcId": "String"
    }
  },
  "AWS::OpenSearchService::Domain": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchservice-domain.html",
    "Properties": {
      "AccessPolicies": "Json",
      "AdvancedOptions": "Map",
      "AdvancedSecurityOptions": "AdvancedSecurityOptionsInput",
      "ClusterConfig": "ClusterConfig",
      "CognitoOptions": "CognitoOptions",
      "DomainEndpointOptions": "DomainEndpointOptions",
      "DomainName": "String",
      "EBSOptions": "EBSOptions",
      "EncryptionAtRestOptions": "EncryptionAtRestOptions",
      "EngineVersion": "String",
      "IPAddressType": "String",
      "LogPublishingOptions": "Map",
      "NodeToNodeEncryptionOptions": "NodeToNodeEncryptionOptions",
      "OffPeakWindowOptions": "OffPeakWindowOptions",
      "SkipShardMigrationWait": "Boolean",
      "SnapshotOptions": "SnapshotOptions",
      "SoftwareUpdateOptions": "SoftwareUpdateOptions",
      "Tags": "Tag",
      "VPCOptions": "VPCOptions"
    }
  },
  "AWS::OpsWorks::App": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-app.html",
    "Properties": {
      "AppSource": "Source",
      "Attributes": "Map",
      "DataSources": "DataSource",
      "Description": "String",
      "Domains": "String",
      "EnableSsl": "Boolean",
      "Environment": "EnvironmentVariable",
      "Name": "String",
      "Shortname": "String",
      "SslConfiguration": "SslConfiguration",
      "StackId": "String",
      "Type": "String"
    }
  },
  "AWS::OpsWorks::ElasticLoadBalancerAttachment": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-elbattachment.html",
    "Properties": {
      "ElasticLoadBalancerName": "String",
      "LayerId": "String"
    }
  },
  "AWS::OpsWorks::Instance": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-instance.html",
    "Properties": {
      "AgentVersion": "String",
      "AmiId": "String",
      "Architecture": "String",
      "AutoScalingType": "String",
      "AvailabilityZone": "String",
      "BlockDeviceMappings": "BlockDeviceMapping",
      "EbsOptimized": "Boolean",
      "ElasticIps": "String",
      "Hostname": "String",
      "InstallUpdatesOnBoot": "Boolean",
      "InstanceType": "String",
      "LayerIds": "String",
      "Os": "String",
      "RootDeviceType": "String",
      "SshKeyName": "String",
      "StackId": "String",
      "SubnetId": "String",
      "Tenancy": "String",
      "TimeBasedAutoScaling": "TimeBasedAutoScaling",
      "VirtualizationType": "String",
      "Volumes": "String"
    }
  },
  "AWS::OpsWorks::Layer": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-layer.html",
    "Properties": {
      "Attributes": "Map",
      "AutoAssignElasticIps": "Boolean",
      "AutoAssignPublicIps": "Boolean",
      "CustomInstanceProfileArn": "String",
      "CustomJson": "Json",
      "CustomRecipes": "Recipes",
      "CustomSecurityGroupIds": "String",
      "EnableAutoHealing": "Boolean",
      "InstallUpdatesOnBoot": "Boolean",
      "LifecycleEventConfiguration": "LifecycleEventConfiguration",
      "LoadBasedAutoScaling": "LoadBasedAutoScaling",
      "Name": "String",
      "Packages": "String",
      "Shortname": "String",
      "StackId": "String",
      "Tags": "Tag",
      "Type": "String",
      "UseEbsOptimizedInstances": "Boolean",
      "VolumeConfigurations": "VolumeConfiguration"
    }
  },
  "AWS::OpsWorks::Stack": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-stack.html",
    "Properties": {
      "AgentVersion": "String",
      "Attributes": "Map",
      "ChefConfiguration": "ChefConfiguration",
      "CloneAppIds": "String",
      "ClonePermissions": "Boolean",
      "ConfigurationManager": "StackConfigurationManager",
      "CustomCookbooksSource": "Source",
      "CustomJson": "Json",
      "DefaultAvailabilityZone": "String",
      "DefaultInstanceProfileArn": "String",
      "DefaultOs": "String",
      "DefaultRootDeviceType": "String",
      "DefaultSshKeyName": "String",
      "DefaultSubnetId": "String",
      "EcsClusterArn": "String",
      "ElasticIps": "ElasticIp",
      "HostnameTheme": "String",
      "Name": "String",
      "RdsDbInstances": "RdsDbInstance",
      "ServiceRoleArn": "String",
      "SourceStackId": "String",
      "Tags": "Tag",
      "UseCustomCookbooks": "Boolean",
      "UseOpsworksSecurityGroups": "Boolean",
      "VpcId": "String"
    }
  },
  "AWS::OpsWorks::UserProfile": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-userprofile.html",
    "Properties": {
      "AllowSelfManagement": "Boolean",
      "IamUserArn": "String",
      "SshPublicKey": "String",
      "SshUsername": "String"
    }
  },
  "AWS::OpsWorks::Volume": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-volume.html",
    "Properties": {
      "Ec2VolumeId": "String",
      "MountPoint": "String",
      "Name": "String",
      "StackId": "String"
    }
  },
  "AWS::OpsWorksCM::Server": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworkscm-server.html",
    "Properties": {
      "AssociatePublicIpAddress": "Boolean",
      "BackupId": "String",
      "BackupRetentionCount": "Integer",
      "CustomCertificate": "String",
      "CustomDomain": "String",
      "CustomPrivateKey": "String",
      "DisableAutomatedBackup": "Boolean",
      "Engine": "String",
      "EngineAttributes": "EngineAttribute",
      "EngineModel": "String",
      "EngineVersion": "String",
      "InstanceProfileArn": "String",
      "InstanceType": "String",
      "KeyPair": "String",
      "PreferredBackupWindow": "String",
      "PreferredMaintenanceWindow": "String",
      "SecurityGroupIds": "String",
      "ServiceRoleArn": "String",
      "SubnetIds": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Organizations::Account": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-organizations-account.html",
    "Properties": {
      "AccountName": "String",
      "Email": "String",
      "ParentIds": "String",
      "RoleName": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Organizations::Organization": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-organizations-organization.html",
    "Properties": {
      "FeatureSet": "String"
    }
  },
  "AWS::Organizations::OrganizationalUnit": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-organizations-organizationalunit.html",
    "Properties": {
      "Name": "String",
      "ParentId": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Organizations::Policy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-organizations-policy.html",
    "Properties": {
      "Content": "Json",
      "Description": "String",
      "Name": "String",
      "Tags": "Tag",
      "TargetIds": "String",
      "Type": "String"
    }
  },
  "AWS::Organizations::ResourcePolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-organizations-resourcepolicy.html",
    "Properties": {
      "Content": "Json",
      "Tags": "Tag"
    }
  },
  "AWS::PCAConnectorAD::Connector": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcaconnectorad-connector.html",
    "Properties": {
      "CertificateAuthorityArn": "String",
      "DirectoryId": "String",
      "Tags": "Map",
      "VpcInformation": "VpcInformation"
    }
  },
  "AWS::PCAConnectorAD::DirectoryRegistration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcaconnectorad-directoryregistration.html",
    "Properties": {
      "DirectoryId": "String",
      "Tags": "Map"
    }
  },
  "AWS::PCAConnectorAD::ServicePrincipalName": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcaconnectorad-serviceprincipalname.html",
    "Properties": {
      "ConnectorArn": "String",
      "DirectoryRegistrationArn": "String"
    }
  },
  "AWS::PCAConnectorAD::Template": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcaconnectorad-template.html",
    "Properties": {
      "ConnectorArn": "String",
      "Definition": "TemplateDefinition",
      "Name": "String",
      "ReenrollAllCertificateHolders": "Boolean",
      "Tags": "Map"
    }
  },
  "AWS::PCAConnectorAD::TemplateGroupAccessControlEntry": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcaconnectorad-templategroupaccesscontrolentry.html",
    "Properties": {
      "AccessRights": "AccessRights",
      "GroupDisplayName": "String",
      "GroupSecurityIdentifier": "String",
      "TemplateArn": "String"
    }
  },
  "AWS::PCAConnectorSCEP::Challenge": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcaconnectorscep-challenge.html",
    "Properties": {
      "ConnectorArn": "String",
      "Tags": "Map"
    }
  },
  "AWS::PCAConnectorSCEP::Connector": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcaconnectorscep-connector.html",
    "Properties": {
      "CertificateAuthorityArn": "String",
      "MobileDeviceManagement": "MobileDeviceManagement",
      "Tags": "Map"
    }
  },
  "AWS::Panorama::ApplicationInstance": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-applicationinstance.html",
    "Properties": {
      "ApplicationInstanceIdToReplace": "String",
      "DefaultRuntimeContextDevice": "String",
      "Description": "String",
      "ManifestOverridesPayload": "ManifestOverridesPayload",
      "ManifestPayload": "ManifestPayload",
      "Name": "String",
      "RuntimeRoleArn": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Panorama::Package": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-package.html",
    "Properties": {
      "PackageName": "String",
      "StorageLocation": "StorageLocation",
      "Tags": "Tag"
    }
  },
  "AWS::Panorama::PackageVersion": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-packageversion.html",
    "Properties": {
      "MarkLatest": "Boolean",
      "OwnerAccount": "String",
      "PackageId": "String",
      "PackageVersion": "String",
      "PatchVersion": "String",
      "UpdatedLatestPatchVersion": "String"
    }
  },
  "AWS::PaymentCryptography::Alias": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-paymentcryptography-alias.html",
    "Properties": {
      "AliasName": "String",
      "KeyArn": "String"
    }
  },
  "AWS::PaymentCryptography::Key": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-paymentcryptography-key.html",
    "Properties": {
      "Enabled": "Boolean",
      "Exportable": "Boolean",
      "KeyAttributes": "KeyAttributes",
      "KeyCheckValueAlgorithm": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Personalize::Dataset": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-personalize-dataset.html",
    "Properties": {
      "DatasetGroupArn": "String",
      "DatasetImportJob": "DatasetImportJob",
      "DatasetType": "String",
      "Name": "String",
      "SchemaArn": "String"
    }
  },
  "AWS::Personalize::DatasetGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-personalize-datasetgroup.html",
    "Properties": {
      "Domain": "String",
      "KmsKeyArn": "String",
      "Name": "String",
      "RoleArn": "String"
    }
  },
  "AWS::Personalize::Schema": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-personalize-schema.html",
    "Properties": {
      "Domain": "String",
      "Name": "String",
      "Schema": "String"
    }
  },
  "AWS::Personalize::Solution": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-personalize-solution.html",
    "Properties": {
      "DatasetGroupArn": "String",
      "EventType": "String",
      "Name": "String",
      "PerformAutoML": "Boolean",
      "PerformHPO": "Boolean",
      "RecipeArn": "String",
      "SolutionConfig": "SolutionConfig"
    }
  },
  "AWS::Pinpoint::ADMChannel": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-admchannel.html",
    "Properties": {
      "ApplicationId": "String",
      "ClientId": "String",
      "ClientSecret": "String",
      "Enabled": "Boolean"
    }
  },
  "AWS::Pinpoint::APNSChannel": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnschannel.html",
    "Properties": {
      "ApplicationId": "String",
      "BundleId": "String",
      "Certificate": "String",
      "DefaultAuthenticationMethod": "String",
      "Enabled": "Boolean",
      "PrivateKey": "String",
      "TeamId": "String",
      "TokenKey": "String",
      "TokenKeyId": "String"
    }
  },
  "AWS::Pinpoint::APNSSandboxChannel": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnssandboxchannel.html",
    "Properties": {
      "ApplicationId": "String",
      "BundleId": "String",
      "Certificate": "String",
      "DefaultAuthenticationMethod": "String",
      "Enabled": "Boolean",
      "PrivateKey": "String",
      "TeamId": "String",
      "TokenKey": "String",
      "TokenKeyId": "String"
    }
  },
  "AWS::Pinpoint::APNSVoipChannel": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnsvoipchannel.html",
    "Properties": {
      "ApplicationId": "String",
      "BundleId": "String",
      "Certificate": "String",
      "DefaultAuthenticationMethod": "String",
      "Enabled": "Boolean",
      "PrivateKey": "String",
      "TeamId": "String",
      "TokenKey": "String",
      "TokenKeyId": "String"
    }
  },
  "AWS::Pinpoint::APNSVoipSandboxChannel": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnsvoipsandboxchannel.html",
    "Properties": {
      "ApplicationId": "String",
      "BundleId": "String",
      "Certificate": "String",
      "DefaultAuthenticationMethod": "String",
      "Enabled": "Boolean",
      "PrivateKey": "String",
      "TeamId": "String",
      "TokenKey": "String",
      "TokenKeyId": "String"
    }
  },
  "AWS::Pinpoint::App": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-app.html",
    "Properties": {
      "Name": "String",
      "Tags": "Json"
    }
  },
  "AWS::Pinpoint::ApplicationSettings": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-applicationsettings.html",
    "Properties": {
      "ApplicationId": "String",
      "CampaignHook": "CampaignHook",
      "CloudWatchMetricsEnabled": "Boolean",
      "Limits": "Limits",
      "QuietTime": "QuietTime"
    }
  },
  "AWS::Pinpoint::BaiduChannel": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-baiduchannel.html",
    "Properties": {
      "ApiKey": "String",
      "ApplicationId": "String",
      "Enabled": "Boolean",
      "SecretKey": "String"
    }
  },
  "AWS::Pinpoint::Campaign": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-campaign.html",
    "Properties": {
      "AdditionalTreatments": "WriteTreatmentResource",
      "ApplicationId": "String",
      "CampaignHook": "CampaignHook",
      "CustomDeliveryConfiguration": "CustomDeliveryConfiguration",
      "Description": "String",
      "HoldoutPercent": "Integer",
      "IsPaused": "Boolean",
      "Limits": "Limits",
      "MessageConfiguration": "MessageConfiguration",
      "Name": "String",
      "Priority": "Integer",
      "Schedule": "Schedule",
      "SegmentId": "String",
      "SegmentVersion": "Integer",
      "Tags": "Json",
      "TemplateConfiguration": "TemplateConfiguration",
      "TreatmentDescription": "String",
      "TreatmentName": "String"
    }
  },
  "AWS::Pinpoint::EmailChannel": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-emailchannel.html",
    "Properties": {
      "ApplicationId": "String",
      "ConfigurationSet": "String",
      "Enabled": "Boolean",
      "FromAddress": "String",
      "Identity": "String",
      "OrchestrationSendingRoleArn": "String",
      "RoleArn": "String"
    }
  },
  "AWS::Pinpoint::EmailTemplate": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-emailtemplate.html",
    "Properties": {
      "DefaultSubstitutions": "String",
      "HtmlPart": "String",
      "Subject": "String",
      "Tags": "Json",
      "TemplateDescription": "String",
      "TemplateName": "String",
      "TextPart": "String"
    }
  },
  "AWS::Pinpoint::EventStream": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-eventstream.html",
    "Properties": {
      "ApplicationId": "String",
      "DestinationStreamArn": "String",
      "RoleArn": "String"
    }
  },
  "AWS::Pinpoint::GCMChannel": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-gcmchannel.html",
    "Properties": {
      "ApiKey": "String",
      "ApplicationId": "String",
      "DefaultAuthenticationMethod": "String",
      "Enabled": "Boolean",
      "ServiceJson": "String"
    }
  },
  "AWS::Pinpoint::InAppTemplate": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-inapptemplate.html",
    "Properties": {
      "Content": "InAppMessageContent",
      "CustomConfig": "Json",
      "Layout": "String",
      "Tags": "Json",
      "TemplateDescription": "String",
      "TemplateName": "String"
    }
  },
  "AWS::Pinpoint::PushTemplate": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-pushtemplate.html",
    "Properties": {
      "ADM": "AndroidPushNotificationTemplate",
      "APNS": "APNSPushNotificationTemplate",
      "Baidu": "AndroidPushNotificationTemplate",
      "Default": "DefaultPushNotificationTemplate",
      "DefaultSubstitutions": "String",
      "GCM": "AndroidPushNotificationTemplate",
      "Tags": "Json",
      "TemplateDescription": "String",
      "TemplateName": "String"
    }
  },
  "AWS::Pinpoint::SMSChannel": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-smschannel.html",
    "Properties": {
      "ApplicationId": "String",
      "Enabled": "Boolean",
      "SenderId": "String",
      "ShortCode": "String"
    }
  },
  "AWS::Pinpoint::Segment": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-segment.html",
    "Properties": {
      "ApplicationId": "String",
      "Dimensions": "SegmentDimensions",
      "Name": "String",
      "SegmentGroups": "SegmentGroups",
      "Tags": "Json"
    }
  },
  "AWS::Pinpoint::SmsTemplate": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-smstemplate.html",
    "Properties": {
      "Body": "String",
      "DefaultSubstitutions": "String",
      "Tags": "Json",
      "TemplateDescription": "String",
      "TemplateName": "String"
    }
  },
  "AWS::Pinpoint::VoiceChannel": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-voicechannel.html",
    "Properties": {
      "ApplicationId": "String",
      "Enabled": "Boolean"
    }
  },
  "AWS::PinpointEmail::ConfigurationSet": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpointemail-configurationset.html",
    "Properties": {
      "DeliveryOptions": "DeliveryOptions",
      "Name": "String",
      "ReputationOptions": "ReputationOptions",
      "SendingOptions": "SendingOptions",
      "Tags": "Tags",
      "TrackingOptions": "TrackingOptions"
    }
  },
  "AWS::PinpointEmail::ConfigurationSetEventDestination": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpointemail-configurationseteventdestination.html",
    "Properties": {
      "ConfigurationSetName": "String",
      "EventDestination": "EventDestination",
      "EventDestinationName": "String"
    }
  },
  "AWS::PinpointEmail::DedicatedIpPool": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpointemail-dedicatedippool.html",
    "Properties": {
      "PoolName": "String",
      "Tags": "Tags"
    }
  },
  "AWS::PinpointEmail::Identity": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpointemail-identity.html",
    "Properties": {
      "DkimSigningEnabled": "Boolean",
      "FeedbackForwardingEnabled": "Boolean",
      "MailFromAttributes": "MailFromAttributes",
      "Name": "String",
      "Tags": "Tags"
    }
  },
  "AWS::Pipes::Pipe": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pipes-pipe.html",
    "Properties": {
      "Description": "String",
      "DesiredState": "String",
      "Enrichment": "String",
      "EnrichmentParameters": "PipeEnrichmentParameters",
      "KmsKeyIdentifier": "String",
      "LogConfiguration": "PipeLogConfiguration",
      "Name": "String",
      "RoleArn": "String",
      "Source": "String",
      "SourceParameters": "PipeSourceParameters",
      "Tags": "Map",
      "Target": "String",
      "TargetParameters": "PipeTargetParameters"
    }
  },
  "AWS::Proton::EnvironmentAccountConnection": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-proton-environmentaccountconnection.html",
    "Properties": {
      "CodebuildRoleArn": "String",
      "ComponentRoleArn": "String",
      "EnvironmentAccountId": "String",
      "EnvironmentName": "String",
      "ManagementAccountId": "String",
      "RoleArn": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Proton::EnvironmentTemplate": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-proton-environmenttemplate.html",
    "Properties": {
      "Description": "String",
      "DisplayName": "String",
      "EncryptionKey": "String",
      "Name": "String",
      "Provisioning": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Proton::ServiceTemplate": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-proton-servicetemplate.html",
    "Properties": {
      "Description": "String",
      "DisplayName": "String",
      "EncryptionKey": "String",
      "Name": "String",
      "PipelineProvisioning": "String",
      "Tags": "Tag"
    }
  },
  "AWS::QBusiness::Application": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-application.html",
    "Properties": {
      "AttachmentsConfiguration": "AttachmentsConfiguration",
      "AutoSubscriptionConfiguration": "AutoSubscriptionConfiguration",
      "ClientIdsForOIDC": "String",
      "Description": "String",
      "DisplayName": "String",
      "EncryptionConfiguration": "EncryptionConfiguration",
      "IamIdentityProviderArn": "String",
      "IdentityCenterInstanceArn": "String",
      "IdentityType": "String",
      "PersonalizationConfiguration": "PersonalizationConfiguration",
      "QAppsConfiguration": "QAppsConfiguration",
      "RoleArn": "String",
      "Tags": "Tag"
    }
  },
  "AWS::QBusiness::DataSource": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-datasource.html",
    "Properties": {
      "ApplicationId": "String",
      "Configuration": "Json",
      "Description": "String",
      "DisplayName": "String",
      "DocumentEnrichmentConfiguration": "DocumentEnrichmentConfiguration",
      "IndexId": "String",
      "RoleArn": "String",
      "SyncSchedule": "String",
      "Tags": "Tag",
      "VpcConfiguration": "DataSourceVpcConfiguration"
    }
  },
  "AWS::QBusiness::Index": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-index.html",
    "Properties": {
      "ApplicationId": "String",
      "CapacityConfiguration": "IndexCapacityConfiguration",
      "Description": "String",
      "DisplayName": "String",
      "DocumentAttributeConfigurations": "DocumentAttributeConfiguration",
      "Tags": "Tag",
      "Type": "String"
    }
  },
  "AWS::QBusiness::Plugin": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-plugin.html",
    "Properties": {
      "ApplicationId": "String",
      "AuthConfiguration": "PluginAuthConfiguration",
      "CustomPluginConfiguration": "CustomPluginConfiguration",
      "DisplayName": "String",
      "ServerUrl": "String",
      "State": "String",
      "Tags": "Tag",
      "Type": "String"
    }
  },
  "AWS::QBusiness::Retriever": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-retriever.html",
    "Properties": {
      "ApplicationId": "String",
      "Configuration": "RetrieverConfiguration",
      "DisplayName": "String",
      "RoleArn": "String",
      "Tags": "Tag",
      "Type": "String"
    }
  },
  "AWS::QBusiness::WebExperience": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-webexperience.html",
    "Properties": {
      "ApplicationId": "String",
      "IdentityProviderConfiguration": "IdentityProviderConfiguration",
      "RoleArn": "String",
      "SamplePromptsControlMode": "String",
      "Subtitle": "String",
      "Tags": "Tag",
      "Title": "String",
      "WelcomeMessage": "String"
    }
  },
  "AWS::QLDB::Ledger": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qldb-ledger.html",
    "Properties": {
      "DeletionProtection": "Boolean",
      "KmsKey": "String",
      "Name": "String",
      "PermissionsMode": "String",
      "Tags": "Tag"
    }
  },
  "AWS::QLDB::Stream": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qldb-stream.html",
    "Properties": {
      "ExclusiveEndTime": "String",
      "InclusiveStartTime": "String",
      "KinesisConfiguration": "KinesisConfiguration",
      "LedgerName": "String",
      "RoleArn": "String",
      "StreamName": "String",
      "Tags": "Tag"
    }
  },
  "AWS::QuickSight::Analysis": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-analysis.html",
    "Properties": {
      "AnalysisId": "String",
      "AwsAccountId": "String",
      "Definition": "AnalysisDefinition",
      "Errors": "AnalysisError",
      "Name": "String",
      "Parameters": "Parameters",
      "Permissions": "ResourcePermission",
      "Sheets": "Sheet",
      "SourceEntity": "AnalysisSourceEntity",
      "Status": "String",
      "Tags": "Tag",
      "ThemeArn": "String",
      "ValidationStrategy": "ValidationStrategy"
    }
  },
  "AWS::QuickSight::Dashboard": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-dashboard.html",
    "Properties": {
      "AwsAccountId": "String",
      "DashboardId": "String",
      "DashboardPublishOptions": "DashboardPublishOptions",
      "Definition": "DashboardVersionDefinition",
      "LinkEntities": "String",
      "LinkSharingConfiguration": "LinkSharingConfiguration",
      "Name": "String",
      "Parameters": "Parameters",
      "Permissions": "ResourcePermission",
      "SourceEntity": "DashboardSourceEntity",
      "Tags": "Tag",
      "ThemeArn": "String",
      "ValidationStrategy": "ValidationStrategy",
      "VersionDescription": "String"
    }
  },
  "AWS::QuickSight::DataSet": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-dataset.html",
    "Properties": {
      "AwsAccountId": "String",
      "ColumnGroups": "ColumnGroup",
      "ColumnLevelPermissionRules": "ColumnLevelPermissionRule",
      "DataSetId": "String",
      "DataSetRefreshProperties": "DataSetRefreshProperties",
      "DataSetUsageConfiguration": "DataSetUsageConfiguration",
      "DatasetParameters": "DatasetParameter",
      "FieldFolders": "Map",
      "FolderArns": "String",
      "ImportMode": "String",
      "IngestionWaitPolicy": "IngestionWaitPolicy",
      "LogicalTableMap": "Map",
      "Name": "String",
      "Permissions": "ResourcePermission",
      "PhysicalTableMap": "Map",
      "RowLevelPermissionDataSet": "RowLevelPermissionDataSet",
      "RowLevelPermissionTagConfiguration": "RowLevelPermissionTagConfiguration",
      "Tags": "Tag"
    }
  },
  "AWS::QuickSight::DataSource": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-datasource.html",
    "Properties": {
      "AlternateDataSourceParameters": "DataSourceParameters",
      "AwsAccountId": "String",
      "Credentials": "DataSourceCredentials",
      "DataSourceId": "String",
      "DataSourceParameters": "DataSourceParameters",
      "ErrorInfo": "DataSourceErrorInfo",
      "Name": "String",
      "Permissions": "ResourcePermission",
      "SslProperties": "SslProperties",
      "Tags": "Tag",
      "Type": "String",
      "VpcConnectionProperties": "VpcConnectionProperties"
    }
  },
  "AWS::QuickSight::RefreshSchedule": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-refreshschedule.html",
    "Properties": {
      "AwsAccountId": "String",
      "DataSetId": "String",
      "Schedule": "RefreshScheduleMap"
    }
  },
  "AWS::QuickSight::Template": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-template.html",
    "Properties": {
      "AwsAccountId": "String",
      "Definition": "TemplateVersionDefinition",
      "Name": "String",
      "Permissions": "ResourcePermission",
      "SourceEntity": "TemplateSourceEntity",
      "Tags": "Tag",
      "TemplateId": "String",
      "ValidationStrategy": "ValidationStrategy",
      "VersionDescription": "String"
    }
  },
  "AWS::QuickSight::Theme": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-theme.html",
    "Properties": {
      "AwsAccountId": "String",
      "BaseThemeId": "String",
      "Configuration": "ThemeConfiguration",
      "Name": "String",
      "Permissions": "ResourcePermission",
      "Tags": "Tag",
      "ThemeId": "String",
      "VersionDescription": "String"
    }
  },
  "AWS::QuickSight::Topic": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-topic.html",
    "Properties": {
      "AwsAccountId": "String",
      "DataSets": "DatasetMetadata",
      "Description": "String",
      "Name": "String",
      "TopicId": "String",
      "UserExperienceVersion": "String"
    }
  },
  "AWS::QuickSight::VPCConnection": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-vpcconnection.html",
    "Properties": {
      "AvailabilityStatus": "String",
      "AwsAccountId": "String",
      "DnsResolvers": "String",
      "Name": "String",
      "RoleArn": "String",
      "SecurityGroupIds": "String",
      "SubnetIds": "String",
      "Tags": "Tag",
      "VPCConnectionId": "String"
    }
  },
  "AWS::RAM::Permission": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ram-permission.html",
    "Properties": {
      "Name": "String",
      "PolicyTemplate": "Json",
      "ResourceType": "String",
      "Tags": "Tag"
    }
  },
  "AWS::RAM::ResourceShare": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ram-resourceshare.html",
    "Properties": {
      "AllowExternalPrincipals": "Boolean",
      "Name": "String",
      "PermissionArns": "String",
      "Principals": "String",
      "ResourceArns": "String",
      "Sources": "String",
      "Tags": "Tag"
    }
  },
  "AWS::RDS::CustomDBEngineVersion": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-customdbengineversion.html",
    "Properties": {
      "DatabaseInstallationFilesS3BucketName": "String",
      "DatabaseInstallationFilesS3Prefix": "String",
      "Description": "String",
      "Engine": "String",
      "EngineVersion": "String",
      "ImageId": "String",
      "KMSKeyId": "String",
      "Manifest": "String",
      "SourceCustomDbEngineVersionIdentifier": "String",
      "Status": "String",
      "Tags": "Tag",
      "UseAwsProvidedLatestImage": "Boolean"
    }
  },
  "AWS::RDS::DBCluster": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html",
    "Properties": {
      "AllocatedStorage": "Integer",
      "AssociatedRoles": "DBClusterRole",
      "AutoMinorVersionUpgrade": "Boolean",
      "AvailabilityZones": "String",
      "BacktrackWindow": "Integer",
      "BackupRetentionPeriod": "Integer",
      "CopyTagsToSnapshot": "Boolean",
      "DBClusterIdentifier": "String",
      "DBClusterInstanceClass": "String",
      "DBClusterParameterGroupName": "String",
      "DBInstanceParameterGroupName": "String",
      "DBSubnetGroupName": "String",
      "DBSystemId": "String",
      "DatabaseName": "String",
      "DeletionProtection": "Boolean",
      "Domain": "String",
      "DomainIAMRoleName": "String",
      "EnableCloudwatchLogsExports": "String",
      "EnableGlobalWriteForwarding": "Boolean",
      "EnableHttpEndpoint": "Boolean",
      "EnableIAMDatabaseAuthentication": "Boolean",
      "EnableLocalWriteForwarding": "Boolean",
      "Engine": "String",
      "EngineLifecycleSupport": "String",
      "EngineMode": "String",
      "EngineVersion": "String",
      "GlobalClusterIdentifier": "String",
      "Iops": "Integer",
      "KmsKeyId": "String",
      "ManageMasterUserPassword": "Boolean",
      "MasterUserPassword": "String",
      "MasterUserSecret": "MasterUserSecret",
      "MasterUsername": "String",
      "MonitoringInterval": "Integer",
      "MonitoringRoleArn": "String",
      "NetworkType": "String",
      "PerformanceInsightsEnabled": "Boolean",
      "PerformanceInsightsKmsKeyId": "String",
      "PerformanceInsightsRetentionPeriod": "Integer",
      "Port": "Integer",
      "PreferredBackupWindow": "String",
      "PreferredMaintenanceWindow": "String",
      "PubliclyAccessible": "Boolean",
      "ReplicationSourceIdentifier": "String",
      "RestoreToTime": "String",
      "RestoreType": "String",
      "ScalingConfiguration": "ScalingConfiguration",
      "ServerlessV2ScalingConfiguration": "ServerlessV2ScalingConfiguration",
      "SnapshotIdentifier": "String",
      "SourceDBClusterIdentifier": "String",
      "SourceRegion": "String",
      "StorageEncrypted": "Boolean",
      "StorageType": "String",
      "Tags": "Tag",
      "UseLatestRestorableTime": "Boolean",
      "VpcSecurityGroupIds": "String"
    }
  },
  "AWS::RDS::DBClusterParameterGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbclusterparametergroup.html",
    "Properties": {
      "DBClusterParameterGroupName": "String",
      "Description": "String",
      "Family": "String",
      "Parameters": "Json",
      "Tags": "Tag"
    }
  },
  "AWS::RDS::DBInstance": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html",
    "Properties": {
      "AllocatedStorage": "String",
      "AllowMajorVersionUpgrade": "Boolean",
      "AssociatedRoles": "DBInstanceRole",
      "AutoMinorVersionUpgrade": "Boolean",
      "AutomaticBackupReplicationKmsKeyId": "String",
      "AutomaticBackupReplicationRegion": "String",
      "AvailabilityZone": "String",
      "BackupRetentionPeriod": "Integer",
      "CACertificateIdentifier": "String",
      "CertificateDetails": "CertificateDetails",
      "CertificateRotationRestart": "Boolean",
      "CharacterSetName": "String",
      "CopyTagsToSnapshot": "Boolean",
      "CustomIAMInstanceProfile": "String",
      "DBClusterIdentifier": "String",
      "DBClusterSnapshotIdentifier": "String",
      "DBInstanceClass": "String",
      "DBInstanceIdentifier": "String",
      "DBName": "String",
      "DBParameterGroupName": "String",
      "DBSecurityGroups": "String",
      "DBSnapshotIdentifier": "String",
      "DBSubnetGroupName": "String",
      "DedicatedLogVolume": "Boolean",
      "DeleteAutomatedBackups": "Boolean",
      "DeletionProtection": "Boolean",
      "Domain": "String",
      "DomainAuthSecretArn": "String",
      "DomainDnsIps": "String",
      "DomainFqdn": "String",
      "DomainIAMRoleName": "String",
      "DomainOu": "String",
      "EnableCloudwatchLogsExports": "String",
      "EnableIAMDatabaseAuthentication": "Boolean",
      "EnablePerformanceInsights": "Boolean",
      "Endpoint": "Endpoint",
      "Engine": "String",
      "EngineLifecycleSupport": "String",
      "EngineVersion": "String",
      "Iops": "Integer",
      "KmsKeyId": "String",
      "LicenseModel": "String",
      "ManageMasterUserPassword": "Boolean",
      "MasterUserPassword": "String",
      "MasterUserSecret": "MasterUserSecret",
      "MasterUsername": "String",
      "MaxAllocatedStorage": "Integer",
      "MonitoringInterval": "Integer",
      "MonitoringRoleArn": "String",
      "MultiAZ": "Boolean",
      "NcharCharacterSetName": "String",
      "NetworkType": "String",
      "OptionGroupName": "String",
      "PerformanceInsightsKMSKeyId": "String",
      "PerformanceInsightsRetentionPeriod": "Integer",
      "Port": "String",
      "PreferredBackupWindow": "String",
      "PreferredMaintenanceWindow": "String",
      "ProcessorFeatures": "ProcessorFeature",
      "PromotionTier": "Integer",
      "PubliclyAccessible": "Boolean",
      "ReplicaMode": "String",
      "RestoreTime": "String",
      "SourceDBClusterIdentifier": "String",
      "SourceDBInstanceAutomatedBackupsArn": "String",
      "SourceDBInstanceIdentifier": "String",
      "SourceDbiResourceId": "String",
      "SourceRegion": "String",
      "StorageEncrypted": "Boolean",
      "StorageThroughput": "Integer",
      "StorageType": "String",
      "Tags": "Tag",
      "Timezone": "String",
      "UseDefaultProcessorFeatures": "Boolean",
      "UseLatestRestorableTime": "Boolean",
      "VPCSecurityGroups": "String"
    }
  },
  "AWS::RDS::DBParameterGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbparametergroup.html",
    "Properties": {
      "DBParameterGroupName": "String",
      "Description": "String",
      "Family": "String",
      "Parameters": "Json",
      "Tags": "Tag"
    }
  },
  "AWS::RDS::DBProxy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbproxy.html",
    "Properties": {
      "Auth": "AuthFormat",
      "DBProxyName": "String",
      "DebugLogging": "Boolean",
      "EngineFamily": "String",
      "IdleClientTimeout": "Integer",
      "RequireTLS": "Boolean",
      "RoleArn": "String",
      "Tags": "TagFormat",
      "VpcSecurityGroupIds": "String",
      "VpcSubnetIds": "String"
    }
  },
  "AWS::RDS::DBProxyEndpoint": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbproxyendpoint.html",
    "Properties": {
      "DBProxyEndpointName": "String",
      "DBProxyName": "String",
      "Tags": "TagFormat",
      "TargetRole": "String",
      "VpcSecurityGroupIds": "String",
      "VpcSubnetIds": "String"
    }
  },
  "AWS::RDS::DBProxyTargetGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbproxytargetgroup.html",
    "Properties": {
      "ConnectionPoolConfigurationInfo": "ConnectionPoolConfigurationInfoFormat",
      "DBClusterIdentifiers": "String",
      "DBInstanceIdentifiers": "String",
      "DBProxyName": "String",
      "TargetGroupName": "String"
    }
  },
  "AWS::RDS::DBSecurityGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-security-group.html",
    "Properties": {
      "DBSecurityGroupIngress": "Ingress",
      "EC2VpcId": "String",
      "GroupDescription": "String",
      "Tags": "Tag"
    }
  },
  "AWS::RDS::DBSecurityGroupIngress": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-security-group-ingress.html",
    "Properties": {
      "CIDRIP": "String",
      "DBSecurityGroupName": "String",
      "EC2SecurityGroupId": "String",
      "EC2SecurityGroupName": "String",
      "EC2SecurityGroupOwnerId": "String"
    }
  },
  "AWS::RDS::DBSubnetGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbsubnetgroup.html",
    "Properties": {
      "DBSubnetGroupDescription": "String",
      "DBSubnetGroupName": "String",
      "SubnetIds": "String",
      "Tags": "Tag"
    }
  },
  "AWS::RDS::EventSubscription": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-eventsubscription.html",
    "Properties": {
      "Enabled": "Boolean",
      "EventCategories": "String",
      "SnsTopicArn": "String",
      "SourceIds": "String",
      "SourceType": "String",
      "SubscriptionName": "String",
      "Tags": "Tag"
    }
  },
  "AWS::RDS::GlobalCluster": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-globalcluster.html",
    "Properties": {
      "DeletionProtection": "Boolean",
      "Engine": "String",
      "EngineLifecycleSupport": "String",
      "EngineVersion": "String",
      "GlobalClusterIdentifier": "String",
      "SourceDBClusterIdentifier": "String",
      "StorageEncrypted": "Boolean",
      "Tags": "Tag"
    }
  },
  "AWS::RDS::Integration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-integration.html",
    "Properties": {
      "AdditionalEncryptionContext": "Map",
      "DataFilter": "String",
      "Description": "String",
      "IntegrationName": "String",
      "KMSKeyId": "String",
      "SourceArn": "String",
      "Tags": "Tag",
      "TargetArn": "String"
    }
  },
  "AWS::RDS::OptionGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-optiongroup.html",
    "Properties": {
      "EngineName": "String",
      "MajorEngineVersion": "String",
      "OptionConfigurations": "OptionConfiguration",
      "OptionGroupDescription": "String",
      "OptionGroupName": "String",
      "Tags": "Tag"
    }
  },
  "AWS::RUM::AppMonitor": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rum-appmonitor.html",
    "Properties": {
      "AppMonitorConfiguration": "AppMonitorConfiguration",
      "CustomEvents": "CustomEvents",
      "CwLogEnabled": "Boolean",
      "Domain": "String",
      "Name": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Redshift::Cluster": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html",
    "Properties": {
      "AllowVersionUpgrade": "Boolean",
      "AquaConfigurationStatus": "String",
      "AutomatedSnapshotRetentionPeriod": "Integer",
      "AvailabilityZone": "String",
      "AvailabilityZoneRelocation": "Boolean",
      "AvailabilityZoneRelocationStatus": "String",
      "Classic": "Boolean",
      "ClusterIdentifier": "String",
      "ClusterParameterGroupName": "String",
      "ClusterSecurityGroups": "String",
      "ClusterSubnetGroupName": "String",
      "ClusterType": "String",
      "ClusterVersion": "String",
      "DBName": "String",
      "DeferMaintenance": "Boolean",
      "DeferMaintenanceDuration": "Integer",
      "DeferMaintenanceEndTime": "String",
      "DeferMaintenanceStartTime": "String",
      "DestinationRegion": "String",
      "ElasticIp": "String",
      "Encrypted": "Boolean",
      "Endpoint": "Endpoint",
      "EnhancedVpcRouting": "Boolean",
      "HsmClientCertificateIdentifier": "String",
      "HsmConfigurationIdentifier": "String",
      "IamRoles": "String",
      "KmsKeyId": "String",
      "LoggingProperties": "LoggingProperties",
      "MaintenanceTrackName": "String",
      "ManageMasterPassword": "Boolean",
      "ManualSnapshotRetentionPeriod": "Integer",
      "MasterPasswordSecretKmsKeyId": "String",
      "MasterUserPassword": "String",
      "MasterUsername": "String",
      "MultiAZ": "Boolean",
      "NamespaceResourcePolicy": "Json",
      "NodeType": "String",
      "NumberOfNodes": "Integer",
      "OwnerAccount": "String",
      "Port": "Integer",
      "PreferredMaintenanceWindow": "String",
      "PubliclyAccessible": "Boolean",
      "ResourceAction": "String",
      "RevisionTarget": "String",
      "RotateEncryptionKey": "Boolean",
      "SnapshotClusterIdentifier": "String",
      "SnapshotCopyGrantName": "String",
      "SnapshotCopyManual": "Boolean",
      "SnapshotCopyRetentionPeriod": "Integer",
      "SnapshotIdentifier": "String",
      "Tags": "Tag",
      "VpcSecurityGroupIds": "String"
    }
  },
  "AWS::Redshift::ClusterParameterGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clusterparametergroup.html",
    "Properties": {
      "Description": "String",
      "ParameterGroupFamily": "String",
      "ParameterGroupName": "String",
      "Parameters": "Parameter",
      "Tags": "Tag"
    }
  },
  "AWS::Redshift::ClusterSecurityGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersecuritygroup.html",
    "Properties": {
      "Description": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Redshift::ClusterSecurityGroupIngress": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersecuritygroupingress.html",
    "Properties": {
      "CIDRIP": "String",
      "ClusterSecurityGroupName": "String",
      "EC2SecurityGroupName": "String",
      "EC2SecurityGroupOwnerId": "String"
    }
  },
  "AWS::Redshift::ClusterSubnetGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersubnetgroup.html",
    "Properties": {
      "Description": "String",
      "SubnetIds": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Redshift::EndpointAccess": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointaccess.html",
    "Properties": {
      "ClusterIdentifier": "String",
      "EndpointName": "String",
      "ResourceOwner": "String",
      "SubnetGroupName": "String",
      "VpcSecurityGroupIds": "String"
    }
  },
  "AWS::Redshift::EndpointAuthorization": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointauthorization.html",
    "Properties": {
      "Account": "String",
      "ClusterIdentifier": "String",
      "Force": "Boolean",
      "VpcIds": "String"
    }
  },
  "AWS::Redshift::EventSubscription": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-eventsubscription.html",
    "Properties": {
      "Enabled": "Boolean",
      "EventCategories": "String",
      "Severity": "String",
      "SnsTopicArn": "String",
      "SourceIds": "String",
      "SourceType": "String",
      "SubscriptionName": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Redshift::ScheduledAction": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-scheduledaction.html",
    "Properties": {
      "Enable": "Boolean",
      "EndTime": "String",
      "IamRole": "String",
      "Schedule": "String",
      "ScheduledActionDescription": "String",
      "ScheduledActionName": "String",
      "StartTime": "String",
      "TargetAction": "ScheduledActionType"
    }
  },
  "AWS::RedshiftServerless::Namespace": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshiftserverless-namespace.html",
    "Properties": {
      "AdminPasswordSecretKmsKeyId": "String",
      "AdminUserPassword": "String",
      "AdminUsername": "String",
      "DbName": "String",
      "DefaultIamRoleArn": "String",
      "FinalSnapshotName": "String",
      "FinalSnapshotRetentionPeriod": "Integer",
      "IamRoles": "String",
      "KmsKeyId": "String",
      "LogExports": "String",
      "ManageAdminPassword": "Boolean",
      "NamespaceName": "String",
      "NamespaceResourcePolicy": "Json",
      "RedshiftIdcApplicationArn": "String",
      "SnapshotCopyConfigurations": "SnapshotCopyConfiguration",
      "Tags": "Tag"
    }
  },
  "AWS::RedshiftServerless::Workgroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshiftserverless-workgroup.html",
    "Properties": {
      "BaseCapacity": "Integer",
      "ConfigParameters": "ConfigParameter",
      "EnhancedVpcRouting": "Boolean",
      "MaxCapacity": "Integer",
      "NamespaceName": "String",
      "Port": "Integer",
      "PubliclyAccessible": "Boolean",
      "SecurityGroupIds": "String",
      "SubnetIds": "String",
      "Tags": "Tag",
      "WorkgroupName": "String"
    }
  },
  "AWS::RefactorSpaces::Application": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-application.html",
    "Properties": {
      "ApiGatewayProxy": "ApiGatewayProxyInput",
      "EnvironmentIdentifier": "String",
      "Name": "String",
      "ProxyType": "String",
      "Tags": "Tag",
      "VpcId": "String"
    }
  },
  "AWS::RefactorSpaces::Environment": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-environment.html",
    "Properties": {
      "Description": "String",
      "Name": "String",
      "NetworkFabricType": "String",
      "Tags": "Tag"
    }
  },
  "AWS::RefactorSpaces::Route": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-route.html",
    "Properties": {
      "ApplicationIdentifier": "String",
      "DefaultRoute": "DefaultRouteInput",
      "EnvironmentIdentifier": "String",
      "RouteType": "String",
      "ServiceIdentifier": "String",
      "Tags": "Tag",
      "UriPathRoute": "UriPathRouteInput"
    }
  },
  "AWS::RefactorSpaces::Service": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-service.html",
    "Properties": {
      "ApplicationIdentifier": "String",
      "Description": "String",
      "EndpointType": "String",
      "EnvironmentIdentifier": "String",
      "LambdaEndpoint": "LambdaEndpointInput",
      "Name": "String",
      "Tags": "Tag",
      "UrlEndpoint": "UrlEndpointInput",
      "VpcId": "String"
    }
  },
  "AWS::Rekognition::Collection": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rekognition-collection.html",
    "Properties": {
      "CollectionId": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Rekognition::Project": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rekognition-project.html",
    "Properties": {
      "ProjectName": "String"
    }
  },
  "AWS::Rekognition::StreamProcessor": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rekognition-streamprocessor.html",
    "Properties": {
      "BoundingBoxRegionsOfInterest": "BoundingBox",
      "ConnectedHomeSettings": "ConnectedHomeSettings",
      "DataSharingPreference": "DataSharingPreference",
      "FaceSearchSettings": "FaceSearchSettings",
      "KinesisDataStream": "KinesisDataStream",
      "KinesisVideoStream": "KinesisVideoStream",
      "KmsKeyId": "String",
      "Name": "String",
      "NotificationChannel": "NotificationChannel",
      "PolygonRegionsOfInterest": "Json",
      "RoleArn": "String",
      "S3Destination": "S3Destination",
      "Tags": "Tag"
    }
  },
  "AWS::ResilienceHub::App": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resiliencehub-app.html",
    "Properties": {
      "AppAssessmentSchedule": "String",
      "AppTemplateBody": "String",
      "Description": "String",
      "EventSubscriptions": "EventSubscription",
      "Name": "String",
      "PermissionModel": "PermissionModel",
      "ResiliencyPolicyArn": "String",
      "ResourceMappings": "ResourceMapping",
      "Tags": "Map"
    }
  },
  "AWS::ResilienceHub::ResiliencyPolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resiliencehub-resiliencypolicy.html",
    "Properties": {
      "DataLocationConstraint": "String",
      "Policy": "PolicyMap",
      "PolicyDescription": "String",
      "PolicyName": "String",
      "Tags": "Map",
      "Tier": "String"
    }
  },
  "AWS::ResourceExplorer2::DefaultViewAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resourceexplorer2-defaultviewassociation.html",
    "Properties": {
      "ViewArn": "String"
    }
  },
  "AWS::ResourceExplorer2::Index": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resourceexplorer2-index.html",
    "Properties": {
      "Tags": "Map",
      "Type": "String"
    }
  },
  "AWS::ResourceExplorer2::View": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resourceexplorer2-view.html",
    "Properties": {
      "Filters": "SearchFilter",
      "IncludedProperties": "IncludedProperty",
      "Scope": "String",
      "Tags": "Map",
      "ViewName": "String"
    }
  },
  "AWS::ResourceGroups::Group": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resourcegroups-group.html",
    "Properties": {
      "Configuration": "ConfigurationItem",
      "Description": "String",
      "Name": "String",
      "ResourceQuery": "ResourceQuery",
      "Resources": "String",
      "Tags": "Tag"
    }
  },
  "AWS::RoboMaker::Fleet": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-fleet.html",
    "Properties": {
      "Name": "String",
      "Tags": "Map"
    }
  },
  "AWS::RoboMaker::Robot": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robot.html",
    "Properties": {
      "Architecture": "String",
      "Fleet": "String",
      "GreengrassGroupId": "String",
      "Name": "String",
      "Tags": "Map"
    }
  },
  "AWS::RoboMaker::RobotApplication": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robotapplication.html",
    "Properties": {
      "CurrentRevisionId": "String",
      "Environment": "String",
      "Name": "String",
      "RobotSoftwareSuite": "RobotSoftwareSuite",
      "Sources": "SourceConfig",
      "Tags": "Map"
    }
  },
  "AWS::RoboMaker::RobotApplicationVersion": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robotapplicationversion.html",
    "Properties": {
      "Application": "String",
      "CurrentRevisionId": "String"
    }
  },
  "AWS::RoboMaker::SimulationApplication": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-simulationapplication.html",
    "Properties": {
      "CurrentRevisionId": "String",
      "Environment": "String",
      "Name": "String",
      "RenderingEngine": "RenderingEngine",
      "RobotSoftwareSuite": "RobotSoftwareSuite",
      "SimulationSoftwareSuite": "SimulationSoftwareSuite",
      "Sources": "SourceConfig",
      "Tags": "Map"
    }
  },
  "AWS::RoboMaker::SimulationApplicationVersion": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-simulationapplicationversion.html",
    "Properties": {
      "Application": "String",
      "CurrentRevisionId": "String"
    }
  },
  "AWS::RolesAnywhere::CRL": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rolesanywhere-crl.html",
    "Properties": {
      "CrlData": "String",
      "Enabled": "Boolean",
      "Name": "String",
      "Tags": "Tag",
      "TrustAnchorArn": "String"
    }
  },
  "AWS::RolesAnywhere::Profile": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rolesanywhere-profile.html",
    "Properties": {
      "AcceptRoleSessionName": "Boolean",
      "AttributeMappings": "AttributeMapping",
      "DurationSeconds": "Double",
      "Enabled": "Boolean",
      "ManagedPolicyArns": "String",
      "Name": "String",
      "RequireInstanceProperties": "Boolean",
      "RoleArns": "String",
      "SessionPolicy": "String",
      "Tags": "Tag"
    }
  },
  "AWS::RolesAnywhere::TrustAnchor": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rolesanywhere-trustanchor.html",
    "Properties": {
      "Enabled": "Boolean",
      "Name": "String",
      "NotificationSettings": "NotificationSetting",
      "Source": "Source",
      "Tags": "Tag"
    }
  },
  "AWS::Route53::CidrCollection": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-cidrcollection.html",
    "Properties": {
      "Locations": "Location",
      "Name": "String"
    }
  },
  "AWS::Route53::DNSSEC": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-dnssec.html",
    "Properties": {
      "HostedZoneId": "String"
    }
  },
  "AWS::Route53::HealthCheck": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-healthcheck.html",
    "Properties": {
      "HealthCheckConfig": "HealthCheckConfig",
      "HealthCheckTags": "HealthCheckTag"
    }
  },
  "AWS::Route53::HostedZone": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-hostedzone.html",
    "Properties": {
      "HostedZoneConfig": "HostedZoneConfig",
      "HostedZoneTags": "HostedZoneTag",
      "Name": "String",
      "QueryLoggingConfig": "QueryLoggingConfig",
      "VPCs": "VPC"
    }
  },
  "AWS::Route53::KeySigningKey": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-keysigningkey.html",
    "Properties": {
      "HostedZoneId": "String",
      "KeyManagementServiceArn": "String",
      "Name": "String",
      "Status": "String"
    }
  },
  "AWS::Route53::RecordSet": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html",
    "Properties": {
      "AliasTarget": "AliasTarget",
      "CidrRoutingConfig": "CidrRoutingConfig",
      "Comment": "String",
      "Failover": "String",
      "GeoLocation": "GeoLocation",
      "GeoProximityLocation": "GeoProximityLocation",
      "HealthCheckId": "String",
      "HostedZoneId": "String",
      "HostedZoneName": "String",
      "MultiValueAnswer": "Boolean",
      "Name": "String",
      "Region": "String",
      "ResourceRecords": "String",
      "SetIdentifier": "String",
      "TTL": "String",
      "Type": "String",
      "Weight": "Integer"
    }
  },
  "AWS::Route53::RecordSetGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-recordsetgroup.html",
    "Properties": {
      "Comment": "String",
      "HostedZoneId": "String",
      "HostedZoneName": "String",
      "RecordSets": "RecordSet"
    }
  },
  "AWS::Route53Profiles::Profile": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53profiles-profile.html",
    "Properties": {
      "Name": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Route53Profiles::ProfileAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53profiles-profileassociation.html",
    "Properties": {
      "Arn": "String",
      "Name": "String",
      "ProfileId": "String",
      "ResourceId": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Route53Profiles::ProfileResourceAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53profiles-profileresourceassociation.html",
    "Properties": {
      "Name": "String",
      "ProfileId": "String",
      "ResourceArn": "String",
      "ResourceProperties": "String"
    }
  },
  "AWS::Route53RecoveryControl::Cluster": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoverycontrol-cluster.html",
    "Properties": {
      "Name": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Route53RecoveryControl::ControlPanel": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoverycontrol-controlpanel.html",
    "Properties": {
      "ClusterArn": "String",
      "Name": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Route53RecoveryControl::RoutingControl": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoverycontrol-routingcontrol.html",
    "Properties": {
      "ClusterArn": "String",
      "ControlPanelArn": "String",
      "Name": "String"
    }
  },
  "AWS::Route53RecoveryControl::SafetyRule": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoverycontrol-safetyrule.html",
    "Properties": {
      "AssertionRule": "AssertionRule",
      "ControlPanelArn": "String",
      "GatingRule": "GatingRule",
      "Name": "String",
      "RuleConfig": "RuleConfig",
      "Tags": "Tag"
    }
  },
  "AWS::Route53RecoveryReadiness::Cell": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-cell.html",
    "Properties": {
      "CellName": "String",
      "Cells": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Route53RecoveryReadiness::ReadinessCheck": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-readinesscheck.html",
    "Properties": {
      "ReadinessCheckName": "String",
      "ResourceSetName": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Route53RecoveryReadiness::RecoveryGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-recoverygroup.html",
    "Properties": {
      "Cells": "String",
      "RecoveryGroupName": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Route53RecoveryReadiness::ResourceSet": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-resourceset.html",
    "Properties": {
      "ResourceSetName": "String",
      "ResourceSetType": "String",
      "Resources": "Resource",
      "Tags": "Tag"
    }
  },
  "AWS::Route53Resolver::FirewallDomainList": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewalldomainlist.html",
    "Properties": {
      "DomainFileUrl": "String",
      "Domains": "String",
      "Name": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Route53Resolver::FirewallRuleGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewallrulegroup.html",
    "Properties": {
      "FirewallRules": "FirewallRule",
      "Name": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Route53Resolver::FirewallRuleGroupAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewallrulegroupassociation.html",
    "Properties": {
      "FirewallRuleGroupId": "String",
      "MutationProtection": "String",
      "Name": "String",
      "Priority": "Integer",
      "Tags": "Tag",
      "VpcId": "String"
    }
  },
  "AWS::Route53Resolver::OutpostResolver": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-outpostresolver.html",
    "Properties": {
      "InstanceCount": "Integer",
      "Name": "String",
      "OutpostArn": "String",
      "PreferredInstanceType": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Route53Resolver::ResolverConfig": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverconfig.html",
    "Properties": {
      "AutodefinedReverseFlag": "String",
      "ResourceId": "String"
    }
  },
  "AWS::Route53Resolver::ResolverDNSSECConfig": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverdnssecconfig.html",
    "Properties": {
      "ResourceId": "String"
    }
  },
  "AWS::Route53Resolver::ResolverEndpoint": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html",
    "Properties": {
      "Direction": "String",
      "IpAddresses": "IpAddressRequest",
      "Name": "String",
      "OutpostArn": "String",
      "PreferredInstanceType": "String",
      "Protocols": "String",
      "ResolverEndpointType": "String",
      "SecurityGroupIds": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Route53Resolver::ResolverQueryLoggingConfig": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfig.html",
    "Properties": {
      "DestinationArn": "String",
      "Name": "String"
    }
  },
  "AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfigassociation.html",
    "Properties": {
      "ResolverQueryLogConfigId": "String",
      "ResourceId": "String"
    }
  },
  "AWS::Route53Resolver::ResolverRule": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html",
    "Properties": {
      "DelegationRecord": "String",
      "DomainName": "String",
      "Name": "String",
      "ResolverEndpointId": "String",
      "RuleType": "String",
      "Tags": "Tag",
      "TargetIps": "TargetAddress"
    }
  },
  "AWS::Route53Resolver::ResolverRuleAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverruleassociation.html",
    "Properties": {
      "Name": "String",
      "ResolverRuleId": "String",
      "VPCId": "String"
    }
  },
  "AWS::S3::AccessGrant": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accessgrant.html",
    "Properties": {
      "AccessGrantsLocationConfiguration": "AccessGrantsLocationConfiguration",
      "AccessGrantsLocationId": "String",
      "ApplicationArn": "String",
      "Grantee": "Grantee",
      "Permission": "String",
      "S3PrefixType": "String",
      "Tags": "Tag"
    }
  },
  "AWS::S3::AccessGrantsInstance": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accessgrantsinstance.html",
    "Properties": {
      "IdentityCenterArn": "String",
      "Tags": "Tag"
    }
  },
  "AWS::S3::AccessGrantsLocation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accessgrantslocation.html",
    "Properties": {
      "IamRoleArn": "String",
      "LocationScope": "String",
      "Tags": "Tag"
    }
  },
  "AWS::S3::AccessPoint": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html",
    "Properties": {
      "Bucket": "String",
      "BucketAccountId": "String",
      "Name": "String",
      "Policy": "Json",
      "PublicAccessBlockConfiguration": "PublicAccessBlockConfiguration",
      "VpcConfiguration": "VpcConfiguration"
    }
  },
  "AWS::S3::Bucket": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html",
    "Properties": {
      "AccelerateConfiguration": "AccelerateConfiguration",
      "AccessControl": "String",
      "AnalyticsConfigurations": "AnalyticsConfiguration",
      "BucketEncryption": "BucketEncryption",
      "BucketName": "String",
      "CorsConfiguration": "CorsConfiguration",
      "IntelligentTieringConfigurations": "IntelligentTieringConfiguration",
      "InventoryConfigurations": "InventoryConfiguration",
      "LifecycleConfiguration": "LifecycleConfiguration",
      "LoggingConfiguration": "LoggingConfiguration",
      "MetricsConfigurations": "MetricsConfiguration",
      "NotificationConfiguration": "NotificationConfiguration",
      "ObjectLockConfiguration": "ObjectLockConfiguration",
      "ObjectLockEnabled": "Boolean",
      "OwnershipControls": "OwnershipControls",
      "PublicAccessBlockConfiguration": "PublicAccessBlockConfiguration",
      "ReplicationConfiguration": "ReplicationConfiguration",
      "Tags": "Tag",
      "VersioningConfiguration": "VersioningConfiguration",
      "WebsiteConfiguration": "WebsiteConfiguration"
    }
  },
  "AWS::S3::BucketPolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucketpolicy.html",
    "Properties": {
      "Bucket": "String",
      "PolicyDocument": "Json"
    }
  },
  "AWS::S3::MultiRegionAccessPoint": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-multiregionaccesspoint.html",
    "Properties": {
      "Name": "String",
      "PublicAccessBlockConfiguration": "PublicAccessBlockConfiguration",
      "Regions": "Region"
    }
  },
  "AWS::S3::MultiRegionAccessPointPolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-multiregionaccesspointpolicy.html",
    "Properties": {
      "MrapName": "String",
      "Policy": "Json"
    }
  },
  "AWS::S3::StorageLens": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-storagelens.html",
    "Properties": {
      "StorageLensConfiguration": "StorageLensConfiguration",
      "Tags": "Tag"
    }
  },
  "AWS::S3::StorageLensGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-storagelensgroup.html",
    "Properties": {
      "Filter": "Filter",
      "Name": "String",
      "Tags": "Tag"
    }
  },
  "AWS::S3Express::BucketPolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3express-bucketpolicy.html",
    "Properties": {
      "Bucket": "String",
      "PolicyDocument": "Json"
    }
  },
  "AWS::S3Express::DirectoryBucket": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3express-directorybucket.html",
    "Properties": {
      "BucketEncryption": "Json",
      "BucketName": "String",
      "DataRedundancy": "String",
      "LocationName": "String"
    }
  },
  "AWS::S3ObjectLambda::AccessPoint": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3objectlambda-accesspoint.html",
    "Properties": {
      "Name": "String",
      "ObjectLambdaConfiguration": "ObjectLambdaConfiguration"
    }
  },
  "AWS::S3ObjectLambda::AccessPointPolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3objectlambda-accesspointpolicy.html",
    "Properties": {
      "ObjectLambdaAccessPoint": "String",
      "PolicyDocument": "Json"
    }
  },
  "AWS::S3Outposts::AccessPoint": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3outposts-accesspoint.html",
    "Properties": {
      "Bucket": "String",
      "Name": "String",
      "Policy": "Json",
      "VpcConfiguration": "VpcConfiguration"
    }
  },
  "AWS::S3Outposts::Bucket": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3outposts-bucket.html",
    "Properties": {
      "BucketName": "String",
      "LifecycleConfiguration": "LifecycleConfiguration",
      "OutpostId": "String",
      "Tags": "Tag"
    }
  },
  "AWS::S3Outposts::BucketPolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3outposts-bucketpolicy.html",
    "Properties": {
      "Bucket": "String",
      "PolicyDocument": "Json"
    }
  },
  "AWS::S3Outposts::Endpoint": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3outposts-endpoint.html",
    "Properties": {
      "AccessType": "String",
      "CustomerOwnedIpv4Pool": "String",
      "FailedReason": "FailedReason",
      "OutpostId": "String",
      "SecurityGroupId": "String",
      "SubnetId": "String"
    }
  },
  "AWS::SDB::Domain": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-simpledb.html",
    "Properties": {
      "Description": "String"
    }
  },
  "AWS::SES::ConfigurationSet": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-configurationset.html",
    "Properties": {
      "DeliveryOptions": "DeliveryOptions",
      "Name": "String",
      "ReputationOptions": "ReputationOptions",
      "SendingOptions": "SendingOptions",
      "SuppressionOptions": "SuppressionOptions",
      "TrackingOptions": "TrackingOptions",
      "VdmOptions": "VdmOptions"
    }
  },
  "AWS::SES::ConfigurationSetEventDestination": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-configurationseteventdestination.html",
    "Properties": {
      "ConfigurationSetName": "String",
      "EventDestination": "EventDestination"
    }
  },
  "AWS::SES::ContactList": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-contactlist.html",
    "Properties": {
      "ContactListName": "String",
      "Description": "String",
      "Tags": "Tag",
      "Topics": "Topic"
    }
  },
  "AWS::SES::DedicatedIpPool": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-dedicatedippool.html",
    "Properties": {
      "PoolName": "String",
      "ScalingMode": "String"
    }
  },
  "AWS::SES::EmailIdentity": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-emailidentity.html",
    "Properties": {
      "ConfigurationSetAttributes": "ConfigurationSetAttributes",
      "DkimAttributes": "DkimAttributes",
      "DkimSigningAttributes": "DkimSigningAttributes",
      "EmailIdentity": "String",
      "FeedbackAttributes": "FeedbackAttributes",
      "MailFromAttributes": "MailFromAttributes"
    }
  },
  "AWS::SES::MailManagerAddonInstance": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-mailmanageraddoninstance.html",
    "Properties": {
      "AddonSubscriptionId": "String",
      "Tags": "Tag"
    }
  },
  "AWS::SES::MailManagerAddonSubscription": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-mailmanageraddonsubscription.html",
    "Properties": {
      "AddonName": "String",
      "Tags": "Tag"
    }
  },
  "AWS::SES::MailManagerArchive": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-mailmanagerarchive.html",
    "Properties": {
      "ArchiveName": "String",
      "KmsKeyArn": "String",
      "Retention": "ArchiveRetention",
      "Tags": "Tag"
    }
  },
  "AWS::SES::MailManagerIngressPoint": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-mailmanageringresspoint.html",
    "Properties": {
      "IngressPointConfiguration": "IngressPointConfiguration",
      "IngressPointName": "String",
      "RuleSetId": "String",
      "StatusToUpdate": "String",
      "Tags": "Tag",
      "TrafficPolicyId": "String",
      "Type": "String"
    }
  },
  "AWS::SES::MailManagerRelay": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-mailmanagerrelay.html",
    "Properties": {
      "Authentication": "RelayAuthentication",
      "RelayName": "String",
      "ServerName": "String",
      "ServerPort": "Double",
      "Tags": "Tag"
    }
  },
  "AWS::SES::MailManagerRuleSet": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-mailmanagerruleset.html",
    "Properties": {
      "RuleSetName": "String",
      "Rules": "Rule",
      "Tags": "Tag"
    }
  },
  "AWS::SES::MailManagerTrafficPolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-mailmanagertrafficpolicy.html",
    "Properties": {
      "DefaultAction": "String",
      "MaxMessageSizeBytes": "Double",
      "PolicyStatements": "PolicyStatement",
      "Tags": "Tag",
      "TrafficPolicyName": "String"
    }
  },
  "AWS::SES::ReceiptFilter": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-receiptfilter.html",
    "Properties": {
      "Filter": "Filter"
    }
  },
  "AWS::SES::ReceiptRule": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-receiptrule.html",
    "Properties": {
      "After": "String",
      "Rule": "Rule",
      "RuleSetName": "String"
    }
  },
  "AWS::SES::ReceiptRuleSet": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-receiptruleset.html",
    "Properties": {
      "RuleSetName": "String"
    }
  },
  "AWS::SES::Template": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-template.html",
    "Properties": {
      "Template": "Template"
    }
  },
  "AWS::SES::VdmAttributes": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-vdmattributes.html",
    "Properties": {
      "DashboardAttributes": "DashboardAttributes",
      "GuardianAttributes": "GuardianAttributes"
    }
  },
  "AWS::SNS::Subscription": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-subscription.html",
    "Properties": {
      "DeliveryPolicy": "Json",
      "Endpoint": "String",
      "FilterPolicy": "Json",
      "FilterPolicyScope": "String",
      "Protocol": "String",
      "RawMessageDelivery": "Boolean",
      "RedrivePolicy": "Json",
      "Region": "String",
      "ReplayPolicy": "Json",
      "SubscriptionRoleArn": "String",
      "TopicArn": "String"
    }
  },
  "AWS::SNS::Topic": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-topic.html",
    "Properties": {
      "ArchivePolicy": "Json",
      "ContentBasedDeduplication": "Boolean",
      "DataProtectionPolicy": "Json",
      "DeliveryStatusLogging": "LoggingConfig",
      "DisplayName": "String",
      "FifoTopic": "Boolean",
      "KmsMasterKeyId": "String",
      "SignatureVersion": "String",
      "Subscription": "Subscription",
      "Tags": "Tag",
      "TopicName": "String",
      "TracingConfig": "String"
    }
  },
  "AWS::SNS::TopicInlinePolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-topicinlinepolicy.html",
    "Properties": {
      "PolicyDocument": "Json",
      "TopicArn": "String"
    }
  },
  "AWS::SNS::TopicPolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-topicpolicy.html",
    "Properties": {
      "PolicyDocument": "Json",
      "Topics": "String"
    }
  },
  "AWS::SQS::Queue": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html",
    "Properties": {
      "ContentBasedDeduplication": "Boolean",
      "DeduplicationScope": "String",
      "DelaySeconds": "Integer",
      "FifoQueue": "Boolean",
      "FifoThroughputLimit": "String",
      "KmsDataKeyReusePeriodSeconds": "Integer",
      "KmsMasterKeyId": "String",
      "MaximumMessageSize": "Integer",
      "MessageRetentionPeriod": "Integer",
      "QueueName": "String",
      "ReceiveMessageWaitTimeSeconds": "Integer",
      "RedriveAllowPolicy": "Json",
      "RedrivePolicy": "Json",
      "SqsManagedSseEnabled": "Boolean",
      "Tags": "Tag",
      "VisibilityTimeout": "Integer"
    }
  },
  "AWS::SQS::QueueInlinePolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queueinlinepolicy.html",
    "Properties": {
      "PolicyDocument": "Json",
      "Queue": "String"
    }
  },
  "AWS::SQS::QueuePolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queuepolicy.html",
    "Properties": {
      "PolicyDocument": "Json",
      "Queues": "String"
    }
  },
  "AWS::SSM::Association": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-association.html",
    "Properties": {
      "ApplyOnlyAtCronInterval": "Boolean",
      "AssociationName": "String",
      "AutomationTargetParameterName": "String",
      "CalendarNames": "String",
      "ComplianceSeverity": "String",
      "DocumentVersion": "String",
      "InstanceId": "String",
      "MaxConcurrency": "String",
      "MaxErrors": "String",
      "Name": "String",
      "OutputLocation": "InstanceAssociationOutputLocation",
      "Parameters": "Json",
      "ScheduleExpression": "String",
      "ScheduleOffset": "Integer",
      "SyncCompliance": "String",
      "Targets": "Target",
      "WaitForSuccessTimeoutSeconds": "Integer"
    }
  },
  "AWS::SSM::Document": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-document.html",
    "Properties": {
      "Attachments": "AttachmentsSource",
      "Content": "Json",
      "DocumentFormat": "String",
      "DocumentType": "String",
      "Name": "String",
      "Requires": "DocumentRequires",
      "Tags": "Tag",
      "TargetType": "String",
      "UpdateMethod": "String",
      "VersionName": "String"
    }
  },
  "AWS::SSM::MaintenanceWindow": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindow.html",
    "Properties": {
      "AllowUnassociatedTargets": "Boolean",
      "Cutoff": "Integer",
      "Description": "String",
      "Duration": "Integer",
      "EndDate": "String",
      "Name": "String",
      "Schedule": "String",
      "ScheduleOffset": "Integer",
      "ScheduleTimezone": "String",
      "StartDate": "String",
      "Tags": "Tag"
    }
  },
  "AWS::SSM::MaintenanceWindowTarget": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindowtarget.html",
    "Properties": {
      "Description": "String",
      "Name": "String",
      "OwnerInformation": "String",
      "ResourceType": "String",
      "Targets": "Targets",
      "WindowId": "String"
    }
  },
  "AWS::SSM::MaintenanceWindowTask": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindowtask.html",
    "Properties": {
      "CutoffBehavior": "String",
      "Description": "String",
      "LoggingInfo": "LoggingInfo",
      "MaxConcurrency": "String",
      "MaxErrors": "String",
      "Name": "String",
      "Priority": "Integer",
      "ServiceRoleArn": "String",
      "Targets": "Target",
      "TaskArn": "String",
      "TaskInvocationParameters": "TaskInvocationParameters",
      "TaskParameters": "Json",
      "TaskType": "String",
      "WindowId": "String"
    }
  },
  "AWS::SSM::Parameter": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-parameter.html",
    "Properties": {
      "AllowedPattern": "String",
      "DataType": "String",
      "Description": "String",
      "Name": "String",
      "Policies": "String",
      "Tags": "Map",
      "Tier": "String",
      "Type": "String",
      "Value": "String"
    }
  },
  "AWS::SSM::PatchBaseline": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-patchbaseline.html",
    "Properties": {
      "ApprovalRules": "RuleGroup",
      "ApprovedPatches": "String",
      "ApprovedPatchesComplianceLevel": "String",
      "ApprovedPatchesEnableNonSecurity": "Boolean",
      "DefaultBaseline": "Boolean",
      "Description": "String",
      "GlobalFilters": "PatchFilterGroup",
      "Name": "String",
      "OperatingSystem": "String",
      "PatchGroups": "String",
      "RejectedPatches": "String",
      "RejectedPatchesAction": "String",
      "Sources": "PatchSource",
      "Tags": "Tag"
    }
  },
  "AWS::SSM::ResourceDataSync": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-resourcedatasync.html",
    "Properties": {
      "BucketName": "String",
      "BucketPrefix": "String",
      "BucketRegion": "String",
      "KMSKeyArn": "String",
      "S3Destination": "S3Destination",
      "SyncFormat": "String",
      "SyncName": "String",
      "SyncSource": "SyncSource",
      "SyncType": "String"
    }
  },
  "AWS::SSM::ResourcePolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-resourcepolicy.html",
    "Properties": {
      "Policy": "Json",
      "ResourceArn": "String"
    }
  },
  "AWS::SSMContacts::Contact": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contact.html",
    "Properties": {
      "Alias": "String",
      "DisplayName": "String",
      "Plan": "Stage",
      "Type": "String"
    }
  },
  "AWS::SSMContacts::ContactChannel": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contactchannel.html",
    "Properties": {
      "ChannelAddress": "String",
      "ChannelName": "String",
      "ChannelType": "String",
      "ContactId": "String",
      "DeferActivation": "Boolean"
    }
  },
  "AWS::SSMContacts::Plan": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-plan.html",
    "Properties": {
      "ContactId": "String",
      "RotationIds": "String",
      "Stages": "Stage"
    }
  },
  "AWS::SSMContacts::Rotation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-rotation.html",
    "Properties": {
      "ContactIds": "String",
      "Name": "String",
      "Recurrence": "RecurrenceSettings",
      "StartTime": "String",
      "Tags": "Tag",
      "TimeZoneId": "String"
    }
  },
  "AWS::SSMIncidents::ReplicationSet": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmincidents-replicationset.html",
    "Properties": {
      "DeletionProtected": "Boolean",
      "Regions": "ReplicationRegion",
      "Tags": "Tag"
    }
  },
  "AWS::SSMIncidents::ResponsePlan": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmincidents-responseplan.html",
    "Properties": {
      "Actions": "Action",
      "ChatChannel": "ChatChannel",
      "DisplayName": "String",
      "Engagements": "String",
      "IncidentTemplate": "IncidentTemplate",
      "Integrations": "Integration",
      "Name": "String",
      "Tags": "Tag"
    }
  },
  "AWS::SSMQuickSetup::ConfigurationManager": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmquicksetup-configurationmanager.html",
    "Properties": {
      "ConfigurationDefinitions": "ConfigurationDefinition",
      "Description": "String",
      "Name": "String",
      "Tags": "Map"
    }
  },
  "AWS::SSO::Application": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-application.html",
    "Properties": {
      "ApplicationProviderArn": "String",
      "Description": "String",
      "InstanceArn": "String",
      "Name": "String",
      "PortalOptions": "PortalOptionsConfiguration",
      "Status": "String",
      "Tags": "Tag"
    }
  },
  "AWS::SSO::ApplicationAssignment": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-applicationassignment.html",
    "Properties": {
      "ApplicationArn": "String",
      "PrincipalId": "String",
      "PrincipalType": "String"
    }
  },
  "AWS::SSO::Assignment": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-assignment.html",
    "Properties": {
      "InstanceArn": "String",
      "PermissionSetArn": "String",
      "PrincipalId": "String",
      "PrincipalType": "String",
      "TargetId": "String",
      "TargetType": "String"
    }
  },
  "AWS::SSO::Instance": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-instance.html",
    "Properties": {
      "Name": "String",
      "Tags": "Tag"
    }
  },
  "AWS::SSO::InstanceAccessControlAttributeConfiguration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-instanceaccesscontrolattributeconfiguration.html",
    "Properties": {
      "AccessControlAttributes": "AccessControlAttribute",
      "InstanceArn": "String"
    }
  },
  "AWS::SSO::PermissionSet": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-permissionset.html",
    "Properties": {
      "CustomerManagedPolicyReferences": "CustomerManagedPolicyReference",
      "Description": "String",
      "InlinePolicy": "Json",
      "InstanceArn": "String",
      "ManagedPolicies": "String",
      "Name": "String",
      "PermissionsBoundary": "PermissionsBoundary",
      "RelayStateType": "String",
      "SessionDuration": "String",
      "Tags": "Tag"
    }
  },
  "AWS::SageMaker::App": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-app.html",
    "Properties": {
      "AppName": "String",
      "AppType": "String",
      "DomainId": "String",
      "ResourceSpec": "ResourceSpec",
      "Tags": "Tag",
      "UserProfileName": "String"
    }
  },
  "AWS::SageMaker::AppImageConfig": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-appimageconfig.html",
    "Properties": {
      "AppImageConfigName": "String",
      "CodeEditorAppImageConfig": "CodeEditorAppImageConfig",
      "JupyterLabAppImageConfig": "JupyterLabAppImageConfig",
      "KernelGatewayImageConfig": "KernelGatewayImageConfig",
      "Tags": "Tag"
    }
  },
  "AWS::SageMaker::Cluster": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-cluster.html",
    "Properties": {
      "ClusterName": "String",
      "InstanceGroups": "ClusterInstanceGroup",
      "NodeRecovery": "String",
      "Orchestrator": "Orchestrator",
      "Tags": "Tag",
      "VpcConfig": "VpcConfig"
    }
  },
  "AWS::SageMaker::CodeRepository": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-coderepository.html",
    "Properties": {
      "CodeRepositoryName": "String",
      "GitConfig": "GitConfig",
      "Tags": "Tag"
    }
  },
  "AWS::SageMaker::DataQualityJobDefinition": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-dataqualityjobdefinition.html",
    "Properties": {
      "DataQualityAppSpecification": "DataQualityAppSpecification",
      "DataQualityBaselineConfig": "DataQualityBaselineConfig",
      "DataQualityJobInput": "DataQualityJobInput",
      "DataQualityJobOutputConfig": "MonitoringOutputConfig",
      "EndpointName": "String",
      "JobDefinitionName": "String",
      "JobResources": "MonitoringResources",
      "NetworkConfig": "NetworkConfig",
      "RoleArn": "String",
      "StoppingCondition": "StoppingCondition",
      "Tags": "Tag"
    }
  },
  "AWS::SageMaker::Device": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-device.html",
    "Properties": {
      "Device": "Device",
      "DeviceFleetName": "String",
      "Tags": "Tag"
    }
  },
  "AWS::SageMaker::DeviceFleet": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-devicefleet.html",
    "Properties": {
      "Description": "String",
      "DeviceFleetName": "String",
      "OutputConfig": "EdgeOutputConfig",
      "RoleArn": "String",
      "Tags": "Tag"
    }
  },
  "AWS::SageMaker::Domain": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-domain.html",
    "Properties": {
      "AppNetworkAccessType": "String",
      "AppSecurityGroupManagement": "String",
      "AuthMode": "String",
      "DefaultSpaceSettings": "DefaultSpaceSettings",
      "DefaultUserSettings": "UserSettings",
      "DomainName": "String",
      "DomainSettings": "DomainSettings",
      "KmsKeyId": "String",
      "SubnetIds": "String",
      "Tags": "Tag",
      "VpcId": "String"
    }
  },
  "AWS::SageMaker::Endpoint": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-endpoint.html",
    "Properties": {
      "DeploymentConfig": "DeploymentConfig",
      "EndpointConfigName": "String",
      "EndpointName": "String",
      "ExcludeRetainedVariantProperties": "VariantProperty",
      "RetainAllVariantProperties": "Boolean",
      "RetainDeploymentConfig": "Boolean",
      "Tags": "Tag"
    }
  },
  "AWS::SageMaker::EndpointConfig": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-endpointconfig.html",
    "Properties": {
      "AsyncInferenceConfig": "AsyncInferenceConfig",
      "DataCaptureConfig": "DataCaptureConfig",
      "EnableNetworkIsolation": "Boolean",
      "EndpointConfigName": "String",
      "ExecutionRoleArn": "String",
      "ExplainerConfig": "ExplainerConfig",
      "KmsKeyId": "String",
      "ProductionVariants": "ProductionVariant",
      "ShadowProductionVariants": "ProductionVariant",
      "Tags": "Tag",
      "VpcConfig": "VpcConfig"
    }
  },
  "AWS::SageMaker::FeatureGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-featuregroup.html",
    "Properties": {
      "Description": "String",
      "EventTimeFeatureName": "String",
      "FeatureDefinitions": "FeatureDefinition",
      "FeatureGroupName": "String",
      "OfflineStoreConfig": "OfflineStoreConfig",
      "OnlineStoreConfig": "OnlineStoreConfig",
      "RecordIdentifierFeatureName": "String",
      "RoleArn": "String",
      "Tags": "Tag",
      "ThroughputConfig": "ThroughputConfig"
    }
  },
  "AWS::SageMaker::Image": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-image.html",
    "Properties": {
      "ImageDescription": "String",
      "ImageDisplayName": "String",
      "ImageName": "String",
      "ImageRoleArn": "String",
      "Tags": "Tag"
    }
  },
  "AWS::SageMaker::ImageVersion": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-imageversion.html",
    "Properties": {
      "Alias": "String",
      "Aliases": "String",
      "BaseImage": "String",
      "Horovod": "Boolean",
      "ImageName": "String",
      "JobType": "String",
      "MLFramework": "String",
      "Processor": "String",
      "ProgrammingLang": "String",
      "ReleaseNotes": "String",
      "VendorGuidance": "String"
    }
  },
  "AWS::SageMaker::InferenceComponent": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferencecomponent.html",
    "Properties": {
      "EndpointArn": "String",
      "EndpointName": "String",
      "InferenceComponentName": "String",
      "RuntimeConfig": "InferenceComponentRuntimeConfig",
      "Specification": "InferenceComponentSpecification",
      "Tags": "Tag",
      "VariantName": "String"
    }
  },
  "AWS::SageMaker::InferenceExperiment": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferenceexperiment.html",
    "Properties": {
      "DataStorageConfig": "DataStorageConfig",
      "Description": "String",
      "DesiredState": "String",
      "EndpointName": "String",
      "KmsKey": "String",
      "ModelVariants": "ModelVariantConfig",
      "Name": "String",
      "RoleArn": "String",
      "Schedule": "InferenceExperimentSchedule",
      "ShadowModeConfig": "ShadowModeConfig",
      "StatusReason": "String",
      "Tags": "Tag",
      "Type": "String"
    }
  },
  "AWS::SageMaker::MlflowTrackingServer": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-mlflowtrackingserver.html",
    "Properties": {
      "ArtifactStoreUri": "String",
      "AutomaticModelRegistration": "Boolean",
      "MlflowVersion": "String",
      "RoleArn": "String",
      "Tags": "Tag",
      "TrackingServerName": "String",
      "TrackingServerSize": "String",
      "WeeklyMaintenanceWindowStart": "String"
    }
  },
  "AWS::SageMaker::Model": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-model.html",
    "Properties": {
      "Containers": "ContainerDefinition",
      "EnableNetworkIsolation": "Boolean",
      "ExecutionRoleArn": "String",
      "InferenceExecutionConfig": "InferenceExecutionConfig",
      "ModelName": "String",
      "PrimaryContainer": "ContainerDefinition",
      "Tags": "Tag",
      "VpcConfig": "VpcConfig"
    }
  },
  "AWS::SageMaker::ModelBiasJobDefinition": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelbiasjobdefinition.html",
    "Properties": {
      "EndpointName": "String",
      "JobDefinitionName": "String",
      "JobResources": "MonitoringResources",
      "ModelBiasAppSpecification": "ModelBiasAppSpecification",
      "ModelBiasBaselineConfig": "ModelBiasBaselineConfig",
      "ModelBiasJobInput": "ModelBiasJobInput",
      "ModelBiasJobOutputConfig": "MonitoringOutputConfig",
      "NetworkConfig": "NetworkConfig",
      "RoleArn": "String",
      "StoppingCondition": "StoppingCondition",
      "Tags": "Tag"
    }
  },
  "AWS::SageMaker::ModelCard": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelcard.html",
    "Properties": {
      "Content": "Content",
      "CreatedBy": "UserContext",
      "LastModifiedBy": "UserContext",
      "ModelCardName": "String",
      "ModelCardStatus": "String",
      "SecurityConfig": "SecurityConfig",
      "Tags": "Tag"
    }
  },
  "AWS::SageMaker::ModelExplainabilityJobDefinition": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelexplainabilityjobdefinition.html",
    "Properties": {
      "EndpointName": "String",
      "JobDefinitionName": "String",
      "JobResources": "MonitoringResources",
      "ModelExplainabilityAppSpecification": "ModelExplainabilityAppSpecification",
      "ModelExplainabilityBaselineConfig": "ModelExplainabilityBaselineConfig",
      "ModelExplainabilityJobInput": "ModelExplainabilityJobInput",
      "ModelExplainabilityJobOutputConfig": "MonitoringOutputConfig",
      "NetworkConfig": "NetworkConfig",
      "RoleArn": "String",
      "StoppingCondition": "StoppingCondition",
      "Tags": "Tag"
    }
  },
  "AWS::SageMaker::ModelPackage": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelpackage.html",
    "Properties": {
      "AdditionalInferenceSpecifications": "AdditionalInferenceSpecificationDefinition",
      "AdditionalInferenceSpecificationsToAdd": "AdditionalInferenceSpecificationDefinition",
      "ApprovalDescription": "String",
      "CertifyForMarketplace": "Boolean",
      "ClientToken": "String",
      "CustomerMetadataProperties": "Map",
      "Domain": "String",
      "DriftCheckBaselines": "DriftCheckBaselines",
      "InferenceSpecification": "InferenceSpecification",
      "LastModifiedTime": "String",
      "MetadataProperties": "MetadataProperties",
      "ModelApprovalStatus": "String",
      "ModelCard": "ModelCard",
      "ModelMetrics": "ModelMetrics",
      "ModelPackageDescription": "String",
      "ModelPackageGroupName": "String",
      "ModelPackageName": "String",
      "ModelPackageStatusDetails": "ModelPackageStatusDetails",
      "ModelPackageVersion": "Integer",
      "SamplePayloadUrl": "String",
      "SecurityConfig": "SecurityConfig",
      "SkipModelValidation": "String",
      "SourceAlgorithmSpecification": "SourceAlgorithmSpecification",
      "SourceUri": "String",
      "Tags": "Tag",
      "Task": "String",
      "ValidationSpecification": "ValidationSpecification"
    }
  },
  "AWS::SageMaker::ModelPackageGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelpackagegroup.html",
    "Properties": {
      "ModelPackageGroupDescription": "String",
      "ModelPackageGroupName": "String",
      "ModelPackageGroupPolicy": "Json",
      "Tags": "Tag"
    }
  },
  "AWS::SageMaker::ModelQualityJobDefinition": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelqualityjobdefinition.html",
    "Properties": {
      "EndpointName": "String",
      "JobDefinitionName": "String",
      "JobResources": "MonitoringResources",
      "ModelQualityAppSpecification": "ModelQualityAppSpecification",
      "ModelQualityBaselineConfig": "ModelQualityBaselineConfig",
      "ModelQualityJobInput": "ModelQualityJobInput",
      "ModelQualityJobOutputConfig": "MonitoringOutputConfig",
      "NetworkConfig": "NetworkConfig",
      "RoleArn": "String",
      "StoppingCondition": "StoppingCondition",
      "Tags": "Tag"
    }
  },
  "AWS::SageMaker::MonitoringSchedule": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-monitoringschedule.html",
    "Properties": {
      "EndpointName": "String",
      "FailureReason": "String",
      "LastMonitoringExecutionSummary": "MonitoringExecutionSummary",
      "MonitoringScheduleConfig": "MonitoringScheduleConfig",
      "MonitoringScheduleName": "String",
      "MonitoringScheduleStatus": "String",
      "Tags": "Tag"
    }
  },
  "AWS::SageMaker::NotebookInstance": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html",
    "Properties": {
      "AcceleratorTypes": "String",
      "AdditionalCodeRepositories": "String",
      "DefaultCodeRepository": "String",
      "DirectInternetAccess": "String",
      "InstanceMetadataServiceConfiguration": "InstanceMetadataServiceConfiguration",
      "InstanceType": "String",
      "KmsKeyId": "String",
      "LifecycleConfigName": "String",
      "NotebookInstanceName": "String",
      "PlatformIdentifier": "String",
      "RoleArn": "String",
      "RootAccess": "String",
      "SecurityGroupIds": "String",
      "SubnetId": "String",
      "Tags": "Tag",
      "VolumeSizeInGB": "Integer"
    }
  },
  "AWS::SageMaker::NotebookInstanceLifecycleConfig": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstancelifecycleconfig.html",
    "Properties": {
      "NotebookInstanceLifecycleConfigName": "String",
      "OnCreate": "NotebookInstanceLifecycleHook",
      "OnStart": "NotebookInstanceLifecycleHook"
    }
  },
  "AWS::SageMaker::Pipeline": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-pipeline.html",
    "Properties": {
      "ParallelismConfiguration": "ParallelismConfiguration",
      "PipelineDefinition": "PipelineDefinition",
      "PipelineDescription": "String",
      "PipelineDisplayName": "String",
      "PipelineName": "String",
      "RoleArn": "String",
      "Tags": "Tag"
    }
  },
  "AWS::SageMaker::Project": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-project.html",
    "Properties": {
      "ProjectDescription": "String",
      "ProjectName": "String",
      "ServiceCatalogProvisionedProductDetails": "ServiceCatalogProvisionedProductDetails",
      "ServiceCatalogProvisioningDetails": "ServiceCatalogProvisioningDetails",
      "Tags": "Tag"
    }
  },
  "AWS::SageMaker::Space": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-space.html",
    "Properties": {
      "DomainId": "String",
      "OwnershipSettings": "OwnershipSettings",
      "SpaceDisplayName": "String",
      "SpaceName": "String",
      "SpaceSettings": "SpaceSettings",
      "SpaceSharingSettings": "SpaceSharingSettings",
      "Tags": "Tag"
    }
  },
  "AWS::SageMaker::StudioLifecycleConfig": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-studiolifecycleconfig.html",
    "Properties": {
      "StudioLifecycleConfigAppType": "String",
      "StudioLifecycleConfigContent": "String",
      "StudioLifecycleConfigName": "String",
      "Tags": "Tag"
    }
  },
  "AWS::SageMaker::UserProfile": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-userprofile.html",
    "Properties": {
      "DomainId": "String",
      "SingleSignOnUserIdentifier": "String",
      "SingleSignOnUserValue": "String",
      "Tags": "Tag",
      "UserProfileName": "String",
      "UserSettings": "UserSettings"
    }
  },
  "AWS::SageMaker::Workteam": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-workteam.html",
    "Properties": {
      "Description": "String",
      "MemberDefinitions": "MemberDefinition",
      "NotificationConfiguration": "NotificationConfiguration",
      "Tags": "Tag",
      "WorkforceName": "String",
      "WorkteamName": "String"
    }
  },
  "AWS::Scheduler::Schedule": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-scheduler-schedule.html",
    "Properties": {
      "Description": "String",
      "EndDate": "String",
      "FlexibleTimeWindow": "FlexibleTimeWindow",
      "GroupName": "String",
      "KmsKeyArn": "String",
      "Name": "String",
      "ScheduleExpression": "String",
      "ScheduleExpressionTimezone": "String",
      "StartDate": "String",
      "State": "String",
      "Target": "Target"
    }
  },
  "AWS::Scheduler::ScheduleGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-scheduler-schedulegroup.html",
    "Properties": {
      "Name": "String",
      "Tags": "Tag"
    }
  },
  "AWS::SecretsManager::ResourcePolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-resourcepolicy.html",
    "Properties": {
      "BlockPublicPolicy": "Boolean",
      "ResourcePolicy": "Json",
      "SecretId": "String"
    }
  },
  "AWS::SecretsManager::RotationSchedule": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-rotationschedule.html",
    "Properties": {
      "HostedRotationLambda": "HostedRotationLambda",
      "RotateImmediatelyOnUpdate": "Boolean",
      "RotationLambdaARN": "String",
      "RotationRules": "RotationRules",
      "SecretId": "String"
    }
  },
  "AWS::SecretsManager::Secret": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html",
    "Properties": {
      "Description": "String",
      "GenerateSecretString": "GenerateSecretString",
      "KmsKeyId": "String",
      "Name": "String",
      "ReplicaRegions": "ReplicaRegion",
      "SecretString": "String",
      "Tags": "Tag"
    }
  },
  "AWS::SecretsManager::SecretTargetAttachment": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secrettargetattachment.html",
    "Properties": {
      "SecretId": "String",
      "TargetId": "String",
      "TargetType": "String"
    }
  },
  "AWS::SecurityHub::AutomationRule": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-automationrule.html",
    "Properties": {
      "Actions": "AutomationRulesAction",
      "Criteria": "AutomationRulesFindingFilters",
      "Description": "String",
      "IsTerminal": "Boolean",
      "RuleName": "String",
      "RuleOrder": "Integer",
      "RuleStatus": "String",
      "Tags": "Map"
    }
  },
  "AWS::SecurityHub::ConfigurationPolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-configurationpolicy.html",
    "Properties": {
      "ConfigurationPolicy": "Policy",
      "Description": "String",
      "Name": "String",
      "Tags": "Map"
    }
  },
  "AWS::SecurityHub::DelegatedAdmin": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-delegatedadmin.html",
    "Properties": {
      "AdminAccountId": "String"
    }
  },
  "AWS::SecurityHub::FindingAggregator": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-findingaggregator.html",
    "Properties": {
      "RegionLinkingMode": "String",
      "Regions": "String"
    }
  },
  "AWS::SecurityHub::Hub": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-hub.html",
    "Properties": {
      "AutoEnableControls": "Boolean",
      "ControlFindingGenerator": "String",
      "EnableDefaultStandards": "Boolean",
      "Tags": "Map"
    }
  },
  "AWS::SecurityHub::Insight": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-insight.html",
    "Properties": {
      "Filters": "AwsSecurityFindingFilters",
      "GroupByAttribute": "String",
      "Name": "String"
    }
  },
  "AWS::SecurityHub::OrganizationConfiguration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-organizationconfiguration.html",
    "Properties": {
      "AutoEnable": "Boolean",
      "AutoEnableStandards": "String",
      "ConfigurationType": "String"
    }
  },
  "AWS::SecurityHub::PolicyAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-policyassociation.html",
    "Properties": {
      "ConfigurationPolicyId": "String",
      "TargetId": "String",
      "TargetType": "String"
    }
  },
  "AWS::SecurityHub::ProductSubscription": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-productsubscription.html",
    "Properties": {
      "ProductArn": "String"
    }
  },
  "AWS::SecurityHub::SecurityControl": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-securitycontrol.html",
    "Properties": {
      "LastUpdateReason": "String",
      "Parameters": "Map",
      "SecurityControlArn": "String",
      "SecurityControlId": "String"
    }
  },
  "AWS::SecurityHub::Standard": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-standard.html",
    "Properties": {
      "DisabledStandardsControls": "StandardsControl",
      "StandardsArn": "String"
    }
  },
  "AWS::SecurityLake::AwsLogSource": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securitylake-awslogsource.html",
    "Properties": {
      "Accounts": "String",
      "DataLakeArn": "String",
      "SourceName": "String",
      "SourceVersion": "String"
    }
  },
  "AWS::SecurityLake::DataLake": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securitylake-datalake.html",
    "Properties": {
      "EncryptionConfiguration": "EncryptionConfiguration",
      "LifecycleConfiguration": "LifecycleConfiguration",
      "MetaStoreManagerRoleArn": "String",
      "ReplicationConfiguration": "ReplicationConfiguration",
      "Tags": "Tag"
    }
  },
  "AWS::SecurityLake::Subscriber": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securitylake-subscriber.html",
    "Properties": {
      "AccessTypes": "String",
      "DataLakeArn": "String",
      "Sources": "Source",
      "SubscriberDescription": "String",
      "SubscriberIdentity": "SubscriberIdentity",
      "SubscriberName": "String",
      "Tags": "Tag"
    }
  },
  "AWS::SecurityLake::SubscriberNotification": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securitylake-subscribernotification.html",
    "Properties": {
      "NotificationConfiguration": "NotificationConfiguration",
      "SubscriberArn": "String"
    }
  },
  "AWS::ServiceCatalog::AcceptedPortfolioShare": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-acceptedportfolioshare.html",
    "Properties": {
      "AcceptLanguage": "String",
      "PortfolioId": "String"
    }
  },
  "AWS::ServiceCatalog::CloudFormationProduct": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-cloudformationproduct.html",
    "Properties": {
      "AcceptLanguage": "String",
      "Description": "String",
      "Distributor": "String",
      "Name": "String",
      "Owner": "String",
      "ProductType": "String",
      "ProvisioningArtifactParameters": "ProvisioningArtifactProperties",
      "ReplaceProvisioningArtifacts": "Boolean",
      "SourceConnection": "SourceConnection",
      "SupportDescription": "String",
      "SupportEmail": "String",
      "SupportUrl": "String",
      "Tags": "Tag"
    }
  },
  "AWS::ServiceCatalog::CloudFormationProvisionedProduct": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-cloudformationprovisionedproduct.html",
    "Properties": {
      "AcceptLanguage": "String",
      "NotificationArns": "String",
      "PathId": "String",
      "PathName": "String",
      "ProductId": "String",
      "ProductName": "String",
      "ProvisionedProductName": "String",
      "ProvisioningArtifactId": "String",
      "ProvisioningArtifactName": "String",
      "ProvisioningParameters": "ProvisioningParameter",
      "ProvisioningPreferences": "ProvisioningPreferences",
      "Tags": "Tag"
    }
  },
  "AWS::ServiceCatalog::LaunchNotificationConstraint": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-launchnotificationconstraint.html",
    "Properties": {
      "AcceptLanguage": "String",
      "Description": "String",
      "NotificationArns": "String",
      "PortfolioId": "String",
      "ProductId": "String"
    }
  },
  "AWS::ServiceCatalog::LaunchRoleConstraint": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-launchroleconstraint.html",
    "Properties": {
      "AcceptLanguage": "String",
      "Description": "String",
      "LocalRoleName": "String",
      "PortfolioId": "String",
      "ProductId": "String",
      "RoleArn": "String"
    }
  },
  "AWS::ServiceCatalog::LaunchTemplateConstraint": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-launchtemplateconstraint.html",
    "Properties": {
      "AcceptLanguage": "String",
      "Description": "String",
      "PortfolioId": "String",
      "ProductId": "String",
      "Rules": "String"
    }
  },
  "AWS::ServiceCatalog::Portfolio": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-portfolio.html",
    "Properties": {
      "AcceptLanguage": "String",
      "Description": "String",
      "DisplayName": "String",
      "ProviderName": "String",
      "Tags": "Tag"
    }
  },
  "AWS::ServiceCatalog::PortfolioPrincipalAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-portfolioprincipalassociation.html",
    "Properties": {
      "AcceptLanguage": "String",
      "PortfolioId": "String",
      "PrincipalARN": "String",
      "PrincipalType": "String"
    }
  },
  "AWS::ServiceCatalog::PortfolioProductAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-portfolioproductassociation.html",
    "Properties": {
      "AcceptLanguage": "String",
      "PortfolioId": "String",
      "ProductId": "String",
      "SourcePortfolioId": "String"
    }
  },
  "AWS::ServiceCatalog::PortfolioShare": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-portfolioshare.html",
    "Properties": {
      "AcceptLanguage": "String",
      "AccountId": "String",
      "PortfolioId": "String",
      "ShareTagOptions": "Boolean"
    }
  },
  "AWS::ServiceCatalog::ResourceUpdateConstraint": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-resourceupdateconstraint.html",
    "Properties": {
      "AcceptLanguage": "String",
      "Description": "String",
      "PortfolioId": "String",
      "ProductId": "String",
      "TagUpdateOnProvisionedProduct": "String"
    }
  },
  "AWS::ServiceCatalog::ServiceAction": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-serviceaction.html",
    "Properties": {
      "AcceptLanguage": "String",
      "Definition": "DefinitionParameter",
      "DefinitionType": "String",
      "Description": "String",
      "Name": "String"
    }
  },
  "AWS::ServiceCatalog::ServiceActionAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-serviceactionassociation.html",
    "Properties": {
      "ProductId": "String",
      "ProvisioningArtifactId": "String",
      "ServiceActionId": "String"
    }
  },
  "AWS::ServiceCatalog::StackSetConstraint": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-stacksetconstraint.html",
    "Properties": {
      "AcceptLanguage": "String",
      "AccountList": "String",
      "AdminRole": "String",
      "Description": "String",
      "ExecutionRole": "String",
      "PortfolioId": "String",
      "ProductId": "String",
      "RegionList": "String",
      "StackInstanceControl": "String"
    }
  },
  "AWS::ServiceCatalog::TagOption": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-tagoption.html",
    "Properties": {
      "Active": "Boolean",
      "Key": "String",
      "Value": "String"
    }
  },
  "AWS::ServiceCatalog::TagOptionAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-tagoptionassociation.html",
    "Properties": {
      "ResourceId": "String",
      "TagOptionId": "String"
    }
  },
  "AWS::ServiceCatalogAppRegistry::Application": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalogappregistry-application.html",
    "Properties": {
      "Description": "String",
      "Name": "String",
      "Tags": "Map"
    }
  },
  "AWS::ServiceCatalogAppRegistry::AttributeGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalogappregistry-attributegroup.html",
    "Properties": {
      "Attributes": "Json",
      "Description": "String",
      "Name": "String",
      "Tags": "Map"
    }
  },
  "AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalogappregistry-attributegroupassociation.html",
    "Properties": {
      "Application": "String",
      "AttributeGroup": "String"
    }
  },
  "AWS::ServiceCatalogAppRegistry::ResourceAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalogappregistry-resourceassociation.html",
    "Properties": {
      "Application": "String",
      "Resource": "String",
      "ResourceType": "String"
    }
  },
  "AWS::ServiceDiscovery::HttpNamespace": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-httpnamespace.html",
    "Properties": {
      "Description": "String",
      "Name": "String",
      "Tags": "Tag"
    }
  },
  "AWS::ServiceDiscovery::Instance": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-instance.html",
    "Properties": {
      "InstanceAttributes": "Json",
      "InstanceId": "String",
      "ServiceId": "String"
    }
  },
  "AWS::ServiceDiscovery::PrivateDnsNamespace": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-privatednsnamespace.html",
    "Properties": {
      "Description": "String",
      "Name": "String",
      "Properties": "Properties",
      "Tags": "Tag",
      "Vpc": "String"
    }
  },
  "AWS::ServiceDiscovery::PublicDnsNamespace": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-publicdnsnamespace.html",
    "Properties": {
      "Description": "String",
      "Name": "String",
      "Properties": "Properties",
      "Tags": "Tag"
    }
  },
  "AWS::ServiceDiscovery::Service": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-service.html",
    "Properties": {
      "Description": "String",
      "DnsConfig": "DnsConfig",
      "HealthCheckConfig": "HealthCheckConfig",
      "HealthCheckCustomConfig": "HealthCheckCustomConfig",
      "Name": "String",
      "NamespaceId": "String",
      "Tags": "Tag",
      "Type": "String"
    }
  },
  "AWS::Shield::DRTAccess": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-shield-drtaccess.html",
    "Properties": {
      "LogBucketList": "String",
      "RoleArn": "String"
    }
  },
  "AWS::Shield::ProactiveEngagement": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-shield-proactiveengagement.html",
    "Properties": {
      "EmergencyContactList": "EmergencyContact",
      "ProactiveEngagementStatus": "String"
    }
  },
  "AWS::Shield::Protection": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-shield-protection.html",
    "Properties": {
      "ApplicationLayerAutomaticResponseConfiguration": "ApplicationLayerAutomaticResponseConfiguration",
      "HealthCheckArns": "String",
      "Name": "String",
      "ResourceArn": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Shield::ProtectionGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-shield-protectiongroup.html",
    "Properties": {
      "Aggregation": "String",
      "Members": "String",
      "Pattern": "String",
      "ProtectionGroupId": "String",
      "ResourceType": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Signer::ProfilePermission": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-signer-profilepermission.html",
    "Properties": {
      "Action": "String",
      "Principal": "String",
      "ProfileName": "String",
      "ProfileVersion": "String",
      "StatementId": "String"
    }
  },
  "AWS::Signer::SigningProfile": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-signer-signingprofile.html",
    "Properties": {
      "PlatformId": "String",
      "SignatureValidityPeriod": "SignatureValidityPeriod",
      "Tags": "Tag"
    }
  },
  "AWS::SimSpaceWeaver::Simulation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-simspaceweaver-simulation.html",
    "Properties": {
      "MaximumDuration": "String",
      "Name": "String",
      "RoleArn": "String",
      "SchemaS3Location": "S3Location",
      "SnapshotS3Location": "S3Location"
    }
  },
  "AWS::StepFunctions::Activity": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-stepfunctions-activity.html",
    "Properties": {
      "EncryptionConfiguration": "EncryptionConfiguration",
      "Name": "String",
      "Tags": "TagsEntry"
    }
  },
  "AWS::StepFunctions::StateMachine": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-stepfunctions-statemachine.html",
    "Properties": {
      "Definition": "Json",
      "DefinitionS3Location": "S3Location",
      "DefinitionString": "String",
      "DefinitionSubstitutions": "Map",
      "EncryptionConfiguration": "EncryptionConfiguration",
      "LoggingConfiguration": "LoggingConfiguration",
      "RoleArn": "String",
      "StateMachineName": "String",
      "StateMachineType": "String",
      "Tags": "TagsEntry",
      "TracingConfiguration": "TracingConfiguration"
    }
  },
  "AWS::StepFunctions::StateMachineAlias": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-stepfunctions-statemachinealias.html",
    "Properties": {
      "DeploymentPreference": "DeploymentPreference",
      "Description": "String",
      "Name": "String",
      "RoutingConfiguration": "RoutingConfigurationVersion"
    }
  },
  "AWS::StepFunctions::StateMachineVersion": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-stepfunctions-statemachineversion.html",
    "Properties": {
      "Description": "String",
      "StateMachineArn": "String",
      "StateMachineRevisionId": "String"
    }
  },
  "AWS::SupportApp::AccountAlias": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-supportapp-accountalias.html",
    "Properties": {
      "AccountAlias": "String"
    }
  },
  "AWS::SupportApp::SlackChannelConfiguration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-supportapp-slackchannelconfiguration.html",
    "Properties": {
      "ChannelId": "String",
      "ChannelName": "String",
      "ChannelRoleArn": "String",
      "NotifyOnAddCorrespondenceToCase": "Boolean",
      "NotifyOnCaseSeverity": "String",
      "NotifyOnCreateOrReopenCase": "Boolean",
      "NotifyOnResolveCase": "Boolean",
      "TeamId": "String"
    }
  },
  "AWS::SupportApp::SlackWorkspaceConfiguration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-supportapp-slackworkspaceconfiguration.html",
    "Properties": {
      "TeamId": "String",
      "VersionId": "String"
    }
  },
  "AWS::Synthetics::Canary": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-synthetics-canary.html",
    "Properties": {
      "ArtifactConfig": "ArtifactConfig",
      "ArtifactS3Location": "String",
      "Code": "Code",
      "ExecutionRoleArn": "String",
      "FailureRetentionPeriod": "Integer",
      "Name": "String",
      "ResourcesToReplicateTags": "String",
      "RunConfig": "RunConfig",
      "RuntimeVersion": "String",
      "Schedule": "Schedule",
      "StartCanaryAfterCreation": "Boolean",
      "SuccessRetentionPeriod": "Integer",
      "Tags": "Tag",
      "VPCConfig": "VPCConfig",
      "VisualReference": "VisualReference"
    }
  },
  "AWS::Synthetics::Group": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-synthetics-group.html",
    "Properties": {
      "Name": "String",
      "ResourceArns": "String",
      "Tags": "Tag"
    }
  },
  "AWS::SystemsManagerSAP::Application": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-systemsmanagersap-application.html",
    "Properties": {
      "ApplicationId": "String",
      "ApplicationType": "String",
      "Credentials": "Credential",
      "DatabaseArn": "String",
      "Instances": "String",
      "SapInstanceNumber": "String",
      "Sid": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Timestream::Database": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-database.html",
    "Properties": {
      "DatabaseName": "String",
      "KmsKeyId": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Timestream::InfluxDBInstance": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-influxdbinstance.html",
    "Properties": {
      "AllocatedStorage": "Integer",
      "Bucket": "String",
      "DbInstanceType": "String",
      "DbParameterGroupIdentifier": "String",
      "DbStorageType": "String",
      "DeploymentType": "String",
      "LogDeliveryConfiguration": "LogDeliveryConfiguration",
      "Name": "String",
      "Organization": "String",
      "Password": "String",
      "PubliclyAccessible": "Boolean",
      "Tags": "Tag",
      "Username": "String",
      "VpcSecurityGroupIds": "String",
      "VpcSubnetIds": "String"
    }
  },
  "AWS::Timestream::ScheduledQuery": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-scheduledquery.html",
    "Properties": {
      "ClientToken": "String",
      "ErrorReportConfiguration": "ErrorReportConfiguration",
      "KmsKeyId": "String",
      "NotificationConfiguration": "NotificationConfiguration",
      "QueryString": "String",
      "ScheduleConfiguration": "ScheduleConfiguration",
      "ScheduledQueryExecutionRoleArn": "String",
      "ScheduledQueryName": "String",
      "Tags": "Tag",
      "TargetConfiguration": "TargetConfiguration"
    }
  },
  "AWS::Timestream::Table": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-table.html",
    "Properties": {
      "DatabaseName": "String",
      "MagneticStoreWriteProperties": "MagneticStoreWriteProperties",
      "RetentionProperties": "RetentionProperties",
      "Schema": "Schema",
      "TableName": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Transfer::Agreement": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-agreement.html",
    "Properties": {
      "AccessRole": "String",
      "BaseDirectory": "String",
      "Description": "String",
      "LocalProfileId": "String",
      "PartnerProfileId": "String",
      "ServerId": "String",
      "Status": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Transfer::Certificate": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-certificate.html",
    "Properties": {
      "ActiveDate": "String",
      "Certificate": "String",
      "CertificateChain": "String",
      "Description": "String",
      "InactiveDate": "String",
      "PrivateKey": "String",
      "Tags": "Tag",
      "Usage": "String"
    }
  },
  "AWS::Transfer::Connector": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-connector.html",
    "Properties": {
      "AccessRole": "String",
      "As2Config": "As2Config",
      "LoggingRole": "String",
      "SecurityPolicyName": "String",
      "SftpConfig": "SftpConfig",
      "Tags": "Tag",
      "Url": "String"
    }
  },
  "AWS::Transfer::Profile": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-profile.html",
    "Properties": {
      "As2Id": "String",
      "CertificateIds": "String",
      "ProfileType": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Transfer::Server": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-server.html",
    "Properties": {
      "Certificate": "String",
      "Domain": "String",
      "EndpointDetails": "EndpointDetails",
      "EndpointType": "String",
      "IdentityProviderDetails": "IdentityProviderDetails",
      "IdentityProviderType": "String",
      "LoggingRole": "String",
      "PostAuthenticationLoginBanner": "String",
      "PreAuthenticationLoginBanner": "String",
      "ProtocolDetails": "ProtocolDetails",
      "Protocols": "Protocol",
      "S3StorageOptions": "S3StorageOptions",
      "SecurityPolicyName": "String",
      "StructuredLogDestinations": "StructuredLogDestination",
      "Tags": "Tag",
      "WorkflowDetails": "WorkflowDetails"
    }
  },
  "AWS::Transfer::User": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-user.html",
    "Properties": {
      "HomeDirectory": "String",
      "HomeDirectoryMappings": "HomeDirectoryMapEntry",
      "HomeDirectoryType": "String",
      "Policy": "String",
      "PosixProfile": "PosixProfile",
      "Role": "String",
      "ServerId": "String",
      "SshPublicKeys": "SshPublicKey",
      "Tags": "Tag",
      "UserName": "String"
    }
  },
  "AWS::Transfer::Workflow": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-workflow.html",
    "Properties": {
      "Description": "String",
      "OnExceptionSteps": "WorkflowStep",
      "Steps": "WorkflowStep",
      "Tags": "Tag"
    }
  },
  "AWS::VerifiedPermissions::IdentitySource": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-verifiedpermissions-identitysource.html",
    "Properties": {
      "Configuration": "IdentitySourceConfiguration",
      "PolicyStoreId": "String",
      "PrincipalEntityType": "String"
    }
  },
  "AWS::VerifiedPermissions::Policy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-verifiedpermissions-policy.html",
    "Properties": {
      "Definition": "PolicyDefinition",
      "PolicyStoreId": "String"
    }
  },
  "AWS::VerifiedPermissions::PolicyStore": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-verifiedpermissions-policystore.html",
    "Properties": {
      "Description": "String",
      "Schema": "SchemaDefinition",
      "ValidationSettings": "ValidationSettings"
    }
  },
  "AWS::VerifiedPermissions::PolicyTemplate": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-verifiedpermissions-policytemplate.html",
    "Properties": {
      "Description": "String",
      "PolicyStoreId": "String",
      "Statement": "String"
    }
  },
  "AWS::VoiceID::Domain": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-voiceid-domain.html",
    "Properties": {
      "Description": "String",
      "Name": "String",
      "ServerSideEncryptionConfiguration": "ServerSideEncryptionConfiguration",
      "Tags": "Tag"
    }
  },
  "AWS::VpcLattice::AccessLogSubscription": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-accesslogsubscription.html",
    "Properties": {
      "DestinationArn": "String",
      "ResourceIdentifier": "String",
      "Tags": "Tag"
    }
  },
  "AWS::VpcLattice::AuthPolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-authpolicy.html",
    "Properties": {
      "Policy": "Json",
      "ResourceIdentifier": "String"
    }
  },
  "AWS::VpcLattice::Listener": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-listener.html",
    "Properties": {
      "DefaultAction": "DefaultAction",
      "Name": "String",
      "Port": "Integer",
      "Protocol": "String",
      "ServiceIdentifier": "String",
      "Tags": "Tag"
    }
  },
  "AWS::VpcLattice::ResourcePolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-resourcepolicy.html",
    "Properties": {
      "Policy": "Json",
      "ResourceArn": "String"
    }
  },
  "AWS::VpcLattice::Rule": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-rule.html",
    "Properties": {
      "Action": "Action",
      "ListenerIdentifier": "String",
      "Match": "Match",
      "Name": "String",
      "Priority": "Integer",
      "ServiceIdentifier": "String",
      "Tags": "Tag"
    }
  },
  "AWS::VpcLattice::Service": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-service.html",
    "Properties": {
      "AuthType": "String",
      "CertificateArn": "String",
      "CustomDomainName": "String",
      "DnsEntry": "DnsEntry",
      "Name": "String",
      "Tags": "Tag"
    }
  },
  "AWS::VpcLattice::ServiceNetwork": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-servicenetwork.html",
    "Properties": {
      "AuthType": "String",
      "Name": "String",
      "Tags": "Tag"
    }
  },
  "AWS::VpcLattice::ServiceNetworkServiceAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-servicenetworkserviceassociation.html",
    "Properties": {
      "DnsEntry": "DnsEntry",
      "ServiceIdentifier": "String",
      "ServiceNetworkIdentifier": "String",
      "Tags": "Tag"
    }
  },
  "AWS::VpcLattice::ServiceNetworkVpcAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-servicenetworkvpcassociation.html",
    "Properties": {
      "SecurityGroupIds": "String",
      "ServiceNetworkIdentifier": "String",
      "Tags": "Tag",
      "VpcIdentifier": "String"
    }
  },
  "AWS::VpcLattice::TargetGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-targetgroup.html",
    "Properties": {
      "Config": "TargetGroupConfig",
      "Name": "String",
      "Tags": "Tag",
      "Targets": "Target",
      "Type": "String"
    }
  },
  "AWS::WAF::ByteMatchSet": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-bytematchset.html",
    "Properties": {
      "ByteMatchTuples": "ByteMatchTuple",
      "Name": "String"
    }
  },
  "AWS::WAF::IPSet": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-ipset.html",
    "Properties": {
      "IPSetDescriptors": "IPSetDescriptor",
      "Name": "String"
    }
  },
  "AWS::WAF::Rule": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-rule.html",
    "Properties": {
      "MetricName": "String",
      "Name": "String",
      "Predicates": "Predicate"
    }
  },
  "AWS::WAF::SizeConstraintSet": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-sizeconstraintset.html",
    "Properties": {
      "Name": "String",
      "SizeConstraints": "SizeConstraint"
    }
  },
  "AWS::WAF::SqlInjectionMatchSet": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-sqlinjectionmatchset.html",
    "Properties": {
      "Name": "String",
      "SqlInjectionMatchTuples": "SqlInjectionMatchTuple"
    }
  },
  "AWS::WAF::WebACL": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-webacl.html",
    "Properties": {
      "DefaultAction": "WafAction",
      "MetricName": "String",
      "Name": "String",
      "Rules": "ActivatedRule"
    }
  },
  "AWS::WAF::XssMatchSet": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-xssmatchset.html",
    "Properties": {
      "Name": "String",
      "XssMatchTuples": "XssMatchTuple"
    }
  },
  "AWS::WAFRegional::ByteMatchSet": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-bytematchset.html",
    "Properties": {
      "ByteMatchTuples": "ByteMatchTuple",
      "Name": "String"
    }
  },
  "AWS::WAFRegional::GeoMatchSet": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-geomatchset.html",
    "Properties": {
      "GeoMatchConstraints": "GeoMatchConstraint",
      "Name": "String"
    }
  },
  "AWS::WAFRegional::IPSet": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-ipset.html",
    "Properties": {
      "IPSetDescriptors": "IPSetDescriptor",
      "Name": "String"
    }
  },
  "AWS::WAFRegional::RateBasedRule": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-ratebasedrule.html",
    "Properties": {
      "MatchPredicates": "Predicate",
      "MetricName": "String",
      "Name": "String",
      "RateKey": "String",
      "RateLimit": "Integer"
    }
  },
  "AWS::WAFRegional::RegexPatternSet": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-regexpatternset.html",
    "Properties": {
      "Name": "String",
      "RegexPatternStrings": "String"
    }
  },
  "AWS::WAFRegional::Rule": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-rule.html",
    "Properties": {
      "MetricName": "String",
      "Name": "String",
      "Predicates": "Predicate"
    }
  },
  "AWS::WAFRegional::SizeConstraintSet": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-sizeconstraintset.html",
    "Properties": {
      "Name": "String",
      "SizeConstraints": "SizeConstraint"
    }
  },
  "AWS::WAFRegional::SqlInjectionMatchSet": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-sqlinjectionmatchset.html",
    "Properties": {
      "Name": "String",
      "SqlInjectionMatchTuples": "SqlInjectionMatchTuple"
    }
  },
  "AWS::WAFRegional::WebACL": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-webacl.html",
    "Properties": {
      "DefaultAction": "Action",
      "MetricName": "String",
      "Name": "String",
      "Rules": "Rule"
    }
  },
  "AWS::WAFRegional::WebACLAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-webaclassociation.html",
    "Properties": {
      "ResourceArn": "String",
      "WebACLId": "String"
    }
  },
  "AWS::WAFRegional::XssMatchSet": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-xssmatchset.html",
    "Properties": {
      "Name": "String",
      "XssMatchTuples": "XssMatchTuple"
    }
  },
  "AWS::WAFv2::IPSet": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-ipset.html",
    "Properties": {
      "Addresses": "String",
      "Description": "String",
      "IPAddressVersion": "String",
      "Name": "String",
      "Scope": "String",
      "Tags": "Tag"
    }
  },
  "AWS::WAFv2::LoggingConfiguration": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-loggingconfiguration.html",
    "Properties": {
      "LogDestinationConfigs": "String",
      "LoggingFilter": "LoggingFilter",
      "RedactedFields": "FieldToMatch",
      "ResourceArn": "String"
    }
  },
  "AWS::WAFv2::RegexPatternSet": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-regexpatternset.html",
    "Properties": {
      "Description": "String",
      "Name": "String",
      "RegularExpressionList": "String",
      "Scope": "String",
      "Tags": "Tag"
    }
  },
  "AWS::WAFv2::RuleGroup": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-rulegroup.html",
    "Properties": {
      "AvailableLabels": "LabelSummary",
      "Capacity": "Integer",
      "ConsumedLabels": "LabelSummary",
      "CustomResponseBodies": "Map",
      "Description": "String",
      "Name": "String",
      "Rules": "Rule",
      "Scope": "String",
      "Tags": "Tag",
      "VisibilityConfig": "VisibilityConfig"
    }
  },
  "AWS::WAFv2::WebACL": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webacl.html",
    "Properties": {
      "AssociationConfig": "AssociationConfig",
      "CaptchaConfig": "CaptchaConfig",
      "ChallengeConfig": "ChallengeConfig",
      "CustomResponseBodies": "Map",
      "DefaultAction": "DefaultAction",
      "Description": "String",
      "Name": "String",
      "Rules": "Rule",
      "Scope": "String",
      "Tags": "Tag",
      "TokenDomains": "String",
      "VisibilityConfig": "VisibilityConfig"
    }
  },
  "AWS::WAFv2::WebACLAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webaclassociation.html",
    "Properties": {
      "ResourceArn": "String",
      "WebACLArn": "String"
    }
  },
  "AWS::Wisdom::Assistant": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-assistant.html",
    "Properties": {
      "Description": "String",
      "Name": "String",
      "ServerSideEncryptionConfiguration": "ServerSideEncryptionConfiguration",
      "Tags": "Tag",
      "Type": "String"
    }
  },
  "AWS::Wisdom::AssistantAssociation": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-assistantassociation.html",
    "Properties": {
      "AssistantId": "String",
      "Association": "AssociationData",
      "AssociationType": "String",
      "Tags": "Tag"
    }
  },
  "AWS::Wisdom::KnowledgeBase": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-knowledgebase.html",
    "Properties": {
      "Description": "String",
      "KnowledgeBaseType": "String",
      "Name": "String",
      "RenderingConfiguration": "RenderingConfiguration",
      "ServerSideEncryptionConfiguration": "ServerSideEncryptionConfiguration",
      "SourceConfiguration": "SourceConfiguration",
      "Tags": "Tag"
    }
  },
  "AWS::WorkSpaces::ConnectionAlias": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-connectionalias.html",
    "Properties": {
      "ConnectionString": "String",
      "Tags": "Tag"
    }
  },
  "AWS::WorkSpaces::Workspace": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-workspace.html",
    "Properties": {
      "BundleId": "String",
      "DirectoryId": "String",
      "RootVolumeEncryptionEnabled": "Boolean",
      "Tags": "Tag",
      "UserName": "String",
      "UserVolumeEncryptionEnabled": "Boolean",
      "VolumeEncryptionKey": "String",
      "WorkspaceProperties": "WorkspaceProperties"
    }
  },
  "AWS::WorkSpaces::WorkspacesPool": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-workspacespool.html",
    "Properties": {
      "ApplicationSettings": "ApplicationSettings",
      "BundleId": "String",
      "Capacity": "Capacity",
      "Description": "String",
      "DirectoryId": "String",
      "PoolName": "String",
      "Tags": "Tag",
      "TimeoutSettings": "TimeoutSettings"
    }
  },
  "AWS::WorkSpacesThinClient::Environment": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesthinclient-environment.html",
    "Properties": {
      "DesiredSoftwareSetId": "String",
      "DesktopArn": "String",
      "DesktopEndpoint": "String",
      "DeviceCreationTags": "Tag",
      "KmsKeyArn": "String",
      "MaintenanceWindow": "MaintenanceWindow",
      "Name": "String",
      "SoftwareSetUpdateMode": "String",
      "SoftwareSetUpdateSchedule": "String",
      "Tags": "Tag"
    }
  },
  "AWS::WorkSpacesWeb::BrowserSettings": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-browsersettings.html",
    "Properties": {
      "AdditionalEncryptionContext": "Map",
      "BrowserPolicy": "String",
      "CustomerManagedKey": "String",
      "Tags": "Tag"
    }
  },
  "AWS::WorkSpacesWeb::IdentityProvider": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-identityprovider.html",
    "Properties": {
      "IdentityProviderDetails": "Map",
      "IdentityProviderName": "String",
      "IdentityProviderType": "String",
      "PortalArn": "String"
    }
  },
  "AWS::WorkSpacesWeb::IpAccessSettings": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-ipaccesssettings.html",
    "Properties": {
      "AdditionalEncryptionContext": "Map",
      "CustomerManagedKey": "String",
      "Description": "String",
      "DisplayName": "String",
      "IpRules": "IpRule",
      "Tags": "Tag"
    }
  },
  "AWS::WorkSpacesWeb::NetworkSettings": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-networksettings.html",
    "Properties": {
      "SecurityGroupIds": "String",
      "SubnetIds": "String",
      "Tags": "Tag",
      "VpcId": "String"
    }
  },
  "AWS::WorkSpacesWeb::Portal": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-portal.html",
    "Properties": {
      "AdditionalEncryptionContext": "Map",
      "AuthenticationType": "String",
      "BrowserSettingsArn": "String",
      "CustomerManagedKey": "String",
      "DisplayName": "String",
      "InstanceType": "String",
      "IpAccessSettingsArn": "String",
      "MaxConcurrentSessions": "Double",
      "NetworkSettingsArn": "String",
      "Tags": "Tag",
      "TrustStoreArn": "String",
      "UserAccessLoggingSettingsArn": "String",
      "UserSettingsArn": "String"
    }
  },
  "AWS::WorkSpacesWeb::TrustStore": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-truststore.html",
    "Properties": {
      "CertificateList": "String",
      "Tags": "Tag"
    }
  },
  "AWS::WorkSpacesWeb::UserAccessLoggingSettings": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-useraccessloggingsettings.html",
    "Properties": {
      "KinesisStreamArn": "String",
      "Tags": "Tag"
    }
  },
  "AWS::WorkSpacesWeb::UserSettings": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-usersettings.html",
    "Properties": {
      "AdditionalEncryptionContext": "Map",
      "CookieSynchronizationConfiguration": "CookieSynchronizationConfiguration",
      "CopyAllowed": "String",
      "CustomerManagedKey": "String",
      "DeepLinkAllowed": "String",
      "DisconnectTimeoutInMinutes": "Double",
      "DownloadAllowed": "String",
      "IdleDisconnectTimeoutInMinutes": "Double",
      "PasteAllowed": "String",
      "PrintAllowed": "String",
      "Tags": "Tag",
      "UploadAllowed": "String"
    }
  },
  "AWS::XRay::Group": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-xray-group.html",
    "Properties": {
      "FilterExpression": "String",
      "GroupName": "String",
      "InsightsConfiguration": "InsightsConfiguration",
      "Tags": "Tag"
    }
  },
  "AWS::XRay::ResourcePolicy": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-xray-resourcepolicy.html",
    "Properties": {
      "BypassPolicyLockoutCheck": "Boolean",
      "PolicyDocument": "String",
      "PolicyName": "String"
    }
  },
  "AWS::XRay::SamplingRule": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-xray-samplingrule.html",
    "Properties": {
      "SamplingRule": "SamplingRule",
      "Tags": "Tag"
    }
  },
  "Alexa::ASK::Skill": {
    "Docs": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ask-skill.html",
    "Properties": {
      "AuthenticationConfiguration": "AuthenticationConfiguration",
      "SkillPackage": "SkillPackage",
      "VendorId": "String"
    }
  }
}