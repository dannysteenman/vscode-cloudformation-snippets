{
    "AWS::ACMPCA::Certificate": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ACMPCA::Certificate",
            "  Properties:",
            "    ApiPassthrough:",
            "    CertificateAuthorityArn: \"${3:String}\" # Required",
            "    CertificateSigningRequest: \"${4:String}\" # Required",
            "    SigningAlgorithm: \"${5:String}\" # Required",
            "    TemplateArn: \"${6:String}\"",
            "    Validity:",
            "      Type: \"${7:String}\"",
            "      Value: ${8:Number}",
            "    ValidityNotBefore:",
            "      Type: \"${8:String}\"",
            "      Value: ${9:Number}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificate.html",
            "Attributes: ",
            "  Certificate",
            "  Arn"
        ],
        "prefix": "acmpca-certificate",
        "scope": "yaml"
    },
    "AWS::ACMPCA::CertificateAuthority": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ACMPCA::CertificateAuthority",
            "  Properties:",
            "    CsrExtensions:",
            "      SubjectInformationAccess:",
            "        -",
            "    KeyAlgorithm: \"${3:String}\" # Required",
            "    KeyStorageSecurityStandard: \"${4:String}\"",
            "    RevocationConfiguration:",
            "    SigningAlgorithm: \"${6:String}\" # Required",
            "    Subject:",
            "      CommonName: \"${7:String}\"",
            "      Country: \"${8:String}\"",
            "      CustomAttributes:",
            "        -",
            "      DistinguishedNameQualifier: \"${10:String}\"",
            "      GenerationQualifier: \"${11:String}\"",
            "      GivenName: \"${12:String}\"",
            "      Initials: \"${13:String}\"",
            "      Locality: \"${14:String}\"",
            "      Organization: \"${15:String}\"",
            "      OrganizationalUnit: \"${16:String}\"",
            "      Pseudonym: \"${17:String}\"",
            "      SerialNumber: \"${18:String}\"",
            "      State: \"${19:String}\"",
            "      Surname: \"${20:String}\"",
            "      Title: \"${21:String}\"",
            "    Tags:",
            "      Tags",
            "    Type: \"${9:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthority.html",
            "Attributes: ",
            "  Arn",
            "  CertificateSigningRequest"
        ],
        "prefix": "acmpca-certificateauthority",
        "scope": "yaml"
    },
    "AWS::ACMPCA::CertificateAuthorityActivation": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ACMPCA::CertificateAuthorityActivation",
            "  Properties:",
            "    Certificate: \"${2:String}\" # Required",
            "    CertificateAuthorityArn: \"${3:String}\" # Required",
            "    CertificateChain: \"${4:String}\"",
            "    Status: \"${5:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthorityactivation.html",
            "Attributes: ",
            "  CompleteCertificateChain"
        ],
        "prefix": "acmpca-certificateauthorityactivation",
        "scope": "yaml"
    },
    "AWS::ACMPCA::Permission": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ACMPCA::Permission",
            "  Properties:",
            "    Actions: # Required",
            "      Actions",
            "    CertificateAuthorityArn: \"${3:String}\" # Required",
            "    Principal: \"${4:String}\" # Required",
            "    SourceAccount: \"${5:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-permission.html"
        ],
        "prefix": "acmpca-permission",
        "scope": "yaml"
    },
    "AWS::APS::RuleGroupsNamespace": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::APS::RuleGroupsNamespace",
            "  Properties:",
            "    Data: \"${2:String}\" # Required",
            "    Name: \"${3:String}\" # Required",
            "    Tags:",
            "      Tags",
            "    Workspace: \"${5:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-aps-rulegroupsnamespace.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "aps-rulegroupsnamespace",
        "scope": "yaml"
    },
    "AWS::APS::Workspace": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::APS::Workspace",
            "  Properties:",
            "    AlertManagerDefinition: \"${2:String}\"",
            "    Alias: \"${3:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-aps-workspace.html",
            "Attributes: ",
            "  WorkspaceId",
            "  Arn",
            "  PrometheusEndpoint"
        ],
        "prefix": "aps-workspace",
        "scope": "yaml"
    },
    "AWS::AccessAnalyzer::Analyzer": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AccessAnalyzer::Analyzer",
            "  Properties:",
            "    AnalyzerName: \"${2:String}\"",
            "    ArchiveRules:",
            "      ArchiveRules",
            "    Tags:",
            "      Tags",
            "    Type: \"${5:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-accessanalyzer-analyzer.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "accessanalyzer-analyzer",
        "scope": "yaml"
    },
    "AWS::AmazonMQ::Broker": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AmazonMQ::Broker",
            "  Properties:",
            "    AuthenticationStrategy: \"${2:String}\"",
            "    AutoMinorVersionUpgrade: ${3|false,true|} # Required",
            "    BrokerName: \"${4:String}\" # Required",
            "    Configuration:",
            "      Id: \"${5:String}\"",
            "      Revision: ${6:Number}",
            "    DeploymentMode: \"${6:String}\" # Required",
            "    EncryptionOptions:",
            "      KmsKeyId: \"${7:String}\"",
            "      UseAwsOwnedKey: ${8|false,true|}",
            "    EngineType: \"${8:String}\" # Required",
            "    EngineVersion: \"${9:String}\" # Required",
            "    HostInstanceType: \"${10:String}\" # Required",
            "    LdapServerMetadata:",
            "      Hosts:",
            "        -",
            "      RoleBase: \"${12:String}\"",
            "      RoleName: \"${13:String}\"",
            "      RoleSearchMatching: \"${14:String}\"",
            "      RoleSearchSubtree: ${15|false,true|}",
            "      ServiceAccountPassword: \"${16:String}\"",
            "      ServiceAccountUsername: \"${17:String}\"",
            "      UserBase: \"${18:String}\"",
            "      UserRoleName: \"${19:String}\"",
            "      UserSearchMatching: \"${20:String}\"",
            "      UserSearchSubtree: ${21|false,true|}",
            "    Logs:",
            "      Audit: ${12|false,true|}",
            "      General: ${13|false,true|}",
            "    MaintenanceWindowStartTime:",
            "      DayOfWeek: \"${13:String}\"",
            "      TimeOfDay: \"${14:String}\"",
            "      TimeZone: \"${15:String}\"",
            "    PubliclyAccessible: ${14|false,true|} # Required",
            "    SecurityGroups:",
            "      SecurityGroups",
            "    StorageType: \"${16:String}\"",
            "    SubnetIds:",
            "      SubnetIds",
            "    Tags:",
            "      Tags",
            "    Users: # Required",
            "      Users"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html",
            "Attributes: ",
            "  IpAddresses",
            "  OpenWireEndpoints",
            "  ConfigurationRevision",
            "  StompEndpoints",
            "  MqttEndpoints",
            "  AmqpEndpoints",
            "  Arn",
            "  ConfigurationId",
            "  WssEndpoints"
        ],
        "prefix": "amazonmq-broker",
        "scope": "yaml"
    },
    "AWS::AmazonMQ::Configuration": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AmazonMQ::Configuration",
            "  Properties:",
            "    AuthenticationStrategy: \"${2:String}\"",
            "    Data: \"${3:String}\" # Required",
            "    Description: \"${4:String}\"",
            "    EngineType: \"${5:String}\" # Required",
            "    EngineVersion: \"${6:String}\" # Required",
            "    Name: \"${7:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-configuration.html",
            "Attributes: ",
            "  Revision",
            "  Id",
            "  Arn"
        ],
        "prefix": "amazonmq-configuration",
        "scope": "yaml"
    },
    "AWS::AmazonMQ::ConfigurationAssociation": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AmazonMQ::ConfigurationAssociation",
            "  Properties:",
            "    Broker: \"${2:String}\" # Required",
            "    Configuration:",
            "      Id: \"${3:String}\"",
            "      Revision: ${4:Number}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-configurationassociation.html"
        ],
        "prefix": "amazonmq-configurationassociation",
        "scope": "yaml"
    },
    "AWS::Amplify::App": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Amplify::App",
            "  Properties:",
            "    AccessToken: \"${2:String}\"",
            "    AutoBranchCreationConfig:",
            "      AutoBranchCreationPatterns:",
            "        -",
            "      BuildSpec: \"${5:String}\"",
            "      EnableAutoBranchCreation: ${6|false,true|}",
            "      EnableAutoBuild: ${7|false,true|}",
            "      EnablePerformanceMode: ${8|false,true|}",
            "      EnablePullRequestPreview: ${9|false,true|}",
            "      EnvironmentVariables:",
            "        -",
            "      PullRequestEnvironmentName: \"${11:String}\"",
            "      Stage: \"${12:String}\"",
            "    BasicAuthConfig:",
            "      EnableBasicAuth: ${4|false,true|}",
            "      Password: \"${5:String}\"",
            "      Username: \"${6:String}\"",
            "    BuildSpec: \"${5:String}\"",
            "    CustomHeaders: \"${6:String}\"",
            "    CustomRules:",
            "      CustomRules",
            "    Description: \"${8:String}\"",
            "    EnableBranchAutoDeletion: ${9|false,true|}",
            "    EnvironmentVariables:",
            "      EnvironmentVariables",
            "    IAMServiceRole: \"${11:String}\"",
            "    Name: \"${12:String}\" # Required",
            "    OauthToken: \"${13:String}\"",
            "    Repository: \"${14:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-app.html",
            "Attributes: ",
            "  AppId",
            "  AppName",
            "  Arn",
            "  DefaultDomain"
        ],
        "prefix": "amplify-app",
        "scope": "yaml"
    },
    "AWS::Amplify::Branch": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Amplify::Branch",
            "  Properties:",
            "    AppId: \"${2:String}\" # Required",
            "    BasicAuthConfig:",
            "      EnableBasicAuth: ${3|false,true|}",
            "      Password: \"${4:String}\"",
            "      Username: \"${5:String}\"",
            "    BranchName: \"${4:String}\" # Required",
            "    BuildSpec: \"${5:String}\"",
            "    Description: \"${6:String}\"",
            "    EnableAutoBuild: ${7|false,true|}",
            "    EnablePerformanceMode: ${8|false,true|}",
            "    EnablePullRequestPreview: ${9|false,true|}",
            "    EnvironmentVariables:",
            "      EnvironmentVariables",
            "    PullRequestEnvironmentName: \"${11:String}\"",
            "    Stage: \"${12:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-branch.html",
            "Attributes: ",
            "  Arn",
            "  BranchName"
        ],
        "prefix": "amplify-branch",
        "scope": "yaml"
    },
    "AWS::Amplify::Domain": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Amplify::Domain",
            "  Properties:",
            "    AppId: \"${2:String}\" # Required",
            "    AutoSubDomainCreationPatterns:",
            "      AutoSubDomainCreationPatterns",
            "    AutoSubDomainIAMRole: \"${4:String}\"",
            "    DomainName: \"${5:String}\" # Required",
            "    EnableAutoSubDomain: ${6|false,true|}",
            "    SubDomainSettings: # Required",
            "      SubDomainSettings"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-domain.html",
            "Attributes: ",
            "  Arn",
            "  AutoSubDomainCreationPatterns",
            "  AutoSubDomainIAMRole",
            "  CertificateRecord",
            "  DomainName",
            "  DomainStatus",
            "  EnableAutoSubDomain",
            "  StatusReason"
        ],
        "prefix": "amplify-domain",
        "scope": "yaml"
    },
    "AWS::AmplifyUIBuilder::Component": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AmplifyUIBuilder::Component",
            "  Properties:",
            "    BindingProperties:",
            "    Children:",
            "      Children",
            "    CollectionProperties:",
            "    ComponentType: \"${5:String}\" # Required",
            "    Events:",
            "    Name: \"${7:String}\" # Required",
            "    Overrides:",
            "    Properties:",
            "    SchemaVersion: \"${10:String}\"",
            "    SourceId: \"${11:String}\"",
            "    Tags:",
            "    Variants: # Required",
            "      Variants"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplifyuibuilder-component.html",
            "Attributes: ",
            "  AppId",
            "  EnvironmentName",
            "  Id"
        ],
        "prefix": "amplifyuibuilder-component",
        "scope": "yaml"
    },
    "AWS::AmplifyUIBuilder::Theme": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AmplifyUIBuilder::Theme",
            "  Properties:",
            "    Name: \"${2:String}\" # Required",
            "    Overrides:",
            "      Overrides",
            "    Tags:",
            "    Values: # Required",
            "      Values"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplifyuibuilder-theme.html",
            "Attributes: ",
            "  AppId",
            "  CreatedAt",
            "  EnvironmentName",
            "  Id",
            "  ModifiedAt"
        ],
        "prefix": "amplifyuibuilder-theme",
        "scope": "yaml"
    },
    "AWS::ApiGateway::Account": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ApiGateway::Account",
            "  Properties:",
            "    CloudWatchRoleArn: \"${2:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-account.html",
            "Attributes: ",
            "  Id"
        ],
        "prefix": "apigateway-account",
        "scope": "yaml"
    },
    "AWS::ApiGateway::ApiKey": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ApiGateway::ApiKey",
            "  Properties:",
            "    CustomerId: \"${2:String}\"",
            "    Description: \"${3:String}\"",
            "    Enabled: ${4|false,true|}",
            "    GenerateDistinctId: ${5|false,true|}",
            "    Name: \"${6:String}\"",
            "    StageKeys:",
            "      StageKeys",
            "    Tags:",
            "      Tags",
            "    Value: \"${9:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-apikey.html",
            "Attributes: ",
            "  APIKeyId"
        ],
        "prefix": "apigateway-apikey",
        "scope": "yaml"
    },
    "AWS::ApiGateway::Authorizer": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ApiGateway::Authorizer",
            "  Properties:",
            "    AuthType: \"${2:String}\"",
            "    AuthorizerCredentials: \"${3:String}\"",
            "    AuthorizerResultTtlInSeconds: ${4:Number}",
            "    AuthorizerUri: \"${5:String}\"",
            "    IdentitySource: \"${6:String}\"",
            "    IdentityValidationExpression: \"${7:String}\"",
            "    Name: \"${8:String}\" # Required",
            "    ProviderARNs:",
            "      ProviderARNs",
            "    RestApiId: \"${10:String}\" # Required",
            "    Type: \"${11:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-authorizer.html",
            "Attributes: ",
            "  AuthorizerId"
        ],
        "prefix": "apigateway-authorizer",
        "scope": "yaml"
    },
    "AWS::ApiGateway::BasePathMapping": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ApiGateway::BasePathMapping",
            "  Properties:",
            "    BasePath: \"${2:String}\"",
            "    DomainName: \"${3:String}\" # Required",
            "    Id: \"${4:String}\"",
            "    RestApiId: \"${5:String}\"",
            "    Stage: \"${6:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-basepathmapping.html"
        ],
        "prefix": "apigateway-basepathmapping",
        "scope": "yaml"
    },
    "AWS::ApiGateway::ClientCertificate": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ApiGateway::ClientCertificate",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-clientcertificate.html",
            "Attributes: ",
            "  ClientCertificateId"
        ],
        "prefix": "apigateway-clientcertificate",
        "scope": "yaml"
    },
    "AWS::ApiGateway::Deployment": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ApiGateway::Deployment",
            "  Properties:",
            "    DeploymentCanarySettings:",
            "      PercentTraffic: ${2:Number}",
            "      UseStageCache: ${4|false,true|}",
            "    Description: \"${3:String}\"",
            "    RestApiId: \"${4:String}\" # Required",
            "    StageDescription:",
            "      CacheClusterEnabled: ${6|false,true|}",
            "      CacheClusterSize: \"${7:String}\"",
            "      CacheDataEncrypted: ${8|false,true|}",
            "      CacheTtlInSeconds: ${9:Number}",
            "      CachingEnabled: ${10|false,true|}",
            "      ClientCertificateId: \"${12:String}\"",
            "      DataTraceEnabled: ${13|false,true|}",
            "      Description: \"${14:String}\"",
            "      DocumentationVersion: \"${15:String}\"",
            "      LoggingLevel: \"${16:String}\"",
            "      MethodSettings:",
            "        -",
            "      MetricsEnabled: ${18|false,true|}",
            "      Tags:",
            "        -",
            "      ThrottlingBurstLimit: ${20:Number}",
            "      ThrottlingRateLimit: ${21:Number}",
            "      TracingEnabled: ${22|false,true|}",
            "    StageName: \"${6:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-deployment.html",
            "Attributes: ",
            "  DeploymentId"
        ],
        "prefix": "apigateway-deployment",
        "scope": "yaml"
    },
    "AWS::ApiGateway::DocumentationPart": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ApiGateway::DocumentationPart",
            "  Properties:",
            "    Location:",
            "      Method: \"${2:String}\"",
            "      Name: \"${3:String}\"",
            "      Path: \"${4:String}\"",
            "      StatusCode: \"${5:String}\"",
            "      Type: \"${6:String}\"",
            "    Properties: \"${3:String}\" # Required",
            "    RestApiId: \"${4:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-documentationpart.html"
        ],
        "prefix": "apigateway-documentationpart",
        "scope": "yaml"
    },
    "AWS::ApiGateway::DocumentationVersion": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ApiGateway::DocumentationVersion",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    DocumentationVersion: \"${3:String}\" # Required",
            "    RestApiId: \"${4:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-documentationversion.html"
        ],
        "prefix": "apigateway-documentationversion",
        "scope": "yaml"
    },
    "AWS::ApiGateway::DomainName": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ApiGateway::DomainName",
            "  Properties:",
            "    CertificateArn: \"${2:String}\"",
            "    DomainName: \"${3:String}\"",
            "    EndpointConfiguration:",
            "      Types:",
            "        -",
            "    MutualTlsAuthentication:",
            "      TruststoreUri: \"${5:String}\"",
            "      TruststoreVersion: \"${6:String}\"",
            "    OwnershipVerificationCertificateArn: \"${6:String}\"",
            "    RegionalCertificateArn: \"${7:String}\"",
            "    SecurityPolicy: \"${8:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-domainname.html",
            "Attributes: ",
            "  DistributionDomainName",
            "  DistributionHostedZoneId",
            "  RegionalDomainName",
            "  RegionalHostedZoneId"
        ],
        "prefix": "apigateway-domainname",
        "scope": "yaml"
    },
    "AWS::ApiGateway::GatewayResponse": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ApiGateway::GatewayResponse",
            "  Properties:",
            "    ResponseParameters:",
            "    ResponseTemplates:",
            "    ResponseType: \"${4:String}\" # Required",
            "    RestApiId: \"${5:String}\" # Required",
            "    StatusCode: \"${6:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-gatewayresponse.html",
            "Attributes: ",
            "  Id"
        ],
        "prefix": "apigateway-gatewayresponse",
        "scope": "yaml"
    },
    "AWS::ApiGateway::Method": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ApiGateway::Method",
            "  Properties:",
            "    ApiKeyRequired: ${2|false,true|}",
            "    AuthorizationScopes:",
            "      AuthorizationScopes",
            "    AuthorizationType: \"${4:String}\"",
            "    AuthorizerId: \"${5:String}\"",
            "    HttpMethod: \"${6:String}\" # Required",
            "    Integration:",
            "      CacheKeyParameters:",
            "        -",
            "      CacheNamespace: \"${8:String}\"",
            "      ConnectionId: \"${9:String}\"",
            "      ConnectionType: \"${10:String}\"",
            "      ContentHandling: \"${11:String}\"",
            "      Credentials: \"${12:String}\"",
            "      IntegrationHttpMethod: \"${13:String}\"",
            "      IntegrationResponses:",
            "        -",
            "      PassthroughBehavior: \"${15:String}\"",
            "      TimeoutInMillis: ${18:Number}",
            "      Type: \"${19:String}\"",
            "      Uri: \"${20:String}\"",
            "    MethodResponses:",
            "      MethodResponses",
            "    OperationName: \"${9:String}\"",
            "    RequestModels:",
            "    RequestParameters:",
            "    RequestValidatorId: \"${12:String}\"",
            "    ResourceId: \"${13:String}\" # Required",
            "    RestApiId: \"${14:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html"
        ],
        "prefix": "apigateway-method",
        "scope": "yaml"
    },
    "AWS::ApiGateway::Model": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ApiGateway::Model",
            "  Properties:",
            "    ContentType: \"${2:String}\"",
            "    Description: \"${3:String}\"",
            "    Name: \"${4:String}\"",
            "    RestApiId: \"${5:String}\" # Required",
            "    Schema: ${6:JSON}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-model.html"
        ],
        "prefix": "apigateway-model",
        "scope": "yaml"
    },
    "AWS::ApiGateway::RequestValidator": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ApiGateway::RequestValidator",
            "  Properties:",
            "    Name: \"${2:String}\"",
            "    RestApiId: \"${3:String}\" # Required",
            "    ValidateRequestBody: ${4|false,true|}",
            "    ValidateRequestParameters: ${5|false,true|}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-requestvalidator.html",
            "Attributes: ",
            "  RequestValidatorId"
        ],
        "prefix": "apigateway-requestvalidator",
        "scope": "yaml"
    },
    "AWS::ApiGateway::Resource": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ApiGateway::Resource",
            "  Properties:",
            "    ParentId: \"${2:String}\" # Required",
            "    PathPart: \"${3:String}\" # Required",
            "    RestApiId: \"${4:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-resource.html",
            "Attributes: ",
            "  ResourceId"
        ],
        "prefix": "apigateway-resource",
        "scope": "yaml"
    },
    "AWS::ApiGateway::RestApi": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ApiGateway::RestApi",
            "  Properties:",
            "    ApiKeySourceType: \"${2:String}\"",
            "    BinaryMediaTypes:",
            "      BinaryMediaTypes",
            "    Body: ${4:JSON}",
            "    BodyS3Location:",
            "      Bucket: \"${5:String}\"",
            "      ETag: \"${6:String}\"",
            "      Key: \"${7:String}\"",
            "      Version: \"${8:String}\"",
            "    CloneFrom: \"${6:String}\"",
            "    Description: \"${7:String}\"",
            "    DisableExecuteApiEndpoint: ${8|false,true|}",
            "    EndpointConfiguration:",
            "      Types:",
            "        -",
            "      VpcEndpointIds:",
            "        -",
            "    FailOnWarnings: ${10|false,true|}",
            "    MinimumCompressionSize: ${11:Number}",
            "    Mode: \"${12:String}\"",
            "    Name: \"${13:String}\"",
            "    Parameters:",
            "    Policy: ${15:JSON}",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
            "Attributes: ",
            "  RootResourceId"
        ],
        "prefix": "apigateway-restapi",
        "scope": "yaml"
    },
    "AWS::ApiGateway::Stage": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ApiGateway::Stage",
            "  Properties:",
            "    AccessLogSetting:",
            "      DestinationArn: \"${2:String}\"",
            "      Format: \"${3:String}\"",
            "    CacheClusterEnabled: ${3|false,true|}",
            "    CacheClusterSize: \"${4:String}\"",
            "    CanarySetting:",
            "      DeploymentId: \"${5:String}\"",
            "      PercentTraffic: ${6:Number}",
            "      UseStageCache: ${8|false,true|}",
            "    ClientCertificateId: \"${6:String}\"",
            "    DeploymentId: \"${7:String}\"",
            "    Description: \"${8:String}\"",
            "    DocumentationVersion: \"${9:String}\"",
            "    MethodSettings:",
            "      MethodSettings",
            "    RestApiId: \"${11:String}\" # Required",
            "    StageName: \"${12:String}\"",
            "    Tags:",
            "      Tags",
            "    TracingEnabled: ${14|false,true|}",
            "    Variables:"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-stage.html"
        ],
        "prefix": "apigateway-stage",
        "scope": "yaml"
    },
    "AWS::ApiGateway::UsagePlan": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ApiGateway::UsagePlan",
            "  Properties:",
            "    ApiStages:",
            "      ApiStages",
            "    Description: \"${3:String}\"",
            "    Quota:",
            "      Limit: ${4:Number}",
            "      Offset: ${5:Number}",
            "      Period: \"${6:String}\"",
            "    Tags:",
            "      Tags",
            "    Throttle:",
            "      BurstLimit: ${6:Number}",
            "      RateLimit: ${7:Number}",
            "    UsagePlanName: \"${7:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-usageplan.html",
            "Attributes: ",
            "  Id"
        ],
        "prefix": "apigateway-usageplan",
        "scope": "yaml"
    },
    "AWS::ApiGateway::UsagePlanKey": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ApiGateway::UsagePlanKey",
            "  Properties:",
            "    KeyId: \"${2:String}\" # Required",
            "    KeyType: \"${3:String}\" # Required",
            "    UsagePlanId: \"${4:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-usageplankey.html",
            "Attributes: ",
            "  Id"
        ],
        "prefix": "apigateway-usageplankey",
        "scope": "yaml"
    },
    "AWS::ApiGateway::VpcLink": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ApiGateway::VpcLink",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    Name: \"${3:String}\" # Required",
            "    Tags:",
            "      Tags",
            "    TargetArns: # Required",
            "      TargetArns"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-vpclink.html"
        ],
        "prefix": "apigateway-vpclink",
        "scope": "yaml"
    },
    "AWS::ApiGatewayV2::Api": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ApiGatewayV2::Api",
            "  Properties:",
            "    ApiKeySelectionExpression: \"${2:String}\"",
            "    BasePath: \"${3:String}\"",
            "    Body: ${4:JSON}",
            "    BodyS3Location:",
            "      Bucket: \"${5:String}\"",
            "      Etag: \"${6:String}\"",
            "      Key: \"${7:String}\"",
            "      Version: \"${8:String}\"",
            "    CorsConfiguration:",
            "      AllowCredentials: ${6|false,true|}",
            "      AllowHeaders:",
            "        -",
            "      AllowMethods:",
            "        -",
            "      AllowOrigins:",
            "        -",
            "      ExposeHeaders:",
            "        -",
            "      MaxAge: ${11:Number}",
            "    CredentialsArn: \"${7:String}\"",
            "    Description: \"${8:String}\"",
            "    DisableExecuteApiEndpoint: ${9|false,true|}",
            "    DisableSchemaValidation: ${10|false,true|}",
            "    FailOnWarnings: ${11|false,true|}",
            "    Name: \"${12:String}\"",
            "    ProtocolType: \"${13:String}\"",
            "    RouteKey: \"${14:String}\"",
            "    RouteSelectionExpression: \"${15:String}\"",
            "    Tags: ${16:JSON}",
            "    Target: \"${17:String}\"",
            "    Version: \"${18:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-api.html",
            "Attributes: ",
            "  ApiEndpoint"
        ],
        "prefix": "apigatewayv2-api",
        "scope": "yaml"
    },
    "AWS::ApiGatewayV2::ApiGatewayManagedOverrides": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ApiGatewayV2::ApiGatewayManagedOverrides",
            "  Properties:",
            "    ApiId: \"${2:String}\" # Required",
            "    Integration:",
            "      Description: \"${3:String}\"",
            "      IntegrationMethod: \"${4:String}\"",
            "      PayloadFormatVersion: \"${5:String}\"",
            "      TimeoutInMillis: ${6:Number}",
            "    Route:",
            "      AuthorizationScopes:",
            "        -",
            "      AuthorizationType: \"${5:String}\"",
            "      AuthorizerId: \"${6:String}\"",
            "      OperationName: \"${7:String}\"",
            "      Target: \"${8:String}\"",
            "    Stage:",
            "      AutoDeploy: ${6|false,true|}",
            "      Description: \"${8:String}\"",
            "      RouteSettings: ${9:JSON}",
            "      StageVariables: ${10:JSON}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-apigatewaymanagedoverrides.html"
        ],
        "prefix": "apigatewayv2-apigatewaymanagedoverrides",
        "scope": "yaml"
    },
    "AWS::ApiGatewayV2::ApiMapping": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ApiGatewayV2::ApiMapping",
            "  Properties:",
            "    ApiId: \"${2:String}\" # Required",
            "    ApiMappingKey: \"${3:String}\"",
            "    DomainName: \"${4:String}\" # Required",
            "    Stage: \"${5:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-apimapping.html"
        ],
        "prefix": "apigatewayv2-apimapping",
        "scope": "yaml"
    },
    "AWS::ApiGatewayV2::Authorizer": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ApiGatewayV2::Authorizer",
            "  Properties:",
            "    ApiId: \"${2:String}\" # Required",
            "    AuthorizerCredentialsArn: \"${3:String}\"",
            "    AuthorizerPayloadFormatVersion: \"${4:String}\"",
            "    AuthorizerResultTtlInSeconds: ${5:Number}",
            "    AuthorizerType: \"${6:String}\" # Required",
            "    AuthorizerUri: \"${7:String}\"",
            "    EnableSimpleResponses: ${8|false,true|}",
            "    IdentitySource:",
            "      IdentitySource",
            "    IdentityValidationExpression: \"${10:String}\"",
            "    JwtConfiguration:",
            "      Audience:",
            "        -",
            "      Issuer: \"${12:String}\"",
            "    Name: \"${12:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-authorizer.html"
        ],
        "prefix": "apigatewayv2-authorizer",
        "scope": "yaml"
    },
    "AWS::ApiGatewayV2::Deployment": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ApiGatewayV2::Deployment",
            "  Properties:",
            "    ApiId: \"${2:String}\" # Required",
            "    Description: \"${3:String}\"",
            "    StageName: \"${4:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-deployment.html"
        ],
        "prefix": "apigatewayv2-deployment",
        "scope": "yaml"
    },
    "AWS::ApiGatewayV2::DomainName": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ApiGatewayV2::DomainName",
            "  Properties:",
            "    DomainName: \"${2:String}\" # Required",
            "    DomainNameConfigurations:",
            "      DomainNameConfigurations",
            "    MutualTlsAuthentication:",
            "      TruststoreUri: \"${4:String}\"",
            "      TruststoreVersion: \"${5:String}\"",
            "    Tags: ${5:JSON}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-domainname.html",
            "Attributes: ",
            "  RegionalHostedZoneId",
            "  RegionalDomainName"
        ],
        "prefix": "apigatewayv2-domainname",
        "scope": "yaml"
    },
    "AWS::ApiGatewayV2::Integration": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ApiGatewayV2::Integration",
            "  Properties:",
            "    ApiId: \"${2:String}\" # Required",
            "    ConnectionId: \"${3:String}\"",
            "    ConnectionType: \"${4:String}\"",
            "    ContentHandlingStrategy: \"${5:String}\"",
            "    CredentialsArn: \"${6:String}\"",
            "    Description: \"${7:String}\"",
            "    IntegrationMethod: \"${8:String}\"",
            "    IntegrationSubtype: \"${9:String}\"",
            "    IntegrationType: \"${10:String}\" # Required",
            "    IntegrationUri: \"${11:String}\"",
            "    PassthroughBehavior: \"${12:String}\"",
            "    PayloadFormatVersion: \"${13:String}\"",
            "    RequestParameters: ${14:JSON}",
            "    RequestTemplates: ${15:JSON}",
            "    ResponseParameters: ${16:JSON}",
            "    TemplateSelectionExpression: \"${17:String}\"",
            "    TimeoutInMillis: ${18:Number}",
            "    TlsConfig:",
            "      ServerNameToVerify: \"${19:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-integration.html"
        ],
        "prefix": "apigatewayv2-integration",
        "scope": "yaml"
    },
    "AWS::ApiGatewayV2::IntegrationResponse": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ApiGatewayV2::IntegrationResponse",
            "  Properties:",
            "    ApiId: \"${2:String}\" # Required",
            "    ContentHandlingStrategy: \"${3:String}\"",
            "    IntegrationId: \"${4:String}\" # Required",
            "    IntegrationResponseKey: \"${5:String}\" # Required",
            "    ResponseParameters: ${6:JSON}",
            "    ResponseTemplates: ${7:JSON}",
            "    TemplateSelectionExpression: \"${8:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-integrationresponse.html"
        ],
        "prefix": "apigatewayv2-integrationresponse",
        "scope": "yaml"
    },
    "AWS::ApiGatewayV2::Model": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ApiGatewayV2::Model",
            "  Properties:",
            "    ApiId: \"${2:String}\" # Required",
            "    ContentType: \"${3:String}\"",
            "    Description: \"${4:String}\"",
            "    Name: \"${5:String}\" # Required",
            "    Schema: ${6:JSON} # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-model.html"
        ],
        "prefix": "apigatewayv2-model",
        "scope": "yaml"
    },
    "AWS::ApiGatewayV2::Route": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ApiGatewayV2::Route",
            "  Properties:",
            "    ApiId: \"${2:String}\" # Required",
            "    ApiKeyRequired: ${3|false,true|}",
            "    AuthorizationScopes:",
            "      AuthorizationScopes",
            "    AuthorizationType: \"${5:String}\"",
            "    AuthorizerId: \"${6:String}\"",
            "    ModelSelectionExpression: \"${7:String}\"",
            "    OperationName: \"${8:String}\"",
            "    RequestModels: ${9:JSON}",
            "    RequestParameters: ${10:JSON}",
            "    RouteKey: \"${11:String}\" # Required",
            "    RouteResponseSelectionExpression: \"${12:String}\"",
            "    Target: \"${13:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-route.html"
        ],
        "prefix": "apigatewayv2-route",
        "scope": "yaml"
    },
    "AWS::ApiGatewayV2::RouteResponse": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ApiGatewayV2::RouteResponse",
            "  Properties:",
            "    ApiId: \"${2:String}\" # Required",
            "    ModelSelectionExpression: \"${3:String}\"",
            "    ResponseModels: ${4:JSON}",
            "    ResponseParameters: ${5:JSON}",
            "    RouteId: \"${6:String}\" # Required",
            "    RouteResponseKey: \"${7:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-routeresponse.html"
        ],
        "prefix": "apigatewayv2-routeresponse",
        "scope": "yaml"
    },
    "AWS::ApiGatewayV2::Stage": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ApiGatewayV2::Stage",
            "  Properties:",
            "    AccessLogSettings:",
            "      DestinationArn: \"${2:String}\"",
            "      Format: \"${3:String}\"",
            "    AccessPolicyId: \"${3:String}\"",
            "    ApiId: \"${4:String}\" # Required",
            "    AutoDeploy: ${5|false,true|}",
            "    ClientCertificateId: \"${6:String}\"",
            "    DefaultRouteSettings:",
            "      DataTraceEnabled: ${7|false,true|}",
            "      DetailedMetricsEnabled: ${8|false,true|}",
            "      LoggingLevel: \"${9:String}\"",
            "      ThrottlingBurstLimit: ${10:Number}",
            "      ThrottlingRateLimit: ${11:Number}",
            "    DeploymentId: \"${8:String}\"",
            "    Description: \"${9:String}\"",
            "    RouteSettings: ${10:JSON}",
            "    StageName: \"${11:String}\" # Required",
            "    StageVariables: ${12:JSON}",
            "    Tags: ${13:JSON}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-stage.html"
        ],
        "prefix": "apigatewayv2-stage",
        "scope": "yaml"
    },
    "AWS::ApiGatewayV2::VpcLink": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ApiGatewayV2::VpcLink",
            "  Properties:",
            "    Name: \"${2:String}\" # Required",
            "    SecurityGroupIds:",
            "      SecurityGroupIds",
            "    SubnetIds: # Required",
            "      SubnetIds",
            "    Tags: ${5:JSON}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-vpclink.html"
        ],
        "prefix": "apigatewayv2-vpclink",
        "scope": "yaml"
    },
    "AWS::AppConfig::Application": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AppConfig::Application",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    Name: \"${3:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-application.html"
        ],
        "prefix": "appconfig-application",
        "scope": "yaml"
    },
    "AWS::AppConfig::ConfigurationProfile": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AppConfig::ConfigurationProfile",
            "  Properties:",
            "    ApplicationId: \"${2:String}\" # Required",
            "    Description: \"${3:String}\"",
            "    LocationUri: \"${4:String}\" # Required",
            "    Name: \"${5:String}\" # Required",
            "    RetrievalRoleArn: \"${6:String}\"",
            "    Tags:",
            "      Tags",
            "    Type: \"${8:String}\"",
            "    Validators:",
            "      Validators"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-configurationprofile.html"
        ],
        "prefix": "appconfig-configurationprofile",
        "scope": "yaml"
    },
    "AWS::AppConfig::Deployment": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AppConfig::Deployment",
            "  Properties:",
            "    ApplicationId: \"${2:String}\" # Required",
            "    ConfigurationProfileId: \"${3:String}\" # Required",
            "    ConfigurationVersion: \"${4:String}\" # Required",
            "    DeploymentStrategyId: \"${5:String}\" # Required",
            "    Description: \"${6:String}\"",
            "    EnvironmentId: \"${7:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-deployment.html"
        ],
        "prefix": "appconfig-deployment",
        "scope": "yaml"
    },
    "AWS::AppConfig::DeploymentStrategy": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AppConfig::DeploymentStrategy",
            "  Properties:",
            "    DeploymentDurationInMinutes: ${2:Number} # Required",
            "    Description: \"${3:String}\"",
            "    FinalBakeTimeInMinutes: ${4:Number}",
            "    GrowthFactor: ${5:Number} # Required",
            "    GrowthType: \"${6:String}\"",
            "    Name: \"${7:String}\" # Required",
            "    ReplicateTo: \"${8:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-deploymentstrategy.html"
        ],
        "prefix": "appconfig-deploymentstrategy",
        "scope": "yaml"
    },
    "AWS::AppConfig::Environment": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AppConfig::Environment",
            "  Properties:",
            "    ApplicationId: \"${2:String}\" # Required",
            "    Description: \"${3:String}\"",
            "    Monitors:",
            "      Monitors",
            "    Name: \"${5:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-environment.html"
        ],
        "prefix": "appconfig-environment",
        "scope": "yaml"
    },
    "AWS::AppConfig::HostedConfigurationVersion": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AppConfig::HostedConfigurationVersion",
            "  Properties:",
            "    ApplicationId: \"${2:String}\" # Required",
            "    ConfigurationProfileId: \"${3:String}\" # Required",
            "    Content: \"${4:String}\" # Required",
            "    ContentType: \"${5:String}\" # Required",
            "    Description: \"${6:String}\"",
            "    LatestVersionNumber: ${7:Number}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-hostedconfigurationversion.html"
        ],
        "prefix": "appconfig-hostedconfigurationversion",
        "scope": "yaml"
    },
    "AWS::AppFlow::ConnectorProfile": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AppFlow::ConnectorProfile",
            "  Properties:",
            "    ConnectionMode: \"${2:String}\" # Required",
            "    ConnectorProfileConfig:",
            "    ConnectorProfileName: \"${4:String}\" # Required",
            "    ConnectorType: \"${5:String}\" # Required",
            "    KMSArn: \"${6:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appflow-connectorprofile.html",
            "Attributes: ",
            "  ConnectorProfileArn",
            "  CredentialsArn"
        ],
        "prefix": "appflow-connectorprofile",
        "scope": "yaml"
    },
    "AWS::AppFlow::Flow": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AppFlow::Flow",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    DestinationFlowConfigList: # Required",
            "      DestinationFlowConfigList",
            "    FlowName: \"${4:String}\" # Required",
            "    KMSArn: \"${5:String}\"",
            "    SourceFlowConfig:",
            "      ConnectorProfileName: \"${6:String}\"",
            "      ConnectorType: \"${7:String}\"",
            "    Tags:",
            "      Tags",
            "    Tasks: # Required",
            "      Tasks",
            "    TriggerConfig:",
            "      TriggerType: \"${10:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appflow-flow.html",
            "Attributes: ",
            "  FlowArn"
        ],
        "prefix": "appflow-flow",
        "scope": "yaml"
    },
    "AWS::AppIntegrations::DataIntegration": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AppIntegrations::DataIntegration",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    KmsKey: \"${3:String}\" # Required",
            "    Name: \"${4:String}\" # Required",
            "    ScheduleConfig:",
            "      FirstExecutionFrom: \"${5:String}\"",
            "      Object: \"${6:String}\"",
            "      ScheduleExpression: \"${7:String}\"",
            "    SourceURI: \"${6:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appintegrations-dataintegration.html",
            "Attributes: ",
            "  Id",
            "  DataIntegrationArn"
        ],
        "prefix": "appintegrations-dataintegration",
        "scope": "yaml"
    },
    "AWS::AppIntegrations::EventIntegration": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AppIntegrations::EventIntegration",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    EventBridgeBus: \"${3:String}\" # Required",
            "    EventFilter:",
            "      Source: \"${4:String}\"",
            "    Name: \"${5:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appintegrations-eventintegration.html",
            "Attributes: ",
            "  EventIntegrationArn",
            "  Associations"
        ],
        "prefix": "appintegrations-eventintegration",
        "scope": "yaml"
    },
    "AWS::AppMesh::GatewayRoute": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AppMesh::GatewayRoute",
            "  Properties:",
            "    GatewayRouteName: \"${2:String}\"",
            "    MeshName: \"${3:String}\" # Required",
            "    MeshOwner: \"${4:String}\"",
            "    Spec:",
            "      Priority: ${8:Number}",
            "    Tags:",
            "      Tags",
            "    VirtualGatewayName: \"${7:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-gatewayroute.html",
            "Attributes: ",
            "  Uid",
            "  MeshName",
            "  VirtualGatewayName",
            "  MeshOwner",
            "  ResourceOwner",
            "  GatewayRouteName",
            "  Arn"
        ],
        "prefix": "appmesh-gatewayroute",
        "scope": "yaml"
    },
    "AWS::AppMesh::Mesh": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AppMesh::Mesh",
            "  Properties:",
            "    MeshName: \"${2:String}\"",
            "    Spec:",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-mesh.html",
            "Attributes: ",
            "  Uid",
            "  MeshName",
            "  MeshOwner",
            "  ResourceOwner",
            "  Arn"
        ],
        "prefix": "appmesh-mesh",
        "scope": "yaml"
    },
    "AWS::AppMesh::Route": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AppMesh::Route",
            "  Properties:",
            "    MeshName: \"${2:String}\" # Required",
            "    MeshOwner: \"${3:String}\"",
            "    RouteName: \"${4:String}\"",
            "    Spec:",
            "      Priority: ${8:Number}",
            "    Tags:",
            "      Tags",
            "    VirtualRouterName: \"${7:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-route.html",
            "Attributes: ",
            "  Uid",
            "  MeshName",
            "  VirtualRouterName",
            "  MeshOwner",
            "  ResourceOwner",
            "  RouteName",
            "  Arn"
        ],
        "prefix": "appmesh-route",
        "scope": "yaml"
    },
    "AWS::AppMesh::VirtualGateway": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AppMesh::VirtualGateway",
            "  Properties:",
            "    MeshName: \"${2:String}\" # Required",
            "    MeshOwner: \"${3:String}\"",
            "    Spec:",
            "      Listeners:",
            "        -",
            "    Tags:",
            "      Tags",
            "    VirtualGatewayName: \"${6:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-virtualgateway.html",
            "Attributes: ",
            "  Uid",
            "  VirtualGatewayName",
            "  MeshName",
            "  MeshOwner",
            "  ResourceOwner",
            "  Arn"
        ],
        "prefix": "appmesh-virtualgateway",
        "scope": "yaml"
    },
    "AWS::AppMesh::VirtualNode": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AppMesh::VirtualNode",
            "  Properties:",
            "    MeshName: \"${2:String}\" # Required",
            "    MeshOwner: \"${3:String}\"",
            "    Spec:",
            "      Backends:",
            "        -",
            "      Listeners:",
            "        -",
            "    Tags:",
            "      Tags",
            "    VirtualNodeName: \"${6:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-virtualnode.html",
            "Attributes: ",
            "  Uid",
            "  MeshName",
            "  MeshOwner",
            "  ResourceOwner",
            "  Arn",
            "  VirtualNodeName"
        ],
        "prefix": "appmesh-virtualnode",
        "scope": "yaml"
    },
    "AWS::AppMesh::VirtualRouter": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AppMesh::VirtualRouter",
            "  Properties:",
            "    MeshName: \"${2:String}\" # Required",
            "    MeshOwner: \"${3:String}\"",
            "    Spec:",
            "      Listeners:",
            "        -",
            "    Tags:",
            "      Tags",
            "    VirtualRouterName: \"${6:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-virtualrouter.html",
            "Attributes: ",
            "  Uid",
            "  MeshName",
            "  VirtualRouterName",
            "  MeshOwner",
            "  ResourceOwner",
            "  Arn"
        ],
        "prefix": "appmesh-virtualrouter",
        "scope": "yaml"
    },
    "AWS::AppMesh::VirtualService": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AppMesh::VirtualService",
            "  Properties:",
            "    MeshName: \"${2:String}\" # Required",
            "    MeshOwner: \"${3:String}\"",
            "    Spec:",
            "    Tags:",
            "      Tags",
            "    VirtualServiceName: \"${6:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-virtualservice.html",
            "Attributes: ",
            "  Uid",
            "  MeshName",
            "  MeshOwner",
            "  ResourceOwner",
            "  VirtualServiceName",
            "  Arn"
        ],
        "prefix": "appmesh-virtualservice",
        "scope": "yaml"
    },
    "AWS::AppRunner::ObservabilityConfiguration": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AppRunner::ObservabilityConfiguration",
            "  Properties:",
            "    ObservabilityConfigurationName: \"${2:String}\"",
            "    Tags:",
            "      Tags",
            "    TraceConfiguration:",
            "      Vendor: \"${4:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-observabilityconfiguration.html",
            "Attributes: ",
            "  ObservabilityConfigurationArn",
            "  ObservabilityConfigurationRevision",
            "  Latest"
        ],
        "prefix": "apprunner-observabilityconfiguration",
        "scope": "yaml"
    },
    "AWS::AppRunner::Service": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AppRunner::Service",
            "  Properties:",
            "    AutoScalingConfigurationArn: \"${2:String}\"",
            "    EncryptionConfiguration:",
            "      KmsKey: \"${3:String}\"",
            "    HealthCheckConfiguration:",
            "      HealthyThreshold: ${4:Number}",
            "      Interval: ${5:Number}",
            "      Path: \"${6:String}\"",
            "      Protocol: \"${7:String}\"",
            "      Timeout: ${8:Number}",
            "      UnhealthyThreshold: ${9:Number}",
            "    InstanceConfiguration:",
            "      Cpu: \"${5:String}\"",
            "      InstanceRoleArn: \"${6:String}\"",
            "      Memory: \"${7:String}\"",
            "    NetworkConfiguration:",
            "    ObservabilityConfiguration:",
            "      ObservabilityConfigurationArn: \"${7:String}\"",
            "      ObservabilityEnabled: ${8|false,true|}",
            "    ServiceName: \"${8:String}\"",
            "    SourceConfiguration:",
            "      AutoDeploymentsEnabled: ${10|false,true|}",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-service.html",
            "Attributes: ",
            "  ServiceId",
            "  ServiceArn",
            "  ServiceUrl",
            "  Status"
        ],
        "prefix": "apprunner-service",
        "scope": "yaml"
    },
    "AWS::AppRunner::VpcConnector": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AppRunner::VpcConnector",
            "  Properties:",
            "    SecurityGroups:",
            "      SecurityGroups",
            "    Subnets: # Required",
            "      Subnets",
            "    Tags:",
            "      Tags",
            "    VpcConnectorName: \"${5:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-vpcconnector.html",
            "Attributes: ",
            "  VpcConnectorArn",
            "  VpcConnectorRevision"
        ],
        "prefix": "apprunner-vpcconnector",
        "scope": "yaml"
    },
    "AWS::AppStream::AppBlock": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AppStream::AppBlock",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    DisplayName: \"${3:String}\"",
            "    Name: \"${4:String}\" # Required",
            "    SetupScriptDetails:",
            "      ExecutableParameters: \"${5:String}\"",
            "      ExecutablePath: \"${6:String}\"",
            "      TimeoutInSeconds: ${8:Number}",
            "    SourceS3Location:",
            "      S3Bucket: \"${6:String}\"",
            "      S3Key: \"${7:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-appblock.html",
            "Attributes: ",
            "  Arn",
            "  CreatedTime"
        ],
        "prefix": "appstream-appblock",
        "scope": "yaml"
    },
    "AWS::AppStream::Application": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AppStream::Application",
            "  Properties:",
            "    AppBlockArn: \"${2:String}\" # Required",
            "    AttributesToDelete:",
            "      AttributesToDelete",
            "    Description: \"${4:String}\"",
            "    DisplayName: \"${5:String}\"",
            "    IconS3Location:",
            "      S3Bucket: \"${6:String}\"",
            "      S3Key: \"${7:String}\"",
            "    InstanceFamilies: # Required",
            "      InstanceFamilies",
            "    LaunchParameters: \"${8:String}\"",
            "    LaunchPath: \"${9:String}\" # Required",
            "    Name: \"${10:String}\" # Required",
            "    Platforms: # Required",
            "      Platforms",
            "    Tags:",
            "      Tags",
            "    WorkingDirectory: \"${13:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-application.html",
            "Attributes: ",
            "  Arn",
            "  CreatedTime"
        ],
        "prefix": "appstream-application",
        "scope": "yaml"
    },
    "AWS::AppStream::ApplicationEntitlementAssociation": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AppStream::ApplicationEntitlementAssociation",
            "  Properties:",
            "    ApplicationIdentifier: \"${2:String}\" # Required",
            "    EntitlementName: \"${3:String}\" # Required",
            "    StackName: \"${4:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-applicationentitlementassociation.html"
        ],
        "prefix": "appstream-applicationentitlementassociation",
        "scope": "yaml"
    },
    "AWS::AppStream::ApplicationFleetAssociation": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AppStream::ApplicationFleetAssociation",
            "  Properties:",
            "    ApplicationArn: \"${2:String}\" # Required",
            "    FleetName: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-applicationfleetassociation.html"
        ],
        "prefix": "appstream-applicationfleetassociation",
        "scope": "yaml"
    },
    "AWS::AppStream::DirectoryConfig": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AppStream::DirectoryConfig",
            "  Properties:",
            "    DirectoryName: \"${2:String}\" # Required",
            "    OrganizationalUnitDistinguishedNames: # Required",
            "      OrganizationalUnitDistinguishedNames",
            "    ServiceAccountCredentials:",
            "      AccountName: \"${4:String}\"",
            "      AccountPassword: \"${5:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-directoryconfig.html"
        ],
        "prefix": "appstream-directoryconfig",
        "scope": "yaml"
    },
    "AWS::AppStream::Entitlement": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AppStream::Entitlement",
            "  Properties:",
            "    AppVisibility: \"${2:String}\" # Required",
            "    Attributes: # Required",
            "      Attributes",
            "    Description: \"${4:String}\"",
            "    Name: \"${5:String}\" # Required",
            "    StackName: \"${6:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-entitlement.html",
            "Attributes: ",
            "  CreatedTime",
            "  LastModifiedTime"
        ],
        "prefix": "appstream-entitlement",
        "scope": "yaml"
    },
    "AWS::AppStream::Fleet": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AppStream::Fleet",
            "  Properties:",
            "    ComputeCapacity:",
            "      DesiredInstances: ${2:Number}",
            "    Description: \"${3:String}\"",
            "    DisconnectTimeoutInSeconds: ${4:Number}",
            "    DisplayName: \"${5:String}\"",
            "    DomainJoinInfo:",
            "      DirectoryName: \"${6:String}\"",
            "      OrganizationalUnitDistinguishedName: \"${7:String}\"",
            "    EnableDefaultInternetAccess: ${7|false,true|}",
            "    FleetType: \"${8:String}\"",
            "    IamRoleArn: \"${9:String}\"",
            "    IdleDisconnectTimeoutInSeconds: ${10:Number}",
            "    ImageArn: \"${11:String}\"",
            "    ImageName: \"${12:String}\"",
            "    InstanceType: \"${13:String}\" # Required",
            "    MaxConcurrentSessions: ${14:Number}",
            "    MaxUserDurationInSeconds: ${15:Number}",
            "    Name: \"${16:String}\" # Required",
            "    Platform: \"${17:String}\"",
            "    SessionScriptS3Location:",
            "      S3Bucket: \"${18:String}\"",
            "      S3Key: \"${19:String}\"",
            "    StreamView: \"${19:String}\"",
            "    Tags:",
            "      Tags",
            "    UsbDeviceFilterStrings:",
            "      UsbDeviceFilterStrings",
            "    VpcConfig:",
            "      SecurityGroupIds:",
            "        -",
            "      SubnetIds:",
            "        -"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html"
        ],
        "prefix": "appstream-fleet",
        "scope": "yaml"
    },
    "AWS::AppStream::ImageBuilder": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AppStream::ImageBuilder",
            "  Properties:",
            "    AccessEndpoints:",
            "      AccessEndpoints",
            "    AppstreamAgentVersion: \"${3:String}\"",
            "    Description: \"${4:String}\"",
            "    DisplayName: \"${5:String}\"",
            "    DomainJoinInfo:",
            "      DirectoryName: \"${6:String}\"",
            "      OrganizationalUnitDistinguishedName: \"${7:String}\"",
            "    EnableDefaultInternetAccess: ${7|false,true|}",
            "    IamRoleArn: \"${8:String}\"",
            "    ImageArn: \"${9:String}\"",
            "    ImageName: \"${10:String}\"",
            "    InstanceType: \"${11:String}\" # Required",
            "    Name: \"${12:String}\" # Required",
            "    Tags:",
            "      Tags",
            "    VpcConfig:",
            "      SecurityGroupIds:",
            "        -",
            "      SubnetIds:",
            "        -"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-imagebuilder.html",
            "Attributes: ",
            "  StreamingUrl"
        ],
        "prefix": "appstream-imagebuilder",
        "scope": "yaml"
    },
    "AWS::AppStream::Stack": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AppStream::Stack",
            "  Properties:",
            "    AccessEndpoints:",
            "      AccessEndpoints",
            "    ApplicationSettings:",
            "      Enabled: ${3|false,true|}",
            "      SettingsGroup: \"${4:String}\"",
            "    AttributesToDelete:",
            "      AttributesToDelete",
            "    DeleteStorageConnectors: ${5|false,true|}",
            "    Description: \"${6:String}\"",
            "    DisplayName: \"${7:String}\"",
            "    EmbedHostDomains:",
            "      EmbedHostDomains",
            "    FeedbackURL: \"${9:String}\"",
            "    Name: \"${10:String}\"",
            "    RedirectURL: \"${11:String}\"",
            "    StorageConnectors:",
            "      StorageConnectors",
            "    Tags:",
            "      Tags",
            "    UserSettings:",
            "      UserSettings"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stack.html"
        ],
        "prefix": "appstream-stack",
        "scope": "yaml"
    },
    "AWS::AppStream::StackFleetAssociation": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AppStream::StackFleetAssociation",
            "  Properties:",
            "    FleetName: \"${2:String}\" # Required",
            "    StackName: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stackfleetassociation.html"
        ],
        "prefix": "appstream-stackfleetassociation",
        "scope": "yaml"
    },
    "AWS::AppStream::StackUserAssociation": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AppStream::StackUserAssociation",
            "  Properties:",
            "    AuthenticationType: \"${2:String}\" # Required",
            "    SendEmailNotification: ${3|false,true|}",
            "    StackName: \"${4:String}\" # Required",
            "    UserName: \"${5:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stackuserassociation.html"
        ],
        "prefix": "appstream-stackuserassociation",
        "scope": "yaml"
    },
    "AWS::AppStream::User": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AppStream::User",
            "  Properties:",
            "    AuthenticationType: \"${2:String}\" # Required",
            "    FirstName: \"${3:String}\"",
            "    LastName: \"${4:String}\"",
            "    MessageAction: \"${5:String}\"",
            "    UserName: \"${6:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-user.html"
        ],
        "prefix": "appstream-user",
        "scope": "yaml"
    },
    "AWS::AppSync::ApiCache": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AppSync::ApiCache",
            "  Properties:",
            "    ApiCachingBehavior: \"${2:String}\" # Required",
            "    ApiId: \"${3:String}\" # Required",
            "    AtRestEncryptionEnabled: ${4|false,true|}",
            "    TransitEncryptionEnabled: ${5|false,true|}",
            "    Ttl: ${6:Number} # Required",
            "    Type: \"${7:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-apicache.html"
        ],
        "prefix": "appsync-apicache",
        "scope": "yaml"
    },
    "AWS::AppSync::ApiKey": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AppSync::ApiKey",
            "  Properties:",
            "    ApiId: \"${2:String}\" # Required",
            "    ApiKeyId: \"${3:String}\"",
            "    Description: \"${4:String}\"",
            "    Expires: ${5:Number}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-apikey.html",
            "Attributes: ",
            "  ApiKey",
            "  Arn"
        ],
        "prefix": "appsync-apikey",
        "scope": "yaml"
    },
    "AWS::AppSync::DataSource": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AppSync::DataSource",
            "  Properties:",
            "    ApiId: \"${2:String}\" # Required",
            "    Description: \"${3:String}\"",
            "    DynamoDBConfig:",
            "      AwsRegion: \"${4:String}\"",
            "      TableName: \"${6:String}\"",
            "      UseCallerCredentials: ${7|false,true|}",
            "      Versioned: ${8|false,true|}",
            "    ElasticsearchConfig:",
            "      AwsRegion: \"${5:String}\"",
            "      Endpoint: \"${6:String}\"",
            "    HttpConfig:",
            "      Endpoint: \"${7:String}\"",
            "    LambdaConfig:",
            "      LambdaFunctionArn: \"${7:String}\"",
            "    Name: \"${8:String}\" # Required",
            "    OpenSearchServiceConfig:",
            "      AwsRegion: \"${9:String}\"",
            "      Endpoint: \"${10:String}\"",
            "    RelationalDatabaseConfig:",
            "      RelationalDatabaseSourceType: \"${11:String}\"",
            "    ServiceRoleArn: \"${11:String}\"",
            "    Type: \"${12:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-datasource.html",
            "Attributes: ",
            "  DataSourceArn",
            "  Name"
        ],
        "prefix": "appsync-datasource",
        "scope": "yaml"
    },
    "AWS::AppSync::DomainName": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AppSync::DomainName",
            "  Properties:",
            "    CertificateArn: \"${2:String}\" # Required",
            "    Description: \"${3:String}\"",
            "    DomainName: \"${4:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-domainname.html",
            "Attributes: ",
            "  DomainName",
            "  AppSyncDomainName",
            "  HostedZoneId"
        ],
        "prefix": "appsync-domainname",
        "scope": "yaml"
    },
    "AWS::AppSync::DomainNameApiAssociation": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AppSync::DomainNameApiAssociation",
            "  Properties:",
            "    ApiId: \"${2:String}\" # Required",
            "    DomainName: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-domainnameapiassociation.html",
            "Attributes: ",
            "  ApiAssociationIdentifier"
        ],
        "prefix": "appsync-domainnameapiassociation",
        "scope": "yaml"
    },
    "AWS::AppSync::FunctionConfiguration": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AppSync::FunctionConfiguration",
            "  Properties:",
            "    ApiId: \"${2:String}\" # Required",
            "    DataSourceName: \"${3:String}\" # Required",
            "    Description: \"${4:String}\"",
            "    FunctionVersion: \"${5:String}\" # Required",
            "    MaxBatchSize: ${6:Number}",
            "    Name: \"${7:String}\" # Required",
            "    RequestMappingTemplate: \"${8:String}\"",
            "    RequestMappingTemplateS3Location: \"${9:String}\"",
            "    ResponseMappingTemplate: \"${10:String}\"",
            "    ResponseMappingTemplateS3Location: \"${11:String}\"",
            "    SyncConfig:",
            "      ConflictDetection: \"${12:String}\"",
            "      ConflictHandler: \"${13:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html",
            "Attributes: ",
            "  FunctionId",
            "  FunctionArn",
            "  DataSourceName",
            "  Name"
        ],
        "prefix": "appsync-functionconfiguration",
        "scope": "yaml"
    },
    "AWS::AppSync::GraphQLApi": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AppSync::GraphQLApi",
            "  Properties:",
            "    AdditionalAuthenticationProviders:",
            "    AuthenticationType: \"${3:String}\" # Required",
            "    LambdaAuthorizerConfig:",
            "      AuthorizerResultTtlInSeconds: ${4:Number}",
            "      AuthorizerUri: \"${5:String}\"",
            "      IdentityValidationExpression: \"${6:String}\"",
            "    LogConfig:",
            "      CloudWatchLogsRoleArn: \"${5:String}\"",
            "      ExcludeVerboseContent: ${6|false,true|}",
            "      FieldLogLevel: \"${7:String}\"",
            "    Name: \"${6:String}\" # Required",
            "    OpenIDConnectConfig:",
            "      AuthTTL: ${7:Number}",
            "      ClientId: \"${8:String}\"",
            "      IatTTL: ${9:Number}",
            "      Issuer: \"${10:String}\"",
            "    Tags:",
            "    UserPoolConfig:",
            "      AppIdClientRegex: \"${9:String}\"",
            "      AwsRegion: \"${10:String}\"",
            "      DefaultAction: \"${11:String}\"",
            "      UserPoolId: \"${12:String}\"",
            "    XrayEnabled: ${10|false,true|}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlapi.html",
            "Attributes: ",
            "  GraphQLUrl",
            "  Arn",
            "  ApiId"
        ],
        "prefix": "appsync-graphqlapi",
        "scope": "yaml"
    },
    "AWS::AppSync::GraphQLSchema": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AppSync::GraphQLSchema",
            "  Properties:",
            "    ApiId: \"${2:String}\" # Required",
            "    Definition: \"${3:String}\"",
            "    DefinitionS3Location: \"${4:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlschema.html"
        ],
        "prefix": "appsync-graphqlschema",
        "scope": "yaml"
    },
    "AWS::AppSync::Resolver": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AppSync::Resolver",
            "  Properties:",
            "    ApiId: \"${2:String}\" # Required",
            "    CachingConfig:",
            "      CachingKeys:",
            "        -",
            "      Ttl: ${4:Number}",
            "    DataSourceName: \"${4:String}\"",
            "    FieldName: \"${5:String}\" # Required",
            "    Kind: \"${6:String}\"",
            "    MaxBatchSize: ${7:Number}",
            "    PipelineConfig:",
            "      Functions:",
            "        -",
            "    RequestMappingTemplate: \"${9:String}\"",
            "    RequestMappingTemplateS3Location: \"${10:String}\"",
            "    ResponseMappingTemplate: \"${11:String}\"",
            "    ResponseMappingTemplateS3Location: \"${12:String}\"",
            "    SyncConfig:",
            "      ConflictDetection: \"${13:String}\"",
            "      ConflictHandler: \"${14:String}\"",
            "    TypeName: \"${14:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html",
            "Attributes: ",
            "  TypeName",
            "  ResolverArn",
            "  FieldName"
        ],
        "prefix": "appsync-resolver",
        "scope": "yaml"
    },
    "AWS::ApplicationAutoScaling::ScalableTarget": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ApplicationAutoScaling::ScalableTarget",
            "  Properties:",
            "    MaxCapacity: ${2:Number} # Required",
            "    MinCapacity: ${3:Number} # Required",
            "    ResourceId: \"${4:String}\" # Required",
            "    RoleARN: \"${5:String}\" # Required",
            "    ScalableDimension: \"${6:String}\" # Required",
            "    ScheduledActions:",
            "      ScheduledActions",
            "    ServiceNamespace: \"${8:String}\" # Required",
            "    SuspendedState:",
            "      DynamicScalingInSuspended: ${9|false,true|}",
            "      DynamicScalingOutSuspended: ${10|false,true|}",
            "      ScheduledScalingSuspended: ${11|false,true|}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html"
        ],
        "prefix": "applicationautoscaling-scalabletarget",
        "scope": "yaml"
    },
    "AWS::ApplicationAutoScaling::ScalingPolicy": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ApplicationAutoScaling::ScalingPolicy",
            "  Properties:",
            "    PolicyName: \"${2:String}\" # Required",
            "    PolicyType: \"${3:String}\" # Required",
            "    ResourceId: \"${4:String}\"",
            "    ScalableDimension: \"${5:String}\"",
            "    ScalingTargetId: \"${6:String}\"",
            "    ServiceNamespace: \"${7:String}\"",
            "    StepScalingPolicyConfiguration:",
            "      AdjustmentType: \"${8:String}\"",
            "      Cooldown: ${9:Number}",
            "      MetricAggregationType: \"${10:String}\"",
            "      MinAdjustmentMagnitude: ${11:Number}",
            "      StepAdjustments:",
            "        -",
            "    TargetTrackingScalingPolicyConfiguration:",
            "      DisableScaleIn: ${10|false,true|}",
            "      ScaleInCooldown: ${12:Number}",
            "      ScaleOutCooldown: ${13:Number}",
            "      TargetValue: ${14:Number}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html"
        ],
        "prefix": "applicationautoscaling-scalingpolicy",
        "scope": "yaml"
    },
    "AWS::ApplicationInsights::Application": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ApplicationInsights::Application",
            "  Properties:",
            "    AutoConfigurationEnabled: ${2|false,true|}",
            "    CWEMonitorEnabled: ${3|false,true|}",
            "    ComponentMonitoringSettings:",
            "      ComponentMonitoringSettings",
            "    CustomComponents:",
            "      CustomComponents",
            "    LogPatternSets:",
            "      LogPatternSets",
            "    OpsCenterEnabled: ${7|false,true|}",
            "    OpsItemSNSTopicArn: \"${8:String}\"",
            "    ResourceGroupName: \"${9:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationinsights-application.html",
            "Attributes: ",
            "  ApplicationARN"
        ],
        "prefix": "applicationinsights-application",
        "scope": "yaml"
    },
    "AWS::Athena::DataCatalog": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Athena::DataCatalog",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    Name: \"${3:String}\" # Required",
            "    Parameters:",
            "    Tags:",
            "      Tags",
            "    Type: \"${6:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-datacatalog.html"
        ],
        "prefix": "athena-datacatalog",
        "scope": "yaml"
    },
    "AWS::Athena::NamedQuery": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Athena::NamedQuery",
            "  Properties:",
            "    Database: \"${2:String}\" # Required",
            "    Description: \"${3:String}\"",
            "    Name: \"${4:String}\"",
            "    QueryString: \"${5:String}\" # Required",
            "    WorkGroup: \"${6:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-namedquery.html",
            "Attributes: ",
            "  NamedQueryId"
        ],
        "prefix": "athena-namedquery",
        "scope": "yaml"
    },
    "AWS::Athena::PreparedStatement": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Athena::PreparedStatement",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    QueryStatement: \"${3:String}\" # Required",
            "    StatementName: \"${4:String}\" # Required",
            "    WorkGroup: \"${5:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-preparedstatement.html"
        ],
        "prefix": "athena-preparedstatement",
        "scope": "yaml"
    },
    "AWS::Athena::WorkGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Athena::WorkGroup",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    Name: \"${3:String}\" # Required",
            "    RecursiveDeleteOption: ${4|false,true|}",
            "    State: \"${5:String}\"",
            "    Tags:",
            "      Tags",
            "    WorkGroupConfiguration:",
            "      BytesScannedCutoffPerQuery: ${7:Number}",
            "      EnforceWorkGroupConfiguration: ${8|false,true|}",
            "      PublishCloudWatchMetricsEnabled: ${10|false,true|}",
            "      RequesterPaysEnabled: ${11|false,true|}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-workgroup.html",
            "Attributes: ",
            "  WorkGroupConfiguration.EngineVersion.EffectiveEngineVersion",
            "  CreationTime"
        ],
        "prefix": "athena-workgroup",
        "scope": "yaml"
    },
    "AWS::AuditManager::Assessment": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AuditManager::Assessment",
            "  Properties:",
            "    AssessmentReportsDestination:",
            "      Destination: \"${2:String}\"",
            "      DestinationType: \"${3:String}\"",
            "    AwsAccount:",
            "      EmailAddress: \"${3:String}\"",
            "      Id: \"${4:String}\"",
            "      Name: \"${5:String}\"",
            "    Description: \"${4:String}\"",
            "    FrameworkId: \"${5:String}\"",
            "    Name: \"${6:String}\"",
            "    Roles:",
            "      Roles",
            "    Scope:",
            "      AwsAccounts:",
            "        -",
            "      AwsServices:",
            "        -",
            "    Status: \"${9:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-auditmanager-assessment.html",
            "Attributes: ",
            "  AssessmentId",
            "  Arn",
            "  Delegations",
            "  CreationTime"
        ],
        "prefix": "auditmanager-assessment",
        "scope": "yaml"
    },
    "AWS::AutoScaling::AutoScalingGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AutoScaling::AutoScalingGroup",
            "  Properties:",
            "    AutoScalingGroupName: \"${2:String}\"",
            "    AvailabilityZones:",
            "      AvailabilityZones",
            "    CapacityRebalance: ${4|false,true|}",
            "    Context: \"${5:String}\"",
            "    Cooldown: \"${6:String}\"",
            "    DesiredCapacity: \"${7:String}\"",
            "    DesiredCapacityType: \"${8:String}\"",
            "    HealthCheckGracePeriod: ${9:Number}",
            "    HealthCheckType: \"${10:String}\"",
            "    InstanceId: \"${11:String}\"",
            "    LaunchConfigurationName: \"${12:String}\"",
            "    LaunchTemplate:",
            "      LaunchTemplateId: \"${13:String}\"",
            "      LaunchTemplateName: \"${14:String}\"",
            "      Version: \"${15:String}\"",
            "    LifecycleHookSpecificationList:",
            "      LifecycleHookSpecificationList",
            "    LoadBalancerNames:",
            "      LoadBalancerNames",
            "    MaxInstanceLifetime: ${16:Number}",
            "    MaxSize: \"${17:String}\" # Required",
            "    MetricsCollection:",
            "      MetricsCollection",
            "    MinSize: \"${19:String}\" # Required",
            "    MixedInstancesPolicy:",
            "    NewInstancesProtectedFromScaleIn: ${21|false,true|}",
            "    NotificationConfigurations:",
            "      NotificationConfigurations",
            "    PlacementGroup: \"${23:String}\"",
            "    ServiceLinkedRoleARN: \"${24:String}\"",
            "    Tags:",
            "      Tags",
            "    TargetGroupARNs:",
            "      TargetGroupARNs",
            "    TerminationPolicies:",
            "      TerminationPolicies",
            "    VPCZoneIdentifier:",
            "      VPCZoneIdentifier"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html",
            "Attributes: ",
            "  LaunchConfigurationName",
            "  LaunchTemplateSpecification",
            "  MixedInstancesPolicy",
            "  PlacementGroup",
            "  VPCZoneIdentifier"
        ],
        "prefix": "autoscaling-autoscalinggroup",
        "scope": "yaml"
    },
    "AWS::AutoScaling::LaunchConfiguration": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AutoScaling::LaunchConfiguration",
            "  Properties:",
            "    AssociatePublicIpAddress: ${2|false,true|}",
            "    BlockDeviceMappings:",
            "      BlockDeviceMappings",
            "    ClassicLinkVPCId: \"${4:String}\"",
            "    ClassicLinkVPCSecurityGroups:",
            "      ClassicLinkVPCSecurityGroups",
            "    EbsOptimized: ${6|false,true|}",
            "    IamInstanceProfile: \"${7:String}\"",
            "    ImageId: \"${8:String}\" # Required",
            "    InstanceId: \"${9:String}\"",
            "    InstanceMonitoring: ${10|false,true|}",
            "    InstanceType: \"${11:String}\" # Required",
            "    KernelId: \"${12:String}\"",
            "    KeyName: \"${13:String}\"",
            "    LaunchConfigurationName: \"${14:String}\"",
            "    MetadataOptions:",
            "      HttpEndpoint: \"${15:String}\"",
            "      HttpPutResponseHopLimit: ${16:Number}",
            "      HttpTokens: \"${17:String}\"",
            "    PlacementTenancy: \"${16:String}\"",
            "    RamDiskId: \"${17:String}\"",
            "    SecurityGroups:",
            "      SecurityGroups",
            "    SpotPrice: \"${19:String}\"",
            "    UserData: \"${20:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html"
        ],
        "prefix": "autoscaling-launchconfiguration",
        "scope": "yaml"
    },
    "AWS::AutoScaling::LifecycleHook": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AutoScaling::LifecycleHook",
            "  Properties:",
            "    AutoScalingGroupName: \"${2:String}\" # Required",
            "    DefaultResult: \"${3:String}\"",
            "    HeartbeatTimeout: ${4:Number}",
            "    LifecycleHookName: \"${5:String}\"",
            "    LifecycleTransition: \"${6:String}\" # Required",
            "    NotificationMetadata: \"${7:String}\"",
            "    NotificationTargetARN: \"${8:String}\"",
            "    RoleARN: \"${9:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html"
        ],
        "prefix": "autoscaling-lifecyclehook",
        "scope": "yaml"
    },
    "AWS::AutoScaling::ScalingPolicy": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AutoScaling::ScalingPolicy",
            "  Properties:",
            "    AdjustmentType: \"${2:String}\"",
            "    AutoScalingGroupName: \"${3:String}\" # Required",
            "    Cooldown: \"${4:String}\"",
            "    EstimatedInstanceWarmup: ${5:Number}",
            "    MetricAggregationType: \"${6:String}\"",
            "    MinAdjustmentMagnitude: ${7:Number}",
            "    PolicyType: \"${8:String}\"",
            "    PredictiveScalingConfiguration:",
            "      MaxCapacityBreachBehavior: \"${9:String}\"",
            "      MaxCapacityBuffer: ${10:Number}",
            "      MetricSpecifications:",
            "        -",
            "      Mode: \"${12:String}\"",
            "      SchedulingBufferTime: ${13:Number}",
            "    ScalingAdjustment: ${10:Number}",
            "    StepAdjustments:",
            "      StepAdjustments",
            "    TargetTrackingConfiguration:",
            "      DisableScaleIn: ${13|false,true|}",
            "      TargetValue: ${15:Number}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html"
        ],
        "prefix": "autoscaling-scalingpolicy",
        "scope": "yaml"
    },
    "AWS::AutoScaling::ScheduledAction": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AutoScaling::ScheduledAction",
            "  Properties:",
            "    AutoScalingGroupName: \"${2:String}\" # Required",
            "    DesiredCapacity: ${3:Number}",
            "    EndTime: \"${4:String}\"",
            "    MaxSize: ${5:Number}",
            "    MinSize: ${6:Number}",
            "    Recurrence: \"${7:String}\"",
            "    StartTime: \"${8:String}\"",
            "    TimeZone: \"${9:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-scheduledaction.html"
        ],
        "prefix": "autoscaling-scheduledaction",
        "scope": "yaml"
    },
    "AWS::AutoScaling::WarmPool": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AutoScaling::WarmPool",
            "  Properties:",
            "    AutoScalingGroupName: \"${2:String}\" # Required",
            "    InstanceReusePolicy:",
            "      ReuseOnScaleIn: ${3|false,true|}",
            "    MaxGroupPreparedCapacity: ${4:Number}",
            "    MinSize: ${5:Number}",
            "    PoolState: \"${6:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-warmpool.html"
        ],
        "prefix": "autoscaling-warmpool",
        "scope": "yaml"
    },
    "AWS::AutoScalingPlans::ScalingPlan": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::AutoScalingPlans::ScalingPlan",
            "  Properties:",
            "    ApplicationSource:",
            "      CloudFormationStackARN: \"${2:String}\"",
            "      TagFilters:",
            "        -",
            "    ScalingInstructions: # Required",
            "      ScalingInstructions"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscalingplans-scalingplan.html",
            "Attributes: ",
            "  ScalingPlanName",
            "  ScalingPlanVersion"
        ],
        "prefix": "autoscalingplans-scalingplan",
        "scope": "yaml"
    },
    "AWS::Backup::BackupPlan": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Backup::BackupPlan",
            "  Properties:",
            "    BackupPlan:",
            "      AdvancedBackupSettings:",
            "        -",
            "      BackupPlanName: \"${3:String}\"",
            "      BackupPlanRule:",
            "        -",
            "    BackupPlanTags:"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupplan.html",
            "Attributes: ",
            "  BackupPlanArn",
            "  BackupPlanId",
            "  VersionId"
        ],
        "prefix": "backup-backupplan",
        "scope": "yaml"
    },
    "AWS::Backup::BackupSelection": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Backup::BackupSelection",
            "  Properties:",
            "    BackupPlanId: \"${2:String}\" # Required",
            "    BackupSelection:",
            "      Conditions: ${3:JSON}",
            "      IamRoleArn: \"${4:String}\"",
            "      ListOfTags:",
            "        -",
            "      NotResources:",
            "        -",
            "      Resources:",
            "        -",
            "      SelectionName: \"${8:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupselection.html",
            "Attributes: ",
            "  Id",
            "  BackupPlanId",
            "  SelectionId"
        ],
        "prefix": "backup-backupselection",
        "scope": "yaml"
    },
    "AWS::Backup::BackupVault": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Backup::BackupVault",
            "  Properties:",
            "    AccessPolicy: ${2:JSON}",
            "    BackupVaultName: \"${3:String}\" # Required",
            "    BackupVaultTags:",
            "    EncryptionKeyArn: \"${5:String}\"",
            "    LockConfiguration:",
            "      ChangeableForDays: ${6:Number}",
            "      MaxRetentionDays: ${7:Number}",
            "      MinRetentionDays: ${8:Number}",
            "    Notifications:",
            "      BackupVaultEvents:",
            "        -",
            "      SNSTopicArn: \"${8:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html",
            "Attributes: ",
            "  BackupVaultName",
            "  BackupVaultArn"
        ],
        "prefix": "backup-backupvault",
        "scope": "yaml"
    },
    "AWS::Backup::Framework": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Backup::Framework",
            "  Properties:",
            "    FrameworkControls: # Required",
            "      FrameworkControls",
            "    FrameworkDescription: \"${3:String}\"",
            "    FrameworkName: \"${4:String}\"",
            "    FrameworkTags:",
            "      FrameworkTags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-framework.html",
            "Attributes: ",
            "  FrameworkArn",
            "  DeploymentStatus",
            "  CreationTime",
            "  FrameworkStatus"
        ],
        "prefix": "backup-framework",
        "scope": "yaml"
    },
    "AWS::Backup::ReportPlan": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Backup::ReportPlan",
            "  Properties:",
            "    ReportDeliveryChannel: ${2:JSON} # Required",
            "    ReportPlanDescription: \"${3:String}\"",
            "    ReportPlanName: \"${4:String}\"",
            "    ReportPlanTags:",
            "      ReportPlanTags",
            "    ReportSetting: ${6:JSON} # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-reportplan.html",
            "Attributes: ",
            "  ReportPlanArn"
        ],
        "prefix": "backup-reportplan",
        "scope": "yaml"
    },
    "AWS::Batch::ComputeEnvironment": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Batch::ComputeEnvironment",
            "  Properties:",
            "    ComputeEnvironmentName: \"${2:String}\"",
            "    ComputeResources:",
            "      AllocationStrategy: \"${3:String}\"",
            "      BidPercentage: ${4:Number}",
            "      DesiredvCpus: ${5:Number}",
            "      Ec2Configuration:",
            "        -",
            "      Ec2KeyPair: \"${7:String}\"",
            "      ImageId: \"${8:String}\"",
            "      InstanceRole: \"${9:String}\"",
            "      InstanceTypes:",
            "        -",
            "      MaxvCpus: ${12:Number}",
            "      MinvCpus: ${13:Number}",
            "      PlacementGroup: \"${14:String}\"",
            "      SecurityGroupIds:",
            "        -",
            "      SpotIamFleetRole: \"${16:String}\"",
            "      Subnets:",
            "        -",
            "      Type: \"${19:String}\"",
            "      UpdateToLatestImageVersion: ${20|false,true|}",
            "    ReplaceComputeEnvironment: ${4|false,true|}",
            "    ServiceRole: \"${5:String}\"",
            "    State: \"${6:String}\"",
            "    Tags:",
            "    Type: \"${8:String}\" # Required",
            "    UnmanagedvCpus: ${9:Number}",
            "    UpdatePolicy:",
            "      JobExecutionTimeoutMinutes: ${10:Number}",
            "      TerminateJobsOnUpdate: ${11|false,true|}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-computeenvironment.html",
            "Attributes: ",
            "  ComputeEnvironmentArn"
        ],
        "prefix": "batch-computeenvironment",
        "scope": "yaml"
    },
    "AWS::Batch::JobDefinition": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Batch::JobDefinition",
            "  Properties:",
            "    ContainerProperties:",
            "      Command:",
            "        -",
            "      Environment:",
            "        -",
            "      ExecutionRoleArn: \"${4:String}\"",
            "      Image: \"${6:String}\"",
            "      InstanceType: \"${7:String}\"",
            "      JobRoleArn: \"${8:String}\"",
            "      Memory: ${11:Number}",
            "      MountPoints:",
            "        -",
            "      Privileged: ${14|false,true|}",
            "      ReadonlyRootFilesystem: ${15|false,true|}",
            "      ResourceRequirements:",
            "        -",
            "      Secrets:",
            "        -",
            "      Ulimits:",
            "        -",
            "      User: \"${19:String}\"",
            "      Vcpus: ${20:Number}",
            "      Volumes:",
            "        -",
            "    JobDefinitionName: \"${3:String}\"",
            "    NodeProperties:",
            "      MainNode: ${4:Number}",
            "      NodeRangeProperties:",
            "        -",
            "      NumNodes: ${6:Number}",
            "    Parameters: ${5:JSON}",
            "    PlatformCapabilities:",
            "      PlatformCapabilities",
            "    PropagateTags: ${7|false,true|}",
            "    RetryStrategy:",
            "      Attempts: ${8:Number}",
            "      EvaluateOnExit:",
            "        -",
            "    SchedulingPriority: ${9:Number}",
            "    Tags: ${10:JSON}",
            "    Timeout:",
            "      AttemptDurationSeconds: ${11:Number}",
            "    Type: \"${12:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobdefinition.html"
        ],
        "prefix": "batch-jobdefinition",
        "scope": "yaml"
    },
    "AWS::Batch::JobQueue": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Batch::JobQueue",
            "  Properties:",
            "    ComputeEnvironmentOrder: # Required",
            "      ComputeEnvironmentOrder",
            "    JobQueueName: \"${3:String}\"",
            "    Priority: ${4:Number} # Required",
            "    SchedulingPolicyArn: \"${5:String}\"",
            "    State: \"${6:String}\"",
            "    Tags:"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobqueue.html",
            "Attributes: ",
            "  JobQueueArn"
        ],
        "prefix": "batch-jobqueue",
        "scope": "yaml"
    },
    "AWS::Batch::SchedulingPolicy": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Batch::SchedulingPolicy",
            "  Properties:",
            "    FairsharePolicy:",
            "      ComputeReservation: ${2:Number}",
            "      ShareDecaySeconds: ${3:Number}",
            "      ShareDistribution:",
            "        -",
            "    Name: \"${3:String}\"",
            "    Tags:"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-schedulingpolicy.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "batch-schedulingpolicy",
        "scope": "yaml"
    },
    "AWS::BillingConductor::BillingGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::BillingConductor::BillingGroup",
            "  Properties:",
            "    AccountGrouping:",
            "      LinkedAccountIds:",
            "        -",
            "    ComputationPreference:",
            "      PricingPlanArn: \"${3:String}\"",
            "    Description: \"${4:String}\"",
            "    Name: \"${5:String}\" # Required",
            "    PrimaryAccountId: \"${6:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-billingconductor-billinggroup.html",
            "Attributes: ",
            "  Arn",
            "  Size",
            "  Status",
            "  StatusReason",
            "  CreationTime",
            "  LastModifiedTime"
        ],
        "prefix": "billingconductor-billinggroup",
        "scope": "yaml"
    },
    "AWS::BillingConductor::CustomLineItem": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::BillingConductor::CustomLineItem",
            "  Properties:",
            "    BillingGroupArn: \"${2:String}\" # Required",
            "    BillingPeriodRange:",
            "      ExclusiveEndBillingPeriod: \"${3:String}\"",
            "      InclusiveStartBillingPeriod: \"${4:String}\"",
            "    CustomLineItemChargeDetails:",
            "      Type: \"${6:String}\"",
            "    Description: \"${5:String}\"",
            "    Name: \"${6:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-billingconductor-customlineitem.html",
            "Attributes: ",
            "  Arn",
            "  CreationTime",
            "  LastModifiedTime",
            "  AssociationSize",
            "  ProductCode",
            "  CurrencyCode"
        ],
        "prefix": "billingconductor-customlineitem",
        "scope": "yaml"
    },
    "AWS::BillingConductor::PricingPlan": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::BillingConductor::PricingPlan",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    Name: \"${3:String}\" # Required",
            "    PricingRuleArns:",
            "      PricingRuleArns",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-billingconductor-pricingplan.html",
            "Attributes: ",
            "  Arn",
            "  Size",
            "  CreationTime",
            "  LastModifiedTime"
        ],
        "prefix": "billingconductor-pricingplan",
        "scope": "yaml"
    },
    "AWS::BillingConductor::PricingRule": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::BillingConductor::PricingRule",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    ModifierPercentage: ${3:Number} # Required",
            "    Name: \"${4:String}\" # Required",
            "    Scope: \"${5:String}\" # Required",
            "    Service: \"${6:String}\"",
            "    Tags:",
            "      Tags",
            "    Type: \"${8:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-billingconductor-pricingrule.html",
            "Attributes: ",
            "  Arn",
            "  AssociatedPricingPlanCount",
            "  CreationTime",
            "  LastModifiedTime"
        ],
        "prefix": "billingconductor-pricingrule",
        "scope": "yaml"
    },
    "AWS::Budgets::Budget": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Budgets::Budget",
            "  Properties:",
            "    Budget:",
            "      BudgetName: \"${3:String}\"",
            "      BudgetType: \"${4:String}\"",
            "      CostFilters: ${5:JSON}",
            "      PlannedBudgetLimits: ${7:JSON}",
            "      TimeUnit: \"${9:String}\"",
            "    NotificationsWithSubscribers:",
            "      NotificationsWithSubscribers"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-budgets-budget.html"
        ],
        "prefix": "budgets-budget",
        "scope": "yaml"
    },
    "AWS::Budgets::BudgetsAction": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Budgets::BudgetsAction",
            "  Properties:",
            "    ActionThreshold:",
            "      Type: \"${2:String}\"",
            "      Value: ${3:Number}",
            "    ActionType: \"${3:String}\" # Required",
            "    ApprovalModel: \"${4:String}\"",
            "    BudgetName: \"${5:String}\" # Required",
            "    Definition:",
            "    ExecutionRoleArn: \"${7:String}\" # Required",
            "    NotificationType: \"${8:String}\" # Required",
            "    Subscribers: # Required",
            "      Subscribers"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-budgets-budgetsaction.html",
            "Attributes: ",
            "  ActionId"
        ],
        "prefix": "budgets-budgetsaction",
        "scope": "yaml"
    },
    "AWS::CE::AnomalyMonitor": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CE::AnomalyMonitor",
            "  Properties:",
            "    MonitorDimension: \"${2:String}\"",
            "    MonitorName: \"${3:String}\" # Required",
            "    MonitorSpecification: \"${4:String}\"",
            "    MonitorType: \"${5:String}\" # Required",
            "    ResourceTags:",
            "      ResourceTags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ce-anomalymonitor.html",
            "Attributes: ",
            "  MonitorArn",
            "  CreationDate",
            "  LastEvaluatedDate",
            "  LastUpdatedDate",
            "  DimensionalValueCount"
        ],
        "prefix": "ce-anomalymonitor",
        "scope": "yaml"
    },
    "AWS::CE::AnomalySubscription": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CE::AnomalySubscription",
            "  Properties:",
            "    Frequency: \"${2:String}\" # Required",
            "    MonitorArnList: # Required",
            "      MonitorArnList",
            "    ResourceTags:",
            "      ResourceTags",
            "    Subscribers: # Required",
            "      Subscribers",
            "    SubscriptionName: \"${6:String}\" # Required",
            "    Threshold: ${7:Number} # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ce-anomalysubscription.html",
            "Attributes: ",
            "  SubscriptionArn",
            "  AccountId"
        ],
        "prefix": "ce-anomalysubscription",
        "scope": "yaml"
    },
    "AWS::CE::CostCategory": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CE::CostCategory",
            "  Properties:",
            "    DefaultValue: \"${2:String}\"",
            "    Name: \"${3:String}\" # Required",
            "    RuleVersion: \"${4:String}\" # Required",
            "    Rules: \"${5:String}\" # Required",
            "    SplitChargeRules: \"${6:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ce-costcategory.html",
            "Attributes: ",
            "  Arn",
            "  EffectiveStart"
        ],
        "prefix": "ce-costcategory",
        "scope": "yaml"
    },
    "AWS::CUR::ReportDefinition": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CUR::ReportDefinition",
            "  Properties:",
            "    AdditionalArtifacts:",
            "      AdditionalArtifacts",
            "    AdditionalSchemaElements:",
            "      AdditionalSchemaElements",
            "    BillingViewArn: \"${4:String}\"",
            "    Compression: \"${5:String}\" # Required",
            "    Format: \"${6:String}\" # Required",
            "    RefreshClosedReports: ${7|false,true|} # Required",
            "    ReportName: \"${8:String}\" # Required",
            "    ReportVersioning: \"${9:String}\" # Required",
            "    S3Bucket: \"${10:String}\" # Required",
            "    S3Prefix: \"${11:String}\" # Required",
            "    S3Region: \"${12:String}\" # Required",
            "    TimeUnit: \"${13:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cur-reportdefinition.html"
        ],
        "prefix": "cur-reportdefinition",
        "scope": "yaml"
    },
    "AWS::Cassandra::Keyspace": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Cassandra::Keyspace",
            "  Properties:",
            "    KeyspaceName: \"${2:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-keyspace.html"
        ],
        "prefix": "cassandra-keyspace",
        "scope": "yaml"
    },
    "AWS::Cassandra::Table": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Cassandra::Table",
            "  Properties:",
            "    BillingMode:",
            "      Mode: \"${2:String}\"",
            "    ClusteringKeyColumns:",
            "      ClusteringKeyColumns",
            "    DefaultTimeToLive: ${4:Number}",
            "    EncryptionSpecification:",
            "      EncryptionType: \"${5:String}\"",
            "      KmsKeyIdentifier: \"${6:String}\"",
            "    KeyspaceName: \"${6:String}\" # Required",
            "    PartitionKeyColumns: # Required",
            "      PartitionKeyColumns",
            "    PointInTimeRecoveryEnabled: ${8|false,true|}",
            "    RegularColumns:",
            "      RegularColumns",
            "    TableName: \"${10:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html"
        ],
        "prefix": "cassandra-table",
        "scope": "yaml"
    },
    "AWS::CertificateManager::Account": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CertificateManager::Account",
            "  Properties:",
            "    ExpiryEventsConfiguration:",
            "      DaysBeforeExpiry: ${2:Number}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-account.html",
            "Attributes: ",
            "  AccountId"
        ],
        "prefix": "certificatemanager-account",
        "scope": "yaml"
    },
    "AWS::CertificateManager::Certificate": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CertificateManager::Certificate",
            "  Properties:",
            "    CertificateAuthorityArn: \"${2:String}\"",
            "    CertificateTransparencyLoggingPreference: \"${3:String}\"",
            "    DomainName: \"${4:String}\" # Required",
            "    DomainValidationOptions:",
            "      DomainValidationOptions",
            "    SubjectAlternativeNames:",
            "      SubjectAlternativeNames",
            "    Tags:",
            "      Tags",
            "    ValidationMethod: \"${8:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html"
        ],
        "prefix": "certificatemanager-certificate",
        "scope": "yaml"
    },
    "AWS::Chatbot::SlackChannelConfiguration": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Chatbot::SlackChannelConfiguration",
            "  Properties:",
            "    ConfigurationName: \"${2:String}\" # Required",
            "    GuardrailPolicies:",
            "      GuardrailPolicies",
            "    IamRoleArn: \"${4:String}\" # Required",
            "    LoggingLevel: \"${5:String}\"",
            "    SlackChannelId: \"${6:String}\" # Required",
            "    SlackWorkspaceId: \"${7:String}\" # Required",
            "    SnsTopicArns:",
            "      SnsTopicArns",
            "    UserRoleRequired: ${9|false,true|}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "chatbot-slackchannelconfiguration",
        "scope": "yaml"
    },
    "AWS::Cloud9::EnvironmentEC2": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Cloud9::EnvironmentEC2",
            "  Properties:",
            "    AutomaticStopTimeMinutes: ${2:Number}",
            "    ConnectionType: \"${3:String}\"",
            "    Description: \"${4:String}\"",
            "    ImageId: \"${5:String}\"",
            "    InstanceType: \"${6:String}\" # Required",
            "    Name: \"${7:String}\"",
            "    OwnerArn: \"${8:String}\"",
            "    Repositories:",
            "      Repositories",
            "    SubnetId: \"${10:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloud9-environmentec2.html",
            "Attributes: ",
            "  Arn",
            "  Name"
        ],
        "prefix": "cloud9-environmentec2",
        "scope": "yaml"
    },
    "AWS::CloudFormation::CustomResource": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CloudFormation::CustomResource",
            "  Properties:",
            "    ServiceToken: \"${2:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cfn-customresource.html"
        ],
        "prefix": "cloudformation-customresource",
        "scope": "yaml"
    },
    "AWS::CloudFormation::HookDefaultVersion": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CloudFormation::HookDefaultVersion",
            "  Properties:",
            "    TypeName: \"${2:String}\"",
            "    TypeVersionArn: \"${3:String}\"",
            "    VersionId: \"${4:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hookdefaultversion.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "cloudformation-hookdefaultversion",
        "scope": "yaml"
    },
    "AWS::CloudFormation::HookTypeConfig": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CloudFormation::HookTypeConfig",
            "  Properties:",
            "    Configuration: \"${2:String}\" # Required",
            "    ConfigurationAlias: \"${3:String}\"",
            "    TypeArn: \"${4:String}\"",
            "    TypeName: \"${5:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hooktypeconfig.html",
            "Attributes: ",
            "  ConfigurationArn"
        ],
        "prefix": "cloudformation-hooktypeconfig",
        "scope": "yaml"
    },
    "AWS::CloudFormation::HookVersion": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CloudFormation::HookVersion",
            "  Properties:",
            "    ExecutionRoleArn: \"${2:String}\"",
            "    LoggingConfig:",
            "      LogGroupName: \"${3:String}\"",
            "      LogRoleArn: \"${4:String}\"",
            "    SchemaHandlerPackage: \"${4:String}\" # Required",
            "    TypeName: \"${5:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hookversion.html",
            "Attributes: ",
            "  Arn",
            "  TypeArn",
            "  IsDefaultVersion",
            "  VersionId",
            "  Visibility"
        ],
        "prefix": "cloudformation-hookversion",
        "scope": "yaml"
    },
    "AWS::CloudFormation::Macro": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CloudFormation::Macro",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    FunctionName: \"${3:String}\" # Required",
            "    LogGroupName: \"${4:String}\"",
            "    LogRoleARN: \"${5:String}\"",
            "    Name: \"${6:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-macro.html"
        ],
        "prefix": "cloudformation-macro",
        "scope": "yaml"
    },
    "AWS::CloudFormation::ModuleDefaultVersion": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CloudFormation::ModuleDefaultVersion",
            "  Properties:",
            "    Arn: \"${2:String}\"",
            "    ModuleName: \"${3:String}\"",
            "    VersionId: \"${4:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-moduledefaultversion.html"
        ],
        "prefix": "cloudformation-moduledefaultversion",
        "scope": "yaml"
    },
    "AWS::CloudFormation::ModuleVersion": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CloudFormation::ModuleVersion",
            "  Properties:",
            "    ModuleName: \"${2:String}\" # Required",
            "    ModulePackage: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-moduleversion.html",
            "Attributes: ",
            "  Arn",
            "  Description",
            "  DocumentationUrl",
            "  IsDefaultVersion",
            "  Schema",
            "  TimeCreated",
            "  VersionId",
            "  Visibility"
        ],
        "prefix": "cloudformation-moduleversion",
        "scope": "yaml"
    },
    "AWS::CloudFormation::PublicTypeVersion": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CloudFormation::PublicTypeVersion",
            "  Properties:",
            "    Arn: \"${2:String}\"",
            "    LogDeliveryBucket: \"${3:String}\"",
            "    PublicVersionNumber: \"${4:String}\"",
            "    Type: \"${5:String}\"",
            "    TypeName: \"${6:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-publictypeversion.html",
            "Attributes: ",
            "  TypeVersionArn",
            "  PublisherId",
            "  PublicTypeArn"
        ],
        "prefix": "cloudformation-publictypeversion",
        "scope": "yaml"
    },
    "AWS::CloudFormation::Publisher": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CloudFormation::Publisher",
            "  Properties:",
            "    AcceptTermsAndConditions: ${2|false,true|} # Required",
            "    ConnectionArn: \"${3:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-publisher.html",
            "Attributes: ",
            "  PublisherId",
            "  PublisherStatus",
            "  PublisherProfile",
            "  IdentityProvider"
        ],
        "prefix": "cloudformation-publisher",
        "scope": "yaml"
    },
    "AWS::CloudFormation::ResourceDefaultVersion": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CloudFormation::ResourceDefaultVersion",
            "  Properties:",
            "    TypeName: \"${2:String}\"",
            "    TypeVersionArn: \"${3:String}\"",
            "    VersionId: \"${4:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-resourcedefaultversion.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "cloudformation-resourcedefaultversion",
        "scope": "yaml"
    },
    "AWS::CloudFormation::ResourceVersion": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CloudFormation::ResourceVersion",
            "  Properties:",
            "    ExecutionRoleArn: \"${2:String}\"",
            "    LoggingConfig:",
            "      LogGroupName: \"${3:String}\"",
            "      LogRoleArn: \"${4:String}\"",
            "    SchemaHandlerPackage: \"${4:String}\" # Required",
            "    TypeName: \"${5:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-resourceversion.html",
            "Attributes: ",
            "  Arn",
            "  TypeArn",
            "  IsDefaultVersion",
            "  ProvisioningType",
            "  VersionId",
            "  Visibility"
        ],
        "prefix": "cloudformation-resourceversion",
        "scope": "yaml"
    },
    "AWS::CloudFormation::Stack": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CloudFormation::Stack",
            "  Properties:",
            "    NotificationARNs:",
            "      NotificationARNs",
            "    Parameters:",
            "    Tags:",
            "      Tags",
            "    TemplateURL: \"${5:String}\" # Required",
            "    TimeoutInMinutes: ${6:Number}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html"
        ],
        "prefix": "cloudformation-stack",
        "scope": "yaml"
    },
    "AWS::CloudFormation::StackSet": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CloudFormation::StackSet",
            "  Properties:",
            "    AdministrationRoleARN: \"${2:String}\"",
            "    AutoDeployment:",
            "      Enabled: ${3|false,true|}",
            "      RetainStacksOnAccountRemoval: ${4|false,true|}",
            "    CallAs: \"${4:String}\"",
            "    Capabilities:",
            "      Capabilities",
            "    Description: \"${6:String}\"",
            "    ExecutionRoleName: \"${7:String}\"",
            "    ManagedExecution: ${8:JSON}",
            "    OperationPreferences:",
            "      FailureToleranceCount: ${9:Number}",
            "      FailureTolerancePercentage: ${10:Number}",
            "      MaxConcurrentCount: ${11:Number}",
            "      MaxConcurrentPercentage: ${12:Number}",
            "      RegionConcurrencyType: \"${13:String}\"",
            "      RegionOrder:",
            "        -",
            "    Parameters:",
            "      Parameters",
            "    PermissionModel: \"${11:String}\" # Required",
            "    StackInstancesGroup:",
            "      StackInstancesGroup",
            "    StackSetName: \"${13:String}\" # Required",
            "    Tags:",
            "      Tags",
            "    TemplateBody: \"${15:String}\"",
            "    TemplateURL: \"${16:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html",
            "Attributes: ",
            "  StackSetId"
        ],
        "prefix": "cloudformation-stackset",
        "scope": "yaml"
    },
    "AWS::CloudFormation::TypeActivation": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CloudFormation::TypeActivation",
            "  Properties:",
            "    AutoUpdate: ${2|false,true|}",
            "    ExecutionRoleArn: \"${3:String}\"",
            "    LoggingConfig:",
            "      LogGroupName: \"${4:String}\"",
            "      LogRoleArn: \"${5:String}\"",
            "    MajorVersion: \"${5:String}\"",
            "    PublicTypeArn: \"${6:String}\"",
            "    PublisherId: \"${7:String}\"",
            "    Type: \"${8:String}\"",
            "    TypeName: \"${9:String}\"",
            "    TypeNameAlias: \"${10:String}\"",
            "    VersionBump: \"${11:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "cloudformation-typeactivation",
        "scope": "yaml"
    },
    "AWS::CloudFormation::WaitCondition": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CloudFormation::WaitCondition",
            "  Properties:",
            "    Count: ${2:Number}",
            "    Handle: \"${3:String}\"",
            "    Timeout: \"${4:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waitcondition.html",
            "Attributes: ",
            "  Data"
        ],
        "prefix": "cloudformation-waitcondition",
        "scope": "yaml"
    },
    "AWS::CloudFormation::WaitConditionHandle": {
        "body": [],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waitconditionhandle.html"
        ],
        "prefix": "cloudformation-waitconditionhandle",
        "scope": "yaml"
    },
    "AWS::CloudFront::CachePolicy": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CloudFront::CachePolicy",
            "  Properties:",
            "    CachePolicyConfig:",
            "      Comment: \"${2:String}\"",
            "      DefaultTTL: ${3:Number}",
            "      MaxTTL: ${4:Number}",
            "      MinTTL: ${5:Number}",
            "      Name: \"${6:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-cachepolicy.html",
            "Attributes: ",
            "  Id",
            "  LastModifiedTime"
        ],
        "prefix": "cloudfront-cachepolicy",
        "scope": "yaml"
    },
    "AWS::CloudFront::CloudFrontOriginAccessIdentity": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CloudFront::CloudFrontOriginAccessIdentity",
            "  Properties:",
            "    CloudFrontOriginAccessIdentityConfig:",
            "      Comment: \"${2:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-cloudfrontoriginaccessidentity.html",
            "Attributes: ",
            "  Id",
            "  S3CanonicalUserId"
        ],
        "prefix": "cloudfront-cloudfrontoriginaccessidentity",
        "scope": "yaml"
    },
    "AWS::CloudFront::Distribution": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CloudFront::Distribution",
            "  Properties:",
            "    DistributionConfig:",
            "      Aliases:",
            "        -",
            "      CNAMEs:",
            "        -",
            "      CacheBehaviors:",
            "        -",
            "      Comment: \"${5:String}\"",
            "      CustomErrorResponses:",
            "        -",
            "      DefaultRootObject: \"${9:String}\"",
            "      Enabled: ${10|false,true|}",
            "      HttpVersion: \"${11:String}\"",
            "      IPV6Enabled: ${12|false,true|}",
            "      Origins:",
            "        -",
            "      PriceClass: \"${16:String}\"",
            "      WebACLId: \"${20:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-distribution.html",
            "Attributes: ",
            "  DomainName",
            "  Id"
        ],
        "prefix": "cloudfront-distribution",
        "scope": "yaml"
    },
    "AWS::CloudFront::Function": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CloudFront::Function",
            "  Properties:",
            "    AutoPublish: ${2|false,true|}",
            "    FunctionCode: \"${3:String}\"",
            "    FunctionConfig:",
            "      Comment: \"${4:String}\"",
            "      Runtime: \"${5:String}\"",
            "    Name: \"${5:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-function.html",
            "Attributes: ",
            "  FunctionARN",
            "  FunctionMetadata.FunctionARN",
            "  Stage"
        ],
        "prefix": "cloudfront-function",
        "scope": "yaml"
    },
    "AWS::CloudFront::KeyGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CloudFront::KeyGroup",
            "  Properties:",
            "    KeyGroupConfig:",
            "      Comment: \"${2:String}\"",
            "      Items:",
            "        -",
            "      Name: \"${4:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-keygroup.html",
            "Attributes: ",
            "  Id",
            "  LastModifiedTime"
        ],
        "prefix": "cloudfront-keygroup",
        "scope": "yaml"
    },
    "AWS::CloudFront::OriginRequestPolicy": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CloudFront::OriginRequestPolicy",
            "  Properties:",
            "    OriginRequestPolicyConfig:",
            "      Comment: \"${2:String}\"",
            "      Name: \"${5:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-originrequestpolicy.html",
            "Attributes: ",
            "  Id",
            "  LastModifiedTime"
        ],
        "prefix": "cloudfront-originrequestpolicy",
        "scope": "yaml"
    },
    "AWS::CloudFront::PublicKey": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CloudFront::PublicKey",
            "  Properties:",
            "    PublicKeyConfig:",
            "      CallerReference: \"${2:String}\"",
            "      Comment: \"${3:String}\"",
            "      EncodedKey: \"${4:String}\"",
            "      Name: \"${5:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-publickey.html",
            "Attributes: ",
            "  CreatedTime",
            "  Id"
        ],
        "prefix": "cloudfront-publickey",
        "scope": "yaml"
    },
    "AWS::CloudFront::RealtimeLogConfig": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CloudFront::RealtimeLogConfig",
            "  Properties:",
            "    EndPoints: # Required",
            "      EndPoints",
            "    Fields: # Required",
            "      Fields",
            "    Name: \"${4:String}\" # Required",
            "    SamplingRate: ${5:Number} # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-realtimelogconfig.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "cloudfront-realtimelogconfig",
        "scope": "yaml"
    },
    "AWS::CloudFront::ResponseHeadersPolicy": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CloudFront::ResponseHeadersPolicy",
            "  Properties:",
            "    ResponseHeadersPolicyConfig:",
            "      Comment: \"${2:String}\"",
            "      Name: \"${5:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-responseheaderspolicy.html",
            "Attributes: ",
            "  Id",
            "  LastModifiedTime"
        ],
        "prefix": "cloudfront-responseheaderspolicy",
        "scope": "yaml"
    },
    "AWS::CloudFront::StreamingDistribution": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CloudFront::StreamingDistribution",
            "  Properties:",
            "    StreamingDistributionConfig:",
            "      Aliases:",
            "        -",
            "      Comment: \"${3:String}\"",
            "      Enabled: ${4|false,true|}",
            "      PriceClass: \"${6:String}\"",
            "    Tags: # Required",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-streamingdistribution.html",
            "Attributes: ",
            "  DomainName"
        ],
        "prefix": "cloudfront-streamingdistribution",
        "scope": "yaml"
    },
    "AWS::CloudTrail::Trail": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CloudTrail::Trail",
            "  Properties:",
            "    CloudWatchLogsLogGroupArn: \"${2:String}\"",
            "    CloudWatchLogsRoleArn: \"${3:String}\"",
            "    EnableLogFileValidation: ${4|false,true|}",
            "    EventSelectors:",
            "      EventSelectors",
            "    IncludeGlobalServiceEvents: ${6|false,true|}",
            "    InsightSelectors:",
            "      InsightSelectors",
            "    IsLogging: ${8|false,true|} # Required",
            "    IsMultiRegionTrail: ${9|false,true|}",
            "    IsOrganizationTrail: ${10|false,true|}",
            "    KMSKeyId: \"${11:String}\"",
            "    S3BucketName: \"${12:String}\" # Required",
            "    S3KeyPrefix: \"${13:String}\"",
            "    SnsTopicName: \"${14:String}\"",
            "    Tags:",
            "      Tags",
            "    TrailName: \"${16:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-trail.html",
            "Attributes: ",
            "  Arn",
            "  SnsTopicArn"
        ],
        "prefix": "cloudtrail-trail",
        "scope": "yaml"
    },
    "AWS::CloudWatch::Alarm": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CloudWatch::Alarm",
            "  Properties:",
            "    ActionsEnabled: ${2|false,true|}",
            "    AlarmActions:",
            "      AlarmActions",
            "    AlarmDescription: \"${4:String}\"",
            "    AlarmName: \"${5:String}\"",
            "    ComparisonOperator: \"${6:String}\" # Required",
            "    DatapointsToAlarm: ${7:Number}",
            "    Dimensions:",
            "      Dimensions",
            "    EvaluateLowSampleCountPercentile: \"${9:String}\"",
            "    EvaluationPeriods: ${10:Number} # Required",
            "    ExtendedStatistic: \"${11:String}\"",
            "    InsufficientDataActions:",
            "      InsufficientDataActions",
            "    MetricName: \"${13:String}\"",
            "    Metrics:",
            "      Metrics",
            "    Namespace: \"${15:String}\"",
            "    OKActions:",
            "      OKActions",
            "    Period: ${17:Number}",
            "    Statistic: \"${18:String}\"",
            "    Threshold: ${19:Number}",
            "    ThresholdMetricId: \"${20:String}\"",
            "    TreatMissingData: \"${21:String}\"",
            "    Unit: \"${22:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "cloudwatch-alarm",
        "scope": "yaml"
    },
    "AWS::CloudWatch::AnomalyDetector": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CloudWatch::AnomalyDetector",
            "  Properties:",
            "    Configuration:",
            "      ExcludedTimeRanges:",
            "        -",
            "      MetricTimeZone: \"${3:String}\"",
            "    Dimensions:",
            "      Dimensions",
            "    MetricMathAnomalyDetector:",
            "      MetricDataQueries:",
            "        -",
            "    MetricName: \"${5:String}\"",
            "    Namespace: \"${6:String}\"",
            "    SingleMetricAnomalyDetector:",
            "      Dimensions:",
            "        -",
            "      MetricName: \"${8:String}\"",
            "      Namespace: \"${9:String}\"",
            "      Stat: \"${10:String}\"",
            "    Stat: \"${8:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-anomalydetector.html"
        ],
        "prefix": "cloudwatch-anomalydetector",
        "scope": "yaml"
    },
    "AWS::CloudWatch::CompositeAlarm": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CloudWatch::CompositeAlarm",
            "  Properties:",
            "    ActionsEnabled: ${2|false,true|}",
            "    AlarmActions:",
            "      AlarmActions",
            "    AlarmDescription: \"${4:String}\"",
            "    AlarmName: \"${5:String}\" # Required",
            "    AlarmRule: \"${6:String}\" # Required",
            "    InsufficientDataActions:",
            "      InsufficientDataActions",
            "    OKActions:",
            "      OKActions"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "cloudwatch-compositealarm",
        "scope": "yaml"
    },
    "AWS::CloudWatch::Dashboard": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CloudWatch::Dashboard",
            "  Properties:",
            "    DashboardBody: \"${2:String}\" # Required",
            "    DashboardName: \"${3:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-dashboard.html"
        ],
        "prefix": "cloudwatch-dashboard",
        "scope": "yaml"
    },
    "AWS::CloudWatch::InsightRule": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CloudWatch::InsightRule",
            "  Properties:",
            "    RuleBody: \"${2:String}\" # Required",
            "    RuleName: \"${3:String}\" # Required",
            "    RuleState: \"${4:String}\" # Required",
            "    Tags:"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-insightrule.html",
            "Attributes: ",
            "  Arn",
            "  RuleName"
        ],
        "prefix": "cloudwatch-insightrule",
        "scope": "yaml"
    },
    "AWS::CloudWatch::MetricStream": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CloudWatch::MetricStream",
            "  Properties:",
            "    ExcludeFilters:",
            "      ExcludeFilters",
            "    FirehoseArn: \"${3:String}\" # Required",
            "    IncludeFilters:",
            "      IncludeFilters",
            "    Name: \"${5:String}\"",
            "    OutputFormat: \"${6:String}\" # Required",
            "    RoleArn: \"${7:String}\" # Required",
            "    StatisticsConfigurations:",
            "      StatisticsConfigurations",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-metricstream.html",
            "Attributes: ",
            "  Arn",
            "  CreationDate",
            "  LastUpdateDate",
            "  State"
        ],
        "prefix": "cloudwatch-metricstream",
        "scope": "yaml"
    },
    "AWS::CodeArtifact::Domain": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CodeArtifact::Domain",
            "  Properties:",
            "    DomainName: \"${2:String}\" # Required",
            "    EncryptionKey: \"${3:String}\"",
            "    PermissionsPolicyDocument: ${4:JSON}",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeartifact-domain.html",
            "Attributes: ",
            "  Name",
            "  Owner",
            "  EncryptionKey",
            "  Arn"
        ],
        "prefix": "codeartifact-domain",
        "scope": "yaml"
    },
    "AWS::CodeArtifact::Repository": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CodeArtifact::Repository",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    DomainName: \"${3:String}\" # Required",
            "    DomainOwner: \"${4:String}\"",
            "    ExternalConnections:",
            "      ExternalConnections",
            "    PermissionsPolicyDocument: ${6:JSON}",
            "    RepositoryName: \"${7:String}\" # Required",
            "    Tags:",
            "      Tags",
            "    Upstreams:",
            "      Upstreams"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeartifact-repository.html",
            "Attributes: ",
            "  Name",
            "  DomainName",
            "  DomainOwner",
            "  Arn"
        ],
        "prefix": "codeartifact-repository",
        "scope": "yaml"
    },
    "AWS::CodeBuild::Project": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CodeBuild::Project",
            "  Properties:",
            "    Artifacts:",
            "      ArtifactIdentifier: \"${2:String}\"",
            "      EncryptionDisabled: ${3|false,true|}",
            "      Location: \"${4:String}\"",
            "      Name: \"${5:String}\"",
            "      NamespaceType: \"${6:String}\"",
            "      OverrideArtifactName: ${7|false,true|}",
            "      Packaging: \"${8:String}\"",
            "      Path: \"${9:String}\"",
            "      Type: \"${10:String}\"",
            "    BadgeEnabled: ${3|false,true|}",
            "    BuildBatchConfig:",
            "      BatchReportMode: \"${4:String}\"",
            "      CombineArtifacts: ${5|false,true|}",
            "      ServiceRole: \"${7:String}\"",
            "      TimeoutInMins: ${8:Number}",
            "    Cache:",
            "      Location: \"${5:String}\"",
            "      Modes:",
            "        -",
            "      Type: \"${7:String}\"",
            "    ConcurrentBuildLimit: ${6:Number}",
            "    Description: \"${7:String}\"",
            "    EncryptionKey: \"${8:String}\"",
            "    Environment:",
            "      Certificate: \"${9:String}\"",
            "      ComputeType: \"${10:String}\"",
            "      EnvironmentVariables:",
            "        -",
            "      Image: \"${12:String}\"",
            "      ImagePullCredentialsType: \"${13:String}\"",
            "      PrivilegedMode: ${14|false,true|}",
            "      Type: \"${16:String}\"",
            "    FileSystemLocations:",
            "      FileSystemLocations",
            "    LogsConfig:",
            "    Name: \"${12:String}\"",
            "    QueuedTimeoutInMinutes: ${13:Number}",
            "    ResourceAccessRole: \"${14:String}\"",
            "    SecondaryArtifacts:",
            "      SecondaryArtifacts",
            "    SecondarySourceVersions:",
            "      SecondarySourceVersions",
            "    SecondarySources:",
            "      SecondarySources",
            "    ServiceRole: \"${18:String}\" # Required",
            "    Source:",
            "      BuildSpec: \"${20:String}\"",
            "      GitCloneDepth: ${22:Number}",
            "      InsecureSsl: ${24|false,true|}",
            "      Location: \"${25:String}\"",
            "      ReportBuildStatus: ${26|false,true|}",
            "      SourceIdentifier: \"${27:String}\"",
            "      Type: \"${28:String}\"",
            "    SourceVersion: \"${20:String}\"",
            "    Tags:",
            "      Tags",
            "    TimeoutInMinutes: ${22:Number}",
            "    Triggers:",
            "      BuildType: \"${23:String}\"",
            "      FilterGroups:",
            "        -",
            "      Webhook: ${25|false,true|}",
            "    Visibility: \"${24:String}\"",
            "    VpcConfig:",
            "      SecurityGroupIds:",
            "        -",
            "      Subnets:",
            "        -",
            "      VpcId: \"${27:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "codebuild-project",
        "scope": "yaml"
    },
    "AWS::CodeBuild::ReportGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CodeBuild::ReportGroup",
            "  Properties:",
            "    DeleteReports: ${2|false,true|}",
            "    ExportConfig:",
            "      ExportConfigType: \"${3:String}\"",
            "    Name: \"${4:String}\"",
            "    Tags:",
            "      Tags",
            "    Type: \"${6:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-reportgroup.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "codebuild-reportgroup",
        "scope": "yaml"
    },
    "AWS::CodeBuild::SourceCredential": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CodeBuild::SourceCredential",
            "  Properties:",
            "    AuthType: \"${2:String}\" # Required",
            "    ServerType: \"${3:String}\" # Required",
            "    Token: \"${4:String}\" # Required",
            "    Username: \"${5:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-sourcecredential.html"
        ],
        "prefix": "codebuild-sourcecredential",
        "scope": "yaml"
    },
    "AWS::CodeCommit::Repository": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CodeCommit::Repository",
            "  Properties:",
            "    Code:",
            "      BranchName: \"${2:String}\"",
            "    RepositoryDescription: \"${3:String}\"",
            "    RepositoryName: \"${4:String}\" # Required",
            "    Tags:",
            "      Tags",
            "    Triggers:",
            "      Triggers"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html",
            "Attributes: ",
            "  CloneUrlHttp",
            "  CloneUrlSsh",
            "  Arn",
            "  Name"
        ],
        "prefix": "codecommit-repository",
        "scope": "yaml"
    },
    "AWS::CodeDeploy::Application": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CodeDeploy::Application",
            "  Properties:",
            "    ApplicationName: \"${2:String}\"",
            "    ComputePlatform: \"${3:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-application.html"
        ],
        "prefix": "codedeploy-application",
        "scope": "yaml"
    },
    "AWS::CodeDeploy::DeploymentConfig": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CodeDeploy::DeploymentConfig",
            "  Properties:",
            "    ComputePlatform: \"${2:String}\"",
            "    DeploymentConfigName: \"${3:String}\"",
            "    MinimumHealthyHosts:",
            "      Type: \"${4:String}\"",
            "      Value: ${5:Number}",
            "    TrafficRoutingConfig:",
            "      Type: \"${7:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentconfig.html"
        ],
        "prefix": "codedeploy-deploymentconfig",
        "scope": "yaml"
    },
    "AWS::CodeDeploy::DeploymentGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CodeDeploy::DeploymentGroup",
            "  Properties:",
            "    AlarmConfiguration:",
            "      Alarms:",
            "        -",
            "      Enabled: ${3|false,true|}",
            "      IgnorePollAlarmFailure: ${4|false,true|}",
            "    ApplicationName: \"${3:String}\" # Required",
            "    AutoRollbackConfiguration:",
            "      Enabled: ${4|false,true|}",
            "      Events:",
            "        -",
            "    AutoScalingGroups:",
            "      AutoScalingGroups",
            "    BlueGreenDeploymentConfiguration:",
            "    Deployment:",
            "      Description: \"${7:String}\"",
            "      IgnoreApplicationStopFailures: ${8|false,true|}",
            "    DeploymentConfigName: \"${8:String}\"",
            "    DeploymentGroupName: \"${9:String}\"",
            "    DeploymentStyle:",
            "      DeploymentOption: \"${10:String}\"",
            "      DeploymentType: \"${11:String}\"",
            "    ECSServices:",
            "      ECSServices",
            "    Ec2TagFilters:",
            "      Ec2TagFilters",
            "    Ec2TagSet:",
            "      Ec2TagSetList:",
            "        -",
            "    LoadBalancerInfo:",
            "      ElbInfoList:",
            "        -",
            "      TargetGroupInfoList:",
            "        -",
            "      TargetGroupPairInfoList:",
            "        -",
            "    OnPremisesInstanceTagFilters:",
            "      OnPremisesInstanceTagFilters",
            "    OnPremisesTagSet:",
            "      OnPremisesTagSetList:",
            "        -",
            "    OutdatedInstancesStrategy: \"${17:String}\"",
            "    ServiceRoleArn: \"${18:String}\" # Required",
            "    Tags:",
            "      Tags",
            "    TriggerConfigurations:",
            "      TriggerConfigurations"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html"
        ],
        "prefix": "codedeploy-deploymentgroup",
        "scope": "yaml"
    },
    "AWS::CodeGuruProfiler::ProfilingGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CodeGuruProfiler::ProfilingGroup",
            "  Properties:",
            "    AgentPermissions: ${2:JSON}",
            "    AnomalyDetectionNotificationConfiguration:",
            "      AnomalyDetectionNotificationConfiguration",
            "    ComputePlatform: \"${4:String}\"",
            "    ProfilingGroupName: \"${5:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeguruprofiler-profilinggroup.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "codeguruprofiler-profilinggroup",
        "scope": "yaml"
    },
    "AWS::CodeGuruReviewer::RepositoryAssociation": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CodeGuruReviewer::RepositoryAssociation",
            "  Properties:",
            "    BucketName: \"${2:String}\"",
            "    ConnectionArn: \"${3:String}\"",
            "    Name: \"${4:String}\" # Required",
            "    Owner: \"${5:String}\"",
            "    Tags:",
            "      Tags",
            "    Type: \"${7:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codegurureviewer-repositoryassociation.html",
            "Attributes: ",
            "  AssociationArn"
        ],
        "prefix": "codegurureviewer-repositoryassociation",
        "scope": "yaml"
    },
    "AWS::CodePipeline::CustomActionType": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CodePipeline::CustomActionType",
            "  Properties:",
            "    Category: \"${2:String}\" # Required",
            "    ConfigurationProperties:",
            "      ConfigurationProperties",
            "    InputArtifactDetails:",
            "      MaximumCount: ${4:Number}",
            "      MinimumCount: ${5:Number}",
            "    OutputArtifactDetails:",
            "      MaximumCount: ${5:Number}",
            "      MinimumCount: ${6:Number}",
            "    Provider: \"${6:String}\" # Required",
            "    Settings:",
            "      EntityUrlTemplate: \"${7:String}\"",
            "      ExecutionUrlTemplate: \"${8:String}\"",
            "      RevisionUrlTemplate: \"${9:String}\"",
            "      ThirdPartyConfigurationUrl: \"${10:String}\"",
            "    Tags:",
            "      Tags",
            "    Version: \"${9:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype.html"
        ],
        "prefix": "codepipeline-customactiontype",
        "scope": "yaml"
    },
    "AWS::CodePipeline::Pipeline": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CodePipeline::Pipeline",
            "  Properties:",
            "    ArtifactStore:",
            "      Location: \"${3:String}\"",
            "      Type: \"${4:String}\"",
            "    ArtifactStores:",
            "      ArtifactStores",
            "    DisableInboundStageTransitions:",
            "      DisableInboundStageTransitions",
            "    Name: \"${5:String}\"",
            "    RestartExecutionOnUpdate: ${6|false,true|}",
            "    RoleArn: \"${7:String}\" # Required",
            "    Stages: # Required",
            "      Stages",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-pipeline.html",
            "Attributes: ",
            "  Version"
        ],
        "prefix": "codepipeline-pipeline",
        "scope": "yaml"
    },
    "AWS::CodePipeline::Webhook": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CodePipeline::Webhook",
            "  Properties:",
            "    Authentication: \"${2:String}\" # Required",
            "    AuthenticationConfiguration:",
            "      AllowedIPRange: \"${3:String}\"",
            "      SecretToken: \"${4:String}\"",
            "    Filters: # Required",
            "      Filters",
            "    Name: \"${5:String}\"",
            "    RegisterWithThirdParty: ${6|false,true|}",
            "    TargetAction: \"${7:String}\" # Required",
            "    TargetPipeline: \"${8:String}\" # Required",
            "    TargetPipelineVersion: ${9:Number} # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-webhook.html",
            "Attributes: ",
            "  Url"
        ],
        "prefix": "codepipeline-webhook",
        "scope": "yaml"
    },
    "AWS::CodeStar::GitHubRepository": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CodeStar::GitHubRepository",
            "  Properties:",
            "    Code:",
            "    ConnectionArn: \"${3:String}\"",
            "    EnableIssues: ${4|false,true|}",
            "    IsPrivate: ${5|false,true|}",
            "    RepositoryAccessToken: \"${6:String}\"",
            "    RepositoryDescription: \"${7:String}\"",
            "    RepositoryName: \"${8:String}\" # Required",
            "    RepositoryOwner: \"${9:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html"
        ],
        "prefix": "codestar-githubrepository",
        "scope": "yaml"
    },
    "AWS::CodeStarConnections::Connection": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CodeStarConnections::Connection",
            "  Properties:",
            "    ConnectionName: \"${2:String}\" # Required",
            "    HostArn: \"${3:String}\"",
            "    ProviderType: \"${4:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarconnections-connection.html",
            "Attributes: ",
            "  ConnectionArn",
            "  ConnectionStatus",
            "  OwnerAccountId"
        ],
        "prefix": "codestarconnections-connection",
        "scope": "yaml"
    },
    "AWS::CodeStarNotifications::NotificationRule": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CodeStarNotifications::NotificationRule",
            "  Properties:",
            "    CreatedBy: \"${2:String}\"",
            "    DetailType: \"${3:String}\" # Required",
            "    EventTypeId: \"${4:String}\"",
            "    EventTypeIds: # Required",
            "      EventTypeIds",
            "    Name: \"${6:String}\" # Required",
            "    Resource: \"${7:String}\" # Required",
            "    Status: \"${8:String}\"",
            "    Tags: ${9:JSON}",
            "    TargetAddress: \"${10:String}\"",
            "    Targets: # Required",
            "      Targets"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarnotifications-notificationrule.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "codestarnotifications-notificationrule",
        "scope": "yaml"
    },
    "AWS::Cognito::IdentityPool": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Cognito::IdentityPool",
            "  Properties:",
            "    AllowClassicFlow: ${2|false,true|}",
            "    AllowUnauthenticatedIdentities: ${3|false,true|} # Required",
            "    CognitoEvents: ${4:JSON}",
            "    CognitoIdentityProviders:",
            "      CognitoIdentityProviders",
            "    CognitoStreams:",
            "      RoleArn: \"${6:String}\"",
            "      StreamName: \"${7:String}\"",
            "      StreamingStatus: \"${8:String}\"",
            "    DeveloperProviderName: \"${7:String}\"",
            "    IdentityPoolName: \"${8:String}\"",
            "    OpenIdConnectProviderARNs:",
            "      OpenIdConnectProviderARNs",
            "    PushSync:",
            "      ApplicationArns:",
            "        -",
            "      RoleArn: \"${11:String}\"",
            "    SamlProviderARNs:",
            "      SamlProviderARNs",
            "    SupportedLoginProviders: ${12:JSON}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html",
            "Attributes: ",
            "  Name"
        ],
        "prefix": "cognito-identitypool",
        "scope": "yaml"
    },
    "AWS::Cognito::IdentityPoolRoleAttachment": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Cognito::IdentityPoolRoleAttachment",
            "  Properties:",
            "    IdentityPoolId: \"${2:String}\" # Required",
            "    RoleMappings: ${3:JSON}",
            "    Roles: ${4:JSON}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypoolroleattachment.html"
        ],
        "prefix": "cognito-identitypoolroleattachment",
        "scope": "yaml"
    },
    "AWS::Cognito::UserPool": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Cognito::UserPool",
            "  Properties:",
            "    AccountRecoverySetting:",
            "      RecoveryMechanisms:",
            "        -",
            "    AdminCreateUserConfig:",
            "      AllowAdminCreateUserOnly: ${3|false,true|}",
            "      UnusedAccountValidityDays: ${5:Number}",
            "    AliasAttributes:",
            "      AliasAttributes",
            "    AutoVerifiedAttributes:",
            "      AutoVerifiedAttributes",
            "    DeviceConfiguration:",
            "      ChallengeRequiredOnNewDevice: ${6|false,true|}",
            "      DeviceOnlyRememberedOnUserPrompt: ${7|false,true|}",
            "    EmailConfiguration:",
            "      ConfigurationSet: \"${7:String}\"",
            "      EmailSendingAccount: \"${8:String}\"",
            "      From: \"${9:String}\"",
            "      ReplyToEmailAddress: \"${10:String}\"",
            "      SourceArn: \"${11:String}\"",
            "    EmailVerificationMessage: \"${8:String}\"",
            "    EmailVerificationSubject: \"${9:String}\"",
            "    EnabledMfas:",
            "      EnabledMfas",
            "    LambdaConfig:",
            "      CreateAuthChallenge: \"${11:String}\"",
            "      CustomMessage: \"${13:String}\"",
            "      DefineAuthChallenge: \"${15:String}\"",
            "      KMSKeyID: \"${16:String}\"",
            "      PostAuthentication: \"${17:String}\"",
            "      PostConfirmation: \"${18:String}\"",
            "      PreAuthentication: \"${19:String}\"",
            "      PreSignUp: \"${20:String}\"",
            "      PreTokenGeneration: \"${21:String}\"",
            "      UserMigration: \"${22:String}\"",
            "      VerifyAuthChallengeResponse: \"${23:String}\"",
            "    MfaConfiguration: \"${12:String}\"",
            "    Policies:",
            "    Schema:",
            "      Schema",
            "    SmsAuthenticationMessage: \"${15:String}\"",
            "    SmsConfiguration:",
            "      ExternalId: \"${16:String}\"",
            "      SnsCallerArn: \"${17:String}\"",
            "      SnsRegion: \"${18:String}\"",
            "    SmsVerificationMessage: \"${17:String}\"",
            "    UserPoolAddOns:",
            "      AdvancedSecurityMode: \"${18:String}\"",
            "    UserPoolName: \"${19:String}\"",
            "    UserPoolTags: ${20:JSON}",
            "    UsernameAttributes:",
            "      UsernameAttributes",
            "    UsernameConfiguration:",
            "      CaseSensitive: ${22|false,true|}",
            "    VerificationMessageTemplate:",
            "      DefaultEmailOption: \"${23:String}\"",
            "      EmailMessage: \"${24:String}\"",
            "      EmailMessageByLink: \"${25:String}\"",
            "      EmailSubject: \"${26:String}\"",
            "      EmailSubjectByLink: \"${27:String}\"",
            "      SmsMessage: \"${28:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html",
            "Attributes: ",
            "  ProviderName",
            "  ProviderURL",
            "  Arn"
        ],
        "prefix": "cognito-userpool",
        "scope": "yaml"
    },
    "AWS::Cognito::UserPoolClient": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Cognito::UserPoolClient",
            "  Properties:",
            "    AccessTokenValidity: ${2:Number}",
            "    AllowedOAuthFlows:",
            "      AllowedOAuthFlows",
            "    AllowedOAuthFlowsUserPoolClient: ${4|false,true|}",
            "    AllowedOAuthScopes:",
            "      AllowedOAuthScopes",
            "    AnalyticsConfiguration:",
            "      ApplicationArn: \"${6:String}\"",
            "      ApplicationId: \"${7:String}\"",
            "      ExternalId: \"${8:String}\"",
            "      RoleArn: \"${9:String}\"",
            "      UserDataShared: ${10|false,true|}",
            "    CallbackURLs:",
            "      CallbackURLs",
            "    ClientName: \"${8:String}\"",
            "    DefaultRedirectURI: \"${9:String}\"",
            "    EnableTokenRevocation: ${10|false,true|}",
            "    ExplicitAuthFlows:",
            "      ExplicitAuthFlows",
            "    GenerateSecret: ${12|false,true|}",
            "    IdTokenValidity: ${13:Number}",
            "    LogoutURLs:",
            "      LogoutURLs",
            "    PreventUserExistenceErrors: \"${15:String}\"",
            "    ReadAttributes:",
            "      ReadAttributes",
            "    RefreshTokenValidity: ${17:Number}",
            "    SupportedIdentityProviders:",
            "      SupportedIdentityProviders",
            "    TokenValidityUnits:",
            "      AccessToken: \"${19:String}\"",
            "      IdToken: \"${20:String}\"",
            "      RefreshToken: \"${21:String}\"",
            "    UserPoolId: \"${20:String}\" # Required",
            "    WriteAttributes:",
            "      WriteAttributes"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html",
            "Attributes: ",
            "  ClientSecret",
            "  Name"
        ],
        "prefix": "cognito-userpoolclient",
        "scope": "yaml"
    },
    "AWS::Cognito::UserPoolDomain": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Cognito::UserPoolDomain",
            "  Properties:",
            "    CustomDomainConfig:",
            "      CertificateArn: \"${2:String}\"",
            "    Domain: \"${3:String}\" # Required",
            "    UserPoolId: \"${4:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooldomain.html"
        ],
        "prefix": "cognito-userpooldomain",
        "scope": "yaml"
    },
    "AWS::Cognito::UserPoolGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Cognito::UserPoolGroup",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    GroupName: \"${3:String}\"",
            "    Precedence: ${4:Number}",
            "    RoleArn: \"${5:String}\"",
            "    UserPoolId: \"${6:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolgroup.html"
        ],
        "prefix": "cognito-userpoolgroup",
        "scope": "yaml"
    },
    "AWS::Cognito::UserPoolIdentityProvider": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Cognito::UserPoolIdentityProvider",
            "  Properties:",
            "    AttributeMapping: ${2:JSON}",
            "    IdpIdentifiers:",
            "      IdpIdentifiers",
            "    ProviderDetails: ${4:JSON}",
            "    ProviderName: \"${5:String}\" # Required",
            "    ProviderType: \"${6:String}\" # Required",
            "    UserPoolId: \"${7:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolidentityprovider.html"
        ],
        "prefix": "cognito-userpoolidentityprovider",
        "scope": "yaml"
    },
    "AWS::Cognito::UserPoolResourceServer": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Cognito::UserPoolResourceServer",
            "  Properties:",
            "    Identifier: \"${2:String}\" # Required",
            "    Name: \"${3:String}\" # Required",
            "    Scopes:",
            "      Scopes",
            "    UserPoolId: \"${5:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolresourceserver.html"
        ],
        "prefix": "cognito-userpoolresourceserver",
        "scope": "yaml"
    },
    "AWS::Cognito::UserPoolRiskConfigurationAttachment": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Cognito::UserPoolRiskConfigurationAttachment",
            "  Properties:",
            "    AccountTakeoverRiskConfiguration:",
            "    ClientId: \"${3:String}\" # Required",
            "    CompromisedCredentialsRiskConfiguration:",
            "      EventFilter:",
            "        -",
            "    RiskExceptionConfiguration:",
            "      BlockedIPRangeList:",
            "        -",
            "      SkippedIPRangeList:",
            "        -",
            "    UserPoolId: \"${6:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolriskconfigurationattachment.html"
        ],
        "prefix": "cognito-userpoolriskconfigurationattachment",
        "scope": "yaml"
    },
    "AWS::Cognito::UserPoolUICustomizationAttachment": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Cognito::UserPoolUICustomizationAttachment",
            "  Properties:",
            "    CSS: \"${2:String}\"",
            "    ClientId: \"${3:String}\" # Required",
            "    UserPoolId: \"${4:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluicustomizationattachment.html"
        ],
        "prefix": "cognito-userpooluicustomizationattachment",
        "scope": "yaml"
    },
    "AWS::Cognito::UserPoolUser": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Cognito::UserPoolUser",
            "  Properties:",
            "    ClientMetadata: ${2:JSON}",
            "    DesiredDeliveryMediums:",
            "      DesiredDeliveryMediums",
            "    ForceAliasCreation: ${4|false,true|}",
            "    MessageAction: \"${5:String}\"",
            "    UserAttributes:",
            "      UserAttributes",
            "    UserPoolId: \"${7:String}\" # Required",
            "    Username: \"${8:String}\"",
            "    ValidationData:",
            "      ValidationData"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluser.html"
        ],
        "prefix": "cognito-userpooluser",
        "scope": "yaml"
    },
    "AWS::Cognito::UserPoolUserToGroupAttachment": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Cognito::UserPoolUserToGroupAttachment",
            "  Properties:",
            "    GroupName: \"${2:String}\" # Required",
            "    UserPoolId: \"${3:String}\" # Required",
            "    Username: \"${4:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolusertogroupattachment.html"
        ],
        "prefix": "cognito-userpoolusertogroupattachment",
        "scope": "yaml"
    },
    "AWS::Config::AggregationAuthorization": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Config::AggregationAuthorization",
            "  Properties:",
            "    AuthorizedAccountId: \"${2:String}\" # Required",
            "    AuthorizedAwsRegion: \"${3:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-aggregationauthorization.html",
            "Attributes: ",
            "  AggregationAuthorizationArn"
        ],
        "prefix": "config-aggregationauthorization",
        "scope": "yaml"
    },
    "AWS::Config::ConfigRule": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Config::ConfigRule",
            "  Properties:",
            "    ConfigRuleName: \"${2:String}\"",
            "    Description: \"${3:String}\"",
            "    InputParameters: ${4:JSON}",
            "    MaximumExecutionFrequency: \"${5:String}\"",
            "    Scope:",
            "      ComplianceResourceId: \"${6:String}\"",
            "      ComplianceResourceTypes:",
            "        -",
            "      TagKey: \"${8:String}\"",
            "      TagValue: \"${9:String}\"",
            "    Source:",
            "      Owner: \"${7:String}\"",
            "      SourceDetails:",
            "        -",
            "      SourceIdentifier: \"${9:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configrule.html",
            "Attributes: ",
            "  Arn",
            "  Compliance.Type",
            "  ConfigRuleId"
        ],
        "prefix": "config-configrule",
        "scope": "yaml"
    },
    "AWS::Config::ConfigurationAggregator": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Config::ConfigurationAggregator",
            "  Properties:",
            "    AccountAggregationSources:",
            "      AccountAggregationSources",
            "    ConfigurationAggregatorName: \"${3:String}\"",
            "    OrganizationAggregationSource:",
            "      AllAwsRegions: ${4|false,true|}",
            "      AwsRegions:",
            "        -",
            "      RoleArn: \"${6:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationaggregator.html",
            "Attributes: ",
            "  ConfigurationAggregatorArn"
        ],
        "prefix": "config-configurationaggregator",
        "scope": "yaml"
    },
    "AWS::Config::ConfigurationRecorder": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Config::ConfigurationRecorder",
            "  Properties:",
            "    Name: \"${2:String}\"",
            "    RecordingGroup:",
            "      AllSupported: ${3|false,true|}",
            "      IncludeGlobalResourceTypes: ${4|false,true|}",
            "      ResourceTypes:",
            "        -",
            "    RoleARN: \"${4:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationrecorder.html"
        ],
        "prefix": "config-configurationrecorder",
        "scope": "yaml"
    },
    "AWS::Config::ConformancePack": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Config::ConformancePack",
            "  Properties:",
            "    ConformancePackInputParameters:",
            "      ConformancePackInputParameters",
            "    ConformancePackName: \"${3:String}\" # Required",
            "    DeliveryS3Bucket: \"${4:String}\"",
            "    DeliveryS3KeyPrefix: \"${5:String}\"",
            "    TemplateBody: \"${6:String}\"",
            "    TemplateS3Uri: \"${7:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-conformancepack.html"
        ],
        "prefix": "config-conformancepack",
        "scope": "yaml"
    },
    "AWS::Config::DeliveryChannel": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Config::DeliveryChannel",
            "  Properties:",
            "    ConfigSnapshotDeliveryProperties:",
            "      DeliveryFrequency: \"${2:String}\"",
            "    Name: \"${3:String}\"",
            "    S3BucketName: \"${4:String}\" # Required",
            "    S3KeyPrefix: \"${5:String}\"",
            "    S3KmsKeyArn: \"${6:String}\"",
            "    SnsTopicARN: \"${7:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-deliverychannel.html"
        ],
        "prefix": "config-deliverychannel",
        "scope": "yaml"
    },
    "AWS::Config::OrganizationConfigRule": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Config::OrganizationConfigRule",
            "  Properties:",
            "    ExcludedAccounts:",
            "      ExcludedAccounts",
            "    OrganizationConfigRuleName: \"${3:String}\" # Required",
            "    OrganizationCustomCodeRuleMetadata:",
            "      CodeText: \"${4:String}\"",
            "      DebugLogDeliveryAccounts:",
            "        -",
            "      Description: \"${6:String}\"",
            "      InputParameters: \"${7:String}\"",
            "      MaximumExecutionFrequency: \"${8:String}\"",
            "      OrganizationConfigRuleTriggerTypes:",
            "        -",
            "      ResourceIdScope: \"${10:String}\"",
            "      ResourceTypesScope:",
            "        -",
            "      Runtime: \"${12:String}\"",
            "      TagKeyScope: \"${13:String}\"",
            "      TagValueScope: \"${14:String}\"",
            "    OrganizationCustomRuleMetadata:",
            "      Description: \"${5:String}\"",
            "      InputParameters: \"${6:String}\"",
            "      LambdaFunctionArn: \"${7:String}\"",
            "      MaximumExecutionFrequency: \"${8:String}\"",
            "      OrganizationConfigRuleTriggerTypes:",
            "        -",
            "      ResourceIdScope: \"${10:String}\"",
            "      ResourceTypesScope:",
            "        -",
            "      TagKeyScope: \"${12:String}\"",
            "      TagValueScope: \"${13:String}\"",
            "    OrganizationManagedRuleMetadata:",
            "      Description: \"${6:String}\"",
            "      InputParameters: \"${7:String}\"",
            "      MaximumExecutionFrequency: \"${8:String}\"",
            "      ResourceIdScope: \"${9:String}\"",
            "      ResourceTypesScope:",
            "        -",
            "      RuleIdentifier: \"${11:String}\"",
            "      TagKeyScope: \"${12:String}\"",
            "      TagValueScope: \"${13:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconfigrule.html"
        ],
        "prefix": "config-organizationconfigrule",
        "scope": "yaml"
    },
    "AWS::Config::OrganizationConformancePack": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Config::OrganizationConformancePack",
            "  Properties:",
            "    ConformancePackInputParameters:",
            "      ConformancePackInputParameters",
            "    DeliveryS3Bucket: \"${3:String}\"",
            "    DeliveryS3KeyPrefix: \"${4:String}\"",
            "    ExcludedAccounts:",
            "      ExcludedAccounts",
            "    OrganizationConformancePackName: \"${6:String}\" # Required",
            "    TemplateBody: \"${7:String}\"",
            "    TemplateS3Uri: \"${8:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconformancepack.html"
        ],
        "prefix": "config-organizationconformancepack",
        "scope": "yaml"
    },
    "AWS::Config::RemediationConfiguration": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Config::RemediationConfiguration",
            "  Properties:",
            "    Automatic: ${2|false,true|}",
            "    ConfigRuleName: \"${3:String}\" # Required",
            "    ExecutionControls:",
            "    MaximumAutomaticAttempts: ${5:Number}",
            "    Parameters: ${6:JSON}",
            "    ResourceType: \"${7:String}\"",
            "    RetryAttemptSeconds: ${8:Number}",
            "    TargetId: \"${9:String}\" # Required",
            "    TargetType: \"${10:String}\" # Required",
            "    TargetVersion: \"${11:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html"
        ],
        "prefix": "config-remediationconfiguration",
        "scope": "yaml"
    },
    "AWS::Config::StoredQuery": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Config::StoredQuery",
            "  Properties:",
            "    QueryDescription: \"${2:String}\"",
            "    QueryExpression: \"${3:String}\" # Required",
            "    QueryName: \"${4:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-storedquery.html",
            "Attributes: ",
            "  QueryArn",
            "  QueryId"
        ],
        "prefix": "config-storedquery",
        "scope": "yaml"
    },
    "AWS::Connect::ContactFlow": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Connect::ContactFlow",
            "  Properties:",
            "    Content: \"${2:String}\" # Required",
            "    Description: \"${3:String}\"",
            "    InstanceArn: \"${4:String}\" # Required",
            "    Name: \"${5:String}\" # Required",
            "    State: \"${6:String}\"",
            "    Tags:",
            "      Tags",
            "    Type: \"${8:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflow.html",
            "Attributes: ",
            "  ContactFlowArn"
        ],
        "prefix": "connect-contactflow",
        "scope": "yaml"
    },
    "AWS::Connect::ContactFlowModule": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Connect::ContactFlowModule",
            "  Properties:",
            "    Content: \"${2:String}\" # Required",
            "    Description: \"${3:String}\"",
            "    InstanceArn: \"${4:String}\" # Required",
            "    Name: \"${5:String}\" # Required",
            "    State: \"${6:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflowmodule.html",
            "Attributes: ",
            "  ContactFlowModuleArn",
            "  Status"
        ],
        "prefix": "connect-contactflowmodule",
        "scope": "yaml"
    },
    "AWS::Connect::HoursOfOperation": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Connect::HoursOfOperation",
            "  Properties:",
            "    Config: # Required",
            "      Config",
            "    Description: \"${3:String}\"",
            "    InstanceArn: \"${4:String}\" # Required",
            "    Name: \"${5:String}\" # Required",
            "    Tags:",
            "      Tags",
            "    TimeZone: \"${7:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-hoursofoperation.html",
            "Attributes: ",
            "  HoursOfOperationArn"
        ],
        "prefix": "connect-hoursofoperation",
        "scope": "yaml"
    },
    "AWS::Connect::PhoneNumber": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Connect::PhoneNumber",
            "  Properties:",
            "    CountryCode: \"${2:String}\" # Required",
            "    Description: \"${3:String}\"",
            "    Prefix: \"${4:String}\"",
            "    Tags:",
            "      Tags",
            "    TargetArn: \"${6:String}\" # Required",
            "    Type: \"${7:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-phonenumber.html",
            "Attributes: ",
            "  PhoneNumberArn",
            "  Address"
        ],
        "prefix": "connect-phonenumber",
        "scope": "yaml"
    },
    "AWS::Connect::QuickConnect": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Connect::QuickConnect",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    InstanceArn: \"${3:String}\" # Required",
            "    Name: \"${4:String}\" # Required",
            "    QuickConnectConfig:",
            "      QuickConnectType: \"${7:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-quickconnect.html",
            "Attributes: ",
            "  QuickConnectArn"
        ],
        "prefix": "connect-quickconnect",
        "scope": "yaml"
    },
    "AWS::Connect::User": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Connect::User",
            "  Properties:",
            "    DirectoryUserId: \"${2:String}\"",
            "    HierarchyGroupArn: \"${3:String}\"",
            "    IdentityInfo:",
            "      Email: \"${4:String}\"",
            "      FirstName: \"${5:String}\"",
            "      LastName: \"${6:String}\"",
            "    InstanceArn: \"${5:String}\" # Required",
            "    Password: \"${6:String}\"",
            "    PhoneConfig:",
            "      AfterContactWorkTimeLimit: ${7:Number}",
            "      AutoAccept: ${8|false,true|}",
            "      DeskPhoneNumber: \"${9:String}\"",
            "      PhoneType: \"${10:String}\"",
            "    RoutingProfileArn: \"${8:String}\" # Required",
            "    SecurityProfileArns: # Required",
            "      SecurityProfileArns",
            "    Tags:",
            "      Tags",
            "    Username: \"${11:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html",
            "Attributes: ",
            "  UserArn"
        ],
        "prefix": "connect-user",
        "scope": "yaml"
    },
    "AWS::Connect::UserHierarchyGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Connect::UserHierarchyGroup",
            "  Properties:",
            "    InstanceArn: \"${2:String}\" # Required",
            "    Name: \"${3:String}\" # Required",
            "    ParentGroupArn: \"${4:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-userhierarchygroup.html",
            "Attributes: ",
            "  UserHierarchyGroupArn"
        ],
        "prefix": "connect-userhierarchygroup",
        "scope": "yaml"
    },
    "AWS::CustomerProfiles::Domain": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CustomerProfiles::Domain",
            "  Properties:",
            "    DeadLetterQueueUrl: \"${2:String}\"",
            "    DefaultEncryptionKey: \"${3:String}\"",
            "    DefaultExpirationDays: ${4:Number}",
            "    DomainName: \"${5:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-domain.html",
            "Attributes: ",
            "  CreatedAt",
            "  LastUpdatedAt"
        ],
        "prefix": "customerprofiles-domain",
        "scope": "yaml"
    },
    "AWS::CustomerProfiles::Integration": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CustomerProfiles::Integration",
            "  Properties:",
            "    DomainName: \"${2:String}\" # Required",
            "    FlowDefinition:",
            "      Description: \"${3:String}\"",
            "      FlowName: \"${4:String}\"",
            "      KmsArn: \"${5:String}\"",
            "      Tasks:",
            "        -",
            "    ObjectTypeName: \"${4:String}\"",
            "    ObjectTypeNames:",
            "      ObjectTypeNames",
            "    Tags:",
            "      Tags",
            "    Uri: \"${7:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-integration.html",
            "Attributes: ",
            "  CreatedAt",
            "  LastUpdatedAt"
        ],
        "prefix": "customerprofiles-integration",
        "scope": "yaml"
    },
    "AWS::CustomerProfiles::ObjectType": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::CustomerProfiles::ObjectType",
            "  Properties:",
            "    AllowProfileCreation: ${2|false,true|}",
            "    Description: \"${3:String}\"",
            "    DomainName: \"${4:String}\" # Required",
            "    EncryptionKey: \"${5:String}\"",
            "    ExpirationDays: ${6:Number}",
            "    Fields:",
            "      Fields",
            "    Keys:",
            "      Keys",
            "    ObjectTypeName: \"${9:String}\"",
            "    Tags:",
            "      Tags",
            "    TemplateId: \"${11:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-objecttype.html",
            "Attributes: ",
            "  CreatedAt",
            "  LastUpdatedAt"
        ],
        "prefix": "customerprofiles-objecttype",
        "scope": "yaml"
    },
    "AWS::DAX::Cluster": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::DAX::Cluster",
            "  Properties:",
            "    AvailabilityZones:",
            "      AvailabilityZones",
            "    ClusterEndpointEncryptionType: \"${3:String}\"",
            "    ClusterName: \"${4:String}\"",
            "    Description: \"${5:String}\"",
            "    IAMRoleARN: \"${6:String}\" # Required",
            "    NodeType: \"${7:String}\" # Required",
            "    NotificationTopicARN: \"${8:String}\"",
            "    ParameterGroupName: \"${9:String}\"",
            "    PreferredMaintenanceWindow: \"${10:String}\"",
            "    ReplicationFactor: ${11:Number} # Required",
            "    SSESpecification:",
            "      SSEEnabled: ${12|false,true|}",
            "    SecurityGroupIds:",
            "      SecurityGroupIds",
            "    SubnetGroupName: \"${14:String}\"",
            "    Tags: ${15:JSON}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html",
            "Attributes: ",
            "  ClusterDiscoveryEndpointURL",
            "  ClusterDiscoveryEndpoint",
            "  Arn"
        ],
        "prefix": "dax-cluster",
        "scope": "yaml"
    },
    "AWS::DAX::ParameterGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::DAX::ParameterGroup",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    ParameterGroupName: \"${3:String}\"",
            "    ParameterNameValues: ${4:JSON}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-parametergroup.html"
        ],
        "prefix": "dax-parametergroup",
        "scope": "yaml"
    },
    "AWS::DAX::SubnetGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::DAX::SubnetGroup",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    SubnetGroupName: \"${3:String}\"",
            "    SubnetIds: # Required",
            "      SubnetIds"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-subnetgroup.html"
        ],
        "prefix": "dax-subnetgroup",
        "scope": "yaml"
    },
    "AWS::DLM::LifecyclePolicy": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::DLM::LifecyclePolicy",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    ExecutionRoleArn: \"${3:String}\"",
            "    PolicyDetails:",
            "      Actions:",
            "        -",
            "      PolicyType: \"${7:String}\"",
            "      ResourceLocations:",
            "        -",
            "      ResourceTypes:",
            "        -",
            "      Schedules:",
            "        -",
            "      TargetTags:",
            "        -",
            "    State: \"${5:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dlm-lifecyclepolicy.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "dlm-lifecyclepolicy",
        "scope": "yaml"
    },
    "AWS::DMS::Certificate": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::DMS::Certificate",
            "  Properties:",
            "    CertificateIdentifier: \"${2:String}\"",
            "    CertificatePem: \"${3:String}\"",
            "    CertificateWallet: \"${4:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-certificate.html"
        ],
        "prefix": "dms-certificate",
        "scope": "yaml"
    },
    "AWS::DMS::Endpoint": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::DMS::Endpoint",
            "  Properties:",
            "    CertificateArn: \"${2:String}\"",
            "    DatabaseName: \"${3:String}\"",
            "    DocDbSettings:",
            "      DocsToInvestigate: ${4:Number}",
            "      ExtractDocId: ${5|false,true|}",
            "      NestingLevel: \"${6:String}\"",
            "      SecretsManagerAccessRoleArn: \"${7:String}\"",
            "      SecretsManagerSecretId: \"${8:String}\"",
            "    DynamoDbSettings:",
            "      ServiceAccessRoleArn: \"${5:String}\"",
            "    ElasticsearchSettings:",
            "      EndpointUri: \"${6:String}\"",
            "      ErrorRetryDuration: ${7:Number}",
            "      FullLoadErrorPercentage: ${8:Number}",
            "      ServiceAccessRoleArn: \"${9:String}\"",
            "    EndpointIdentifier: \"${7:String}\"",
            "    EndpointType: \"${8:String}\" # Required",
            "    EngineName: \"${9:String}\" # Required",
            "    ExtraConnectionAttributes: \"${10:String}\"",
            "    GcpMySQLSettings:",
            "      AfterConnectScript: \"${11:String}\"",
            "      CleanSourceMetadataOnMismatch: ${12|false,true|}",
            "      DatabaseName: \"${13:String}\"",
            "      EventsPollInterval: ${14:Number}",
            "      MaxFileSize: ${15:Number}",
            "      ParallelLoadThreads: ${16:Number}",
            "      Password: \"${17:String}\"",
            "      Port: ${18:Number}",
            "      SecretsManagerAccessRoleArn: \"${19:String}\"",
            "      SecretsManagerSecretId: \"${20:String}\"",
            "      ServerName: \"${21:String}\"",
            "      ServerTimezone: \"${22:String}\"",
            "      Username: \"${23:String}\"",
            "    IbmDb2Settings:",
            "      CurrentLsn: \"${12:String}\"",
            "      MaxKBytesPerRead: ${13:Number}",
            "      SecretsManagerAccessRoleArn: \"${14:String}\"",
            "      SecretsManagerSecretId: \"${15:String}\"",
            "      SetDataCaptureChanges: ${16|false,true|}",
            "    KafkaSettings:",
            "      Broker: \"${13:String}\"",
            "      IncludeControlDetails: ${14|false,true|}",
            "      IncludeNullAndEmpty: ${15|false,true|}",
            "      IncludePartitionValue: ${16|false,true|}",
            "      IncludeTableAlterOperations: ${17|false,true|}",
            "      IncludeTransactionDetails: ${18|false,true|}",
            "      MessageFormat: \"${19:String}\"",
            "      MessageMaxBytes: ${20:Number}",
            "      NoHexPrefix: ${21|false,true|}",
            "      PartitionIncludeSchemaTable: ${22|false,true|}",
            "      SaslPassword: \"${23:String}\"",
            "      SaslUserName: \"${24:String}\"",
            "      SecurityProtocol: \"${25:String}\"",
            "      SslCaCertificateArn: \"${26:String}\"",
            "      SslClientCertificateArn: \"${27:String}\"",
            "      SslClientKeyArn: \"${28:String}\"",
            "      SslClientKeyPassword: \"${29:String}\"",
            "      Topic: \"${30:String}\"",
            "    KinesisSettings:",
            "      IncludeControlDetails: ${14|false,true|}",
            "      IncludeNullAndEmpty: ${15|false,true|}",
            "      IncludePartitionValue: ${16|false,true|}",
            "      IncludeTableAlterOperations: ${17|false,true|}",
            "      IncludeTransactionDetails: ${18|false,true|}",
            "      MessageFormat: \"${19:String}\"",
            "      NoHexPrefix: ${20|false,true|}",
            "      PartitionIncludeSchemaTable: ${21|false,true|}",
            "      ServiceAccessRoleArn: \"${22:String}\"",
            "      StreamArn: \"${23:String}\"",
            "    KmsKeyId: \"${15:String}\"",
            "    MicrosoftSqlServerSettings:",
            "      BcpPacketSize: ${16:Number}",
            "      ControlTablesFileGroup: \"${17:String}\"",
            "      QuerySingleAlwaysOnNode: ${18|false,true|}",
            "      ReadBackupOnly: ${19|false,true|}",
            "      SafeguardPolicy: \"${20:String}\"",
            "      SecretsManagerAccessRoleArn: \"${21:String}\"",
            "      SecretsManagerSecretId: \"${22:String}\"",
            "      UseBcpFullLoad: ${23|false,true|}",
            "      UseThirdPartyBackupDevice: ${24|false,true|}",
            "    MongoDbSettings:",
            "      AuthMechanism: \"${17:String}\"",
            "      AuthSource: \"${18:String}\"",
            "      AuthType: \"${19:String}\"",
            "      DatabaseName: \"${20:String}\"",
            "      DocsToInvestigate: \"${21:String}\"",
            "      ExtractDocId: \"${22:String}\"",
            "      NestingLevel: \"${23:String}\"",
            "      Password: \"${24:String}\"",
            "      Port: ${25:Number}",
            "      SecretsManagerAccessRoleArn: \"${26:String}\"",
            "      SecretsManagerSecretId: \"${27:String}\"",
            "      ServerName: \"${28:String}\"",
            "      Username: \"${29:String}\"",
            "    MySqlSettings:",
            "      AfterConnectScript: \"${18:String}\"",
            "      CleanSourceMetadataOnMismatch: ${19|false,true|}",
            "      EventsPollInterval: ${20:Number}",
            "      MaxFileSize: ${21:Number}",
            "      ParallelLoadThreads: ${22:Number}",
            "      SecretsManagerAccessRoleArn: \"${23:String}\"",
            "      SecretsManagerSecretId: \"${24:String}\"",
            "      ServerTimezone: \"${25:String}\"",
            "      TargetDbType: \"${26:String}\"",
            "    NeptuneSettings:",
            "      ErrorRetryDuration: ${19:Number}",
            "      IamAuthEnabled: ${20|false,true|}",
            "      MaxFileSize: ${21:Number}",
            "      MaxRetryCount: ${22:Number}",
            "      S3BucketFolder: \"${23:String}\"",
            "      S3BucketName: \"${24:String}\"",
            "      ServiceAccessRoleArn: \"${25:String}\"",
            "    OracleSettings:",
            "      AccessAlternateDirectly: ${20|false,true|}",
            "      AddSupplementalLogging: ${21|false,true|}",
            "      AdditionalArchivedLogDestId: ${22:Number}",
            "      AllowSelectNestedTables: ${23|false,true|}",
            "      ArchivedLogDestId: ${24:Number}",
            "      ArchivedLogsOnly: ${25|false,true|}",
            "      AsmPassword: \"${26:String}\"",
            "      AsmServer: \"${27:String}\"",
            "      AsmUser: \"${28:String}\"",
            "      CharLengthSemantics: \"${29:String}\"",
            "      DirectPathNoLog: ${30|false,true|}",
            "      DirectPathParallelLoad: ${31|false,true|}",
            "      EnableHomogenousTablespace: ${32|false,true|}",
            "      ExtraArchivedLogDestIds:",
            "        -",
            "      FailTasksOnLobTruncation: ${34|false,true|}",
            "      NumberDatatypeScale: ${35:Number}",
            "      OraclePathPrefix: \"${36:String}\"",
            "      ParallelAsmReadThreads: ${37:Number}",
            "      ReadAheadBlocks: ${38:Number}",
            "      ReadTableSpaceName: ${39|false,true|}",
            "      ReplacePathPrefix: ${40|false,true|}",
            "      RetryInterval: ${41:Number}",
            "      SecretsManagerAccessRoleArn: \"${42:String}\"",
            "      SecretsManagerOracleAsmAccessRoleArn: \"${43:String}\"",
            "      SecretsManagerOracleAsmSecretId: \"${44:String}\"",
            "      SecretsManagerSecretId: \"${45:String}\"",
            "      SecurityDbEncryption: \"${46:String}\"",
            "      SecurityDbEncryptionName: \"${47:String}\"",
            "      SpatialDataOptionToGeoJsonFunctionName: \"${48:String}\"",
            "      StandbyDelayTime: ${49:Number}",
            "      UseAlternateFolderForOnline: ${50|false,true|}",
            "      UseBFile: ${51|false,true|}",
            "      UseDirectPathFullLoad: ${52|false,true|}",
            "      UseLogminerReader: ${53|false,true|}",
            "      UsePathPrefix: \"${54:String}\"",
            "    Password: \"${21:String}\"",
            "    Port: ${22:Number}",
            "    PostgreSqlSettings:",
            "      AfterConnectScript: \"${23:String}\"",
            "      CaptureDdls: ${24|false,true|}",
            "      DdlArtifactsSchema: \"${25:String}\"",
            "      ExecuteTimeout: ${26:Number}",
            "      FailTasksOnLobTruncation: ${27|false,true|}",
            "      HeartbeatEnable: ${28|false,true|}",
            "      HeartbeatFrequency: ${29:Number}",
            "      HeartbeatSchema: \"${30:String}\"",
            "      MaxFileSize: ${31:Number}",
            "      PluginName: \"${32:String}\"",
            "      SecretsManagerAccessRoleArn: \"${33:String}\"",
            "      SecretsManagerSecretId: \"${34:String}\"",
            "      SlotName: \"${35:String}\"",
            "    RedisSettings:",
            "      AuthPassword: \"${24:String}\"",
            "      AuthType: \"${25:String}\"",
            "      AuthUserName: \"${26:String}\"",
            "      Port: ${27:Number}",
            "      ServerName: \"${28:String}\"",
            "      SslCaCertificateArn: \"${29:String}\"",
            "      SslSecurityProtocol: \"${30:String}\"",
            "    RedshiftSettings:",
            "      AcceptAnyDate: ${25|false,true|}",
            "      AfterConnectScript: \"${26:String}\"",
            "      BucketFolder: \"${27:String}\"",
            "      BucketName: \"${28:String}\"",
            "      CaseSensitiveNames: ${29|false,true|}",
            "      CompUpdate: ${30|false,true|}",
            "      ConnectionTimeout: ${31:Number}",
            "      DateFormat: \"${32:String}\"",
            "      EmptyAsNull: ${33|false,true|}",
            "      EncryptionMode: \"${34:String}\"",
            "      ExplicitIds: ${35|false,true|}",
            "      FileTransferUploadStreams: ${36:Number}",
            "      LoadTimeout: ${37:Number}",
            "      MaxFileSize: ${38:Number}",
            "      RemoveQuotes: ${39|false,true|}",
            "      ReplaceChars: \"${40:String}\"",
            "      ReplaceInvalidChars: \"${41:String}\"",
            "      SecretsManagerAccessRoleArn: \"${42:String}\"",
            "      SecretsManagerSecretId: \"${43:String}\"",
            "      ServerSideEncryptionKmsKeyId: \"${44:String}\"",
            "      ServiceAccessRoleArn: \"${45:String}\"",
            "      TimeFormat: \"${46:String}\"",
            "      TrimBlanks: ${47|false,true|}",
            "      TruncateColumns: ${48|false,true|}",
            "      WriteBufferSize: ${49:Number}",
            "    ResourceIdentifier: \"${26:String}\"",
            "    S3Settings:",
            "      AddColumnName: ${27|false,true|}",
            "      BucketFolder: \"${28:String}\"",
            "      BucketName: \"${29:String}\"",
            "      CannedAclForObjects: \"${30:String}\"",
            "      CdcInsertsAndUpdates: ${31|false,true|}",
            "      CdcInsertsOnly: ${32|false,true|}",
            "      CdcMaxBatchInterval: ${33:Number}",
            "      CdcMinFileSize: ${34:Number}",
            "      CdcPath: \"${35:String}\"",
            "      CompressionType: \"${36:String}\"",
            "      CsvDelimiter: \"${37:String}\"",
            "      CsvNoSupValue: \"${38:String}\"",
            "      CsvNullValue: \"${39:String}\"",
            "      CsvRowDelimiter: \"${40:String}\"",
            "      DataFormat: \"${41:String}\"",
            "      DataPageSize: ${42:Number}",
            "      DatePartitionDelimiter: \"${43:String}\"",
            "      DatePartitionEnabled: ${44|false,true|}",
            "      DatePartitionSequence: \"${45:String}\"",
            "      DatePartitionTimezone: \"${46:String}\"",
            "      DictPageSizeLimit: ${47:Number}",
            "      EnableStatistics: ${48|false,true|}",
            "      EncodingType: \"${49:String}\"",
            "      EncryptionMode: \"${50:String}\"",
            "      ExternalTableDefinition: \"${51:String}\"",
            "      IgnoreHeaderRows: ${52:Number}",
            "      IncludeOpForFullLoad: ${53|false,true|}",
            "      MaxFileSize: ${54:Number}",
            "      ParquetTimestampInMillisecond: ${55|false,true|}",
            "      ParquetVersion: \"${56:String}\"",
            "      PreserveTransactions: ${57|false,true|}",
            "      Rfc4180: ${58|false,true|}",
            "      RowGroupLength: ${59:Number}",
            "      ServerSideEncryptionKmsKeyId: \"${60:String}\"",
            "      ServiceAccessRoleArn: \"${61:String}\"",
            "      TimestampColumnName: \"${62:String}\"",
            "      UseCsvNoSupValue: ${63|false,true|}",
            "      UseTaskStartTimeForFullLoadTimestamp: ${64|false,true|}",
            "    ServerName: \"${28:String}\"",
            "    SslMode: \"${29:String}\"",
            "    SybaseSettings:",
            "      SecretsManagerAccessRoleArn: \"${30:String}\"",
            "      SecretsManagerSecretId: \"${31:String}\"",
            "    Tags:",
            "      Tags",
            "    Username: \"${32:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html",
            "Attributes: ",
            "  ExternalId"
        ],
        "prefix": "dms-endpoint",
        "scope": "yaml"
    },
    "AWS::DMS::EventSubscription": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::DMS::EventSubscription",
            "  Properties:",
            "    Enabled: ${2|false,true|}",
            "    EventCategories:",
            "      EventCategories",
            "    SnsTopicArn: \"${4:String}\" # Required",
            "    SourceIds:",
            "      SourceIds",
            "    SourceType: \"${6:String}\"",
            "    SubscriptionName: \"${7:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-eventsubscription.html"
        ],
        "prefix": "dms-eventsubscription",
        "scope": "yaml"
    },
    "AWS::DMS::ReplicationInstance": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::DMS::ReplicationInstance",
            "  Properties:",
            "    AllocatedStorage: ${2:Number}",
            "    AllowMajorVersionUpgrade: ${3|false,true|}",
            "    AutoMinorVersionUpgrade: ${4|false,true|}",
            "    AvailabilityZone: \"${5:String}\"",
            "    EngineVersion: \"${6:String}\"",
            "    KmsKeyId: \"${7:String}\"",
            "    MultiAZ: ${8|false,true|}",
            "    PreferredMaintenanceWindow: \"${9:String}\"",
            "    PubliclyAccessible: ${10|false,true|}",
            "    ReplicationInstanceClass: \"${11:String}\" # Required",
            "    ReplicationInstanceIdentifier: \"${12:String}\"",
            "    ReplicationSubnetGroupIdentifier: \"${13:String}\"",
            "    ResourceIdentifier: \"${14:String}\"",
            "    Tags:",
            "      Tags",
            "    VpcSecurityGroupIds:",
            "      VpcSecurityGroupIds"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html",
            "Attributes: ",
            "  ReplicationInstancePublicIpAddresses",
            "  ReplicationInstancePrivateIpAddresses"
        ],
        "prefix": "dms-replicationinstance",
        "scope": "yaml"
    },
    "AWS::DMS::ReplicationSubnetGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::DMS::ReplicationSubnetGroup",
            "  Properties:",
            "    ReplicationSubnetGroupDescription: \"${2:String}\" # Required",
            "    ReplicationSubnetGroupIdentifier: \"${3:String}\"",
            "    SubnetIds: # Required",
            "      SubnetIds",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationsubnetgroup.html"
        ],
        "prefix": "dms-replicationsubnetgroup",
        "scope": "yaml"
    },
    "AWS::DMS::ReplicationTask": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::DMS::ReplicationTask",
            "  Properties:",
            "    CdcStartPosition: \"${2:String}\"",
            "    CdcStartTime: ${3:Number}",
            "    CdcStopPosition: \"${4:String}\"",
            "    MigrationType: \"${5:String}\" # Required",
            "    ReplicationInstanceArn: \"${6:String}\" # Required",
            "    ReplicationTaskIdentifier: \"${7:String}\"",
            "    ReplicationTaskSettings: \"${8:String}\"",
            "    ResourceIdentifier: \"${9:String}\"",
            "    SourceEndpointArn: \"${10:String}\" # Required",
            "    TableMappings: \"${11:String}\" # Required",
            "    Tags:",
            "      Tags",
            "    TargetEndpointArn: \"${13:String}\" # Required",
            "    TaskData: \"${14:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html"
        ],
        "prefix": "dms-replicationtask",
        "scope": "yaml"
    },
    "AWS::DataBrew::Dataset": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::DataBrew::Dataset",
            "  Properties:",
            "    Format: \"${2:String}\"",
            "    FormatOptions:",
            "    Input:",
            "    Name: \"${5:String}\" # Required",
            "    PathOptions:",
            "      Parameters:",
            "        -",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-dataset.html"
        ],
        "prefix": "databrew-dataset",
        "scope": "yaml"
    },
    "AWS::DataBrew::Job": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::DataBrew::Job",
            "  Properties:",
            "    DataCatalogOutputs:",
            "      DataCatalogOutputs",
            "    DatabaseOutputs:",
            "      DatabaseOutputs",
            "    DatasetName: \"${4:String}\"",
            "    EncryptionKeyArn: \"${5:String}\"",
            "    EncryptionMode: \"${6:String}\"",
            "    JobSample:",
            "      Mode: \"${7:String}\"",
            "      Size: ${8:Number}",
            "    LogSubscription: \"${8:String}\"",
            "    MaxCapacity: ${9:Number}",
            "    MaxRetries: ${10:Number}",
            "    Name: \"${11:String}\" # Required",
            "    OutputLocation:",
            "      Bucket: \"${12:String}\"",
            "      BucketOwner: \"${13:String}\"",
            "      Key: \"${14:String}\"",
            "    Outputs:",
            "      Outputs",
            "    ProfileConfiguration:",
            "      ColumnStatisticsConfigurations:",
            "        -",
            "      ProfileColumns:",
            "        -",
            "    ProjectName: \"${15:String}\"",
            "    Recipe:",
            "      Name: \"${16:String}\"",
            "      Version: \"${17:String}\"",
            "    RoleArn: \"${17:String}\" # Required",
            "    Tags:",
            "      Tags",
            "    Timeout: ${19:Number}",
            "    Type: \"${20:String}\" # Required",
            "    ValidationConfigurations:",
            "      ValidationConfigurations"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-job.html"
        ],
        "prefix": "databrew-job",
        "scope": "yaml"
    },
    "AWS::DataBrew::Project": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::DataBrew::Project",
            "  Properties:",
            "    DatasetName: \"${2:String}\" # Required",
            "    Name: \"${3:String}\" # Required",
            "    RecipeName: \"${4:String}\" # Required",
            "    RoleArn: \"${5:String}\" # Required",
            "    Sample:",
            "      Size: ${6:Number}",
            "      Type: \"${7:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-project.html"
        ],
        "prefix": "databrew-project",
        "scope": "yaml"
    },
    "AWS::DataBrew::Recipe": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::DataBrew::Recipe",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    Name: \"${3:String}\" # Required",
            "    Steps: # Required",
            "      Steps",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-recipe.html"
        ],
        "prefix": "databrew-recipe",
        "scope": "yaml"
    },
    "AWS::DataBrew::Ruleset": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::DataBrew::Ruleset",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    Name: \"${3:String}\" # Required",
            "    Rules: # Required",
            "      Rules",
            "    Tags:",
            "      Tags",
            "    TargetArn: \"${6:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-ruleset.html"
        ],
        "prefix": "databrew-ruleset",
        "scope": "yaml"
    },
    "AWS::DataBrew::Schedule": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::DataBrew::Schedule",
            "  Properties:",
            "    CronExpression: \"${2:String}\" # Required",
            "    JobNames:",
            "      JobNames",
            "    Name: \"${4:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-schedule.html"
        ],
        "prefix": "databrew-schedule",
        "scope": "yaml"
    },
    "AWS::DataPipeline::Pipeline": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::DataPipeline::Pipeline",
            "  Properties:",
            "    Activate: ${2|false,true|}",
            "    Description: \"${3:String}\"",
            "    Name: \"${4:String}\" # Required",
            "    ParameterObjects: # Required",
            "      ParameterObjects",
            "    ParameterValues:",
            "      ParameterValues",
            "    PipelineObjects:",
            "      PipelineObjects",
            "    PipelineTags:",
            "      PipelineTags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datapipeline-pipeline.html"
        ],
        "prefix": "datapipeline-pipeline",
        "scope": "yaml"
    },
    "AWS::DataSync::Agent": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::DataSync::Agent",
            "  Properties:",
            "    ActivationKey: \"${2:String}\" # Required",
            "    AgentName: \"${3:String}\"",
            "    SecurityGroupArns:",
            "      SecurityGroupArns",
            "    SubnetArns:",
            "      SubnetArns",
            "    Tags:",
            "      Tags",
            "    VpcEndpointId: \"${7:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-agent.html",
            "Attributes: ",
            "  EndpointType",
            "  AgentArn"
        ],
        "prefix": "datasync-agent",
        "scope": "yaml"
    },
    "AWS::DataSync::LocationEFS": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::DataSync::LocationEFS",
            "  Properties:",
            "    Ec2Config:",
            "      SecurityGroupArns:",
            "        -",
            "      SubnetArn: \"${3:String}\"",
            "    EfsFilesystemArn: \"${3:String}\" # Required",
            "    Subdirectory: \"${4:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationefs.html",
            "Attributes: ",
            "  LocationArn",
            "  LocationUri"
        ],
        "prefix": "datasync-locationefs",
        "scope": "yaml"
    },
    "AWS::DataSync::LocationFSxLustre": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::DataSync::LocationFSxLustre",
            "  Properties:",
            "    FsxFilesystemArn: \"${2:String}\" # Required",
            "    SecurityGroupArns: # Required",
            "      SecurityGroupArns",
            "    Subdirectory: \"${4:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationfsxlustre.html",
            "Attributes: ",
            "  LocationArn",
            "  LocationUri"
        ],
        "prefix": "datasync-locationfsxlustre",
        "scope": "yaml"
    },
    "AWS::DataSync::LocationFSxOpenZFS": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::DataSync::LocationFSxOpenZFS",
            "  Properties:",
            "    FsxFilesystemArn: \"${2:String}\" # Required",
            "    Protocol:",
            "    SecurityGroupArns: # Required",
            "      SecurityGroupArns",
            "    Subdirectory: \"${5:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationfsxopenzfs.html",
            "Attributes: ",
            "  LocationArn",
            "  LocationUri"
        ],
        "prefix": "datasync-locationfsxopenzfs",
        "scope": "yaml"
    },
    "AWS::DataSync::LocationFSxWindows": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::DataSync::LocationFSxWindows",
            "  Properties:",
            "    Domain: \"${2:String}\"",
            "    FsxFilesystemArn: \"${3:String}\" # Required",
            "    Password: \"${4:String}\" # Required",
            "    SecurityGroupArns: # Required",
            "      SecurityGroupArns",
            "    Subdirectory: \"${6:String}\"",
            "    Tags:",
            "      Tags",
            "    User: \"${8:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationfsxwindows.html",
            "Attributes: ",
            "  LocationArn",
            "  LocationUri"
        ],
        "prefix": "datasync-locationfsxwindows",
        "scope": "yaml"
    },
    "AWS::DataSync::LocationHDFS": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::DataSync::LocationHDFS",
            "  Properties:",
            "    AgentArns: # Required",
            "      AgentArns",
            "    AuthenticationType: \"${3:String}\" # Required",
            "    BlockSize: ${4:Number}",
            "    KerberosKeytab: \"${5:String}\"",
            "    KerberosKrb5Conf: \"${6:String}\"",
            "    KerberosPrincipal: \"${7:String}\"",
            "    KmsKeyProviderUri: \"${8:String}\"",
            "    NameNodes: # Required",
            "      NameNodes",
            "    QopConfiguration:",
            "      DataTransferProtection: \"${10:String}\"",
            "      RpcProtection: \"${11:String}\"",
            "    ReplicationFactor: ${11:Number}",
            "    SimpleUser: \"${12:String}\"",
            "    Subdirectory: \"${13:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationhdfs.html",
            "Attributes: ",
            "  LocationArn",
            "  LocationUri"
        ],
        "prefix": "datasync-locationhdfs",
        "scope": "yaml"
    },
    "AWS::DataSync::LocationNFS": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::DataSync::LocationNFS",
            "  Properties:",
            "    MountOptions:",
            "      Version: \"${2:String}\"",
            "    OnPremConfig:",
            "      AgentArns:",
            "        -",
            "    ServerHostname: \"${4:String}\" # Required",
            "    Subdirectory: \"${5:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationnfs.html",
            "Attributes: ",
            "  LocationArn",
            "  LocationUri"
        ],
        "prefix": "datasync-locationnfs",
        "scope": "yaml"
    },
    "AWS::DataSync::LocationObjectStorage": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::DataSync::LocationObjectStorage",
            "  Properties:",
            "    AccessKey: \"${2:String}\"",
            "    AgentArns: # Required",
            "      AgentArns",
            "    BucketName: \"${4:String}\" # Required",
            "    SecretKey: \"${5:String}\"",
            "    ServerHostname: \"${6:String}\" # Required",
            "    ServerPort: ${7:Number}",
            "    ServerProtocol: \"${8:String}\"",
            "    Subdirectory: \"${9:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html",
            "Attributes: ",
            "  LocationArn",
            "  LocationUri"
        ],
        "prefix": "datasync-locationobjectstorage",
        "scope": "yaml"
    },
    "AWS::DataSync::LocationS3": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::DataSync::LocationS3",
            "  Properties:",
            "    S3BucketArn: \"${2:String}\" # Required",
            "    S3Config:",
            "      BucketAccessRoleArn: \"${3:String}\"",
            "    S3StorageClass: \"${4:String}\"",
            "    Subdirectory: \"${5:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locations3.html",
            "Attributes: ",
            "  LocationArn",
            "  LocationUri"
        ],
        "prefix": "datasync-locations3",
        "scope": "yaml"
    },
    "AWS::DataSync::LocationSMB": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::DataSync::LocationSMB",
            "  Properties:",
            "    AgentArns: # Required",
            "      AgentArns",
            "    Domain: \"${3:String}\"",
            "    MountOptions:",
            "      Version: \"${4:String}\"",
            "    Password: \"${5:String}\" # Required",
            "    ServerHostname: \"${6:String}\" # Required",
            "    Subdirectory: \"${7:String}\" # Required",
            "    Tags:",
            "      Tags",
            "    User: \"${9:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationsmb.html",
            "Attributes: ",
            "  LocationArn",
            "  LocationUri"
        ],
        "prefix": "datasync-locationsmb",
        "scope": "yaml"
    },
    "AWS::DataSync::Task": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::DataSync::Task",
            "  Properties:",
            "    CloudWatchLogGroupArn: \"${2:String}\"",
            "    DestinationLocationArn: \"${3:String}\" # Required",
            "    Excludes:",
            "      Excludes",
            "    Includes:",
            "      Includes",
            "    Name: \"${6:String}\"",
            "    Options:",
            "      Atime: \"${7:String}\"",
            "      BytesPerSecond: ${8:Number}",
            "      Gid: \"${9:String}\"",
            "      LogLevel: \"${10:String}\"",
            "      Mtime: \"${11:String}\"",
            "      OverwriteMode: \"${12:String}\"",
            "      PosixPermissions: \"${13:String}\"",
            "      PreserveDeletedFiles: \"${14:String}\"",
            "      PreserveDevices: \"${15:String}\"",
            "      SecurityDescriptorCopyFlags: \"${16:String}\"",
            "      TaskQueueing: \"${17:String}\"",
            "      TransferMode: \"${18:String}\"",
            "      Uid: \"${19:String}\"",
            "      VerifyMode: \"${20:String}\"",
            "    Schedule:",
            "      ScheduleExpression: \"${8:String}\"",
            "    SourceLocationArn: \"${9:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-task.html",
            "Attributes: ",
            "  TaskArn",
            "  ErrorCode",
            "  ErrorDetail",
            "  Status",
            "  SourceNetworkInterfaceArns",
            "  DestinationNetworkInterfaceArns"
        ],
        "prefix": "datasync-task",
        "scope": "yaml"
    },
    "AWS::Detective::Graph": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Detective::Graph",
            "  Properties:",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-detective-graph.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "detective-graph",
        "scope": "yaml"
    },
    "AWS::Detective::MemberInvitation": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Detective::MemberInvitation",
            "  Properties:",
            "    DisableEmailNotification: ${2|false,true|}",
            "    GraphArn: \"${3:String}\" # Required",
            "    MemberEmailAddress: \"${4:String}\" # Required",
            "    MemberId: \"${5:String}\" # Required",
            "    Message: \"${6:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-detective-memberinvitation.html"
        ],
        "prefix": "detective-memberinvitation",
        "scope": "yaml"
    },
    "AWS::DevOpsGuru::NotificationChannel": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::DevOpsGuru::NotificationChannel",
            "  Properties:",
            "    Config:"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-devopsguru-notificationchannel.html",
            "Attributes: ",
            "  Id"
        ],
        "prefix": "devopsguru-notificationchannel",
        "scope": "yaml"
    },
    "AWS::DevOpsGuru::ResourceCollection": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::DevOpsGuru::ResourceCollection",
            "  Properties:",
            "    ResourceCollectionFilter:",
            "      Tags:",
            "        -"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-devopsguru-resourcecollection.html",
            "Attributes: ",
            "  ResourceCollectionType"
        ],
        "prefix": "devopsguru-resourcecollection",
        "scope": "yaml"
    },
    "AWS::DirectoryService::MicrosoftAD": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::DirectoryService::MicrosoftAD",
            "  Properties:",
            "    CreateAlias: ${2|false,true|}",
            "    Edition: \"${3:String}\"",
            "    EnableSso: ${4|false,true|}",
            "    Name: \"${5:String}\" # Required",
            "    Password: \"${6:String}\" # Required",
            "    ShortName: \"${7:String}\"",
            "    VpcSettings:",
            "      SubnetIds:",
            "        -",
            "      VpcId: \"${9:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-directoryservice-microsoftad.html",
            "Attributes: ",
            "  Alias",
            "  DnsIpAddresses"
        ],
        "prefix": "directoryservice-microsoftad",
        "scope": "yaml"
    },
    "AWS::DirectoryService::SimpleAD": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::DirectoryService::SimpleAD",
            "  Properties:",
            "    CreateAlias: ${2|false,true|}",
            "    Description: \"${3:String}\"",
            "    EnableSso: ${4|false,true|}",
            "    Name: \"${5:String}\" # Required",
            "    Password: \"${6:String}\" # Required",
            "    ShortName: \"${7:String}\"",
            "    Size: \"${8:String}\" # Required",
            "    VpcSettings:",
            "      SubnetIds:",
            "        -",
            "      VpcId: \"${10:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-directoryservice-simplead.html",
            "Attributes: ",
            "  Alias",
            "  DnsIpAddresses"
        ],
        "prefix": "directoryservice-simplead",
        "scope": "yaml"
    },
    "AWS::DocDB::DBCluster": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::DocDB::DBCluster",
            "  Properties:",
            "    AvailabilityZones:",
            "      AvailabilityZones",
            "    BackupRetentionPeriod: ${3:Number}",
            "    CopyTagsToSnapshot: ${4|false,true|}",
            "    DBClusterIdentifier: \"${5:String}\"",
            "    DBClusterParameterGroupName: \"${6:String}\"",
            "    DBSubnetGroupName: \"${7:String}\"",
            "    DeletionProtection: ${8|false,true|}",
            "    EnableCloudwatchLogsExports:",
            "      EnableCloudwatchLogsExports",
            "    EngineVersion: \"${10:String}\"",
            "    KmsKeyId: \"${11:String}\"",
            "    MasterUserPassword: \"${12:String}\"",
            "    MasterUsername: \"${13:String}\"",
            "    Port: ${14:Number}",
            "    PreferredBackupWindow: \"${15:String}\"",
            "    PreferredMaintenanceWindow: \"${16:String}\"",
            "    SnapshotIdentifier: \"${17:String}\"",
            "    StorageEncrypted: ${18|false,true|}",
            "    Tags:",
            "      Tags",
            "    VpcSecurityGroupIds:",
            "      VpcSecurityGroupIds"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html",
            "Attributes: ",
            "  ClusterResourceId",
            "  Endpoint",
            "  Port",
            "  ReadEndpoint"
        ],
        "prefix": "docdb-dbcluster",
        "scope": "yaml"
    },
    "AWS::DocDB::DBClusterParameterGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::DocDB::DBClusterParameterGroup",
            "  Properties:",
            "    Description: \"${2:String}\" # Required",
            "    Family: \"${3:String}\" # Required",
            "    Name: \"${4:String}\"",
            "    Parameters: ${5:JSON} # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbclusterparametergroup.html"
        ],
        "prefix": "docdb-dbclusterparametergroup",
        "scope": "yaml"
    },
    "AWS::DocDB::DBInstance": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::DocDB::DBInstance",
            "  Properties:",
            "    AutoMinorVersionUpgrade: ${2|false,true|}",
            "    AvailabilityZone: \"${3:String}\"",
            "    DBClusterIdentifier: \"${4:String}\" # Required",
            "    DBInstanceClass: \"${5:String}\" # Required",
            "    DBInstanceIdentifier: \"${6:String}\"",
            "    EnablePerformanceInsights: ${7|false,true|}",
            "    PreferredMaintenanceWindow: \"${8:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html",
            "Attributes: ",
            "  Endpoint",
            "  Port"
        ],
        "prefix": "docdb-dbinstance",
        "scope": "yaml"
    },
    "AWS::DocDB::DBSubnetGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::DocDB::DBSubnetGroup",
            "  Properties:",
            "    DBSubnetGroupDescription: \"${2:String}\" # Required",
            "    DBSubnetGroupName: \"${3:String}\"",
            "    SubnetIds: # Required",
            "      SubnetIds",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbsubnetgroup.html"
        ],
        "prefix": "docdb-dbsubnetgroup",
        "scope": "yaml"
    },
    "AWS::DynamoDB::GlobalTable": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::DynamoDB::GlobalTable",
            "  Properties:",
            "    AttributeDefinitions: # Required",
            "      AttributeDefinitions",
            "    BillingMode: \"${3:String}\"",
            "    GlobalSecondaryIndexes:",
            "      GlobalSecondaryIndexes",
            "    KeySchema: # Required",
            "      KeySchema",
            "    LocalSecondaryIndexes:",
            "      LocalSecondaryIndexes",
            "    Replicas: # Required",
            "      Replicas",
            "    SSESpecification:",
            "      SSEEnabled: ${8|false,true|}",
            "      SSEType: \"${9:String}\"",
            "    StreamSpecification:",
            "      StreamViewType: \"${9:String}\"",
            "    TableName: \"${10:String}\"",
            "    TimeToLiveSpecification:",
            "      AttributeName: \"${11:String}\"",
            "      Enabled: ${12|false,true|}",
            "    WriteProvisionedThroughputSettings:"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-globaltable.html",
            "Attributes: ",
            "  Arn",
            "  StreamArn",
            "  TableId"
        ],
        "prefix": "dynamodb-globaltable",
        "scope": "yaml"
    },
    "AWS::DynamoDB::Table": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::DynamoDB::Table",
            "  Properties:",
            "    AttributeDefinitions:",
            "      AttributeDefinitions",
            "    BillingMode: \"${3:String}\"",
            "    ContributorInsightsSpecification:",
            "      Enabled: ${4|false,true|}",
            "    GlobalSecondaryIndexes:",
            "      GlobalSecondaryIndexes",
            "    KeySchema: # Required",
            "      KeySchema",
            "    KinesisStreamSpecification:",
            "      StreamArn: \"${7:String}\"",
            "    LocalSecondaryIndexes:",
            "      LocalSecondaryIndexes",
            "    PointInTimeRecoverySpecification:",
            "      PointInTimeRecoveryEnabled: ${9|false,true|}",
            "    ProvisionedThroughput:",
            "      ReadCapacityUnits: ${10:Number}",
            "      WriteCapacityUnits: ${11:Number}",
            "    SSESpecification:",
            "      KMSMasterKeyId: \"${11:String}\"",
            "      SSEEnabled: ${12|false,true|}",
            "      SSEType: \"${13:String}\"",
            "    StreamSpecification:",
            "      StreamViewType: \"${12:String}\"",
            "    TableClass: \"${13:String}\"",
            "    TableName: \"${14:String}\"",
            "    Tags:",
            "      Tags",
            "    TimeToLiveSpecification:",
            "      AttributeName: \"${16:String}\"",
            "      Enabled: ${17|false,true|}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html",
            "Attributes: ",
            "  Arn",
            "  StreamArn"
        ],
        "prefix": "dynamodb-table",
        "scope": "yaml"
    },
    "AWS::EC2::CapacityReservation": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::CapacityReservation",
            "  Properties:",
            "    AvailabilityZone: \"${2:String}\" # Required",
            "    EbsOptimized: ${3|false,true|}",
            "    EndDate: \"${4:String}\"",
            "    EndDateType: \"${5:String}\"",
            "    EphemeralStorage: ${6|false,true|}",
            "    InstanceCount: ${7:Number} # Required",
            "    InstanceMatchCriteria: \"${8:String}\"",
            "    InstancePlatform: \"${9:String}\" # Required",
            "    InstanceType: \"${10:String}\" # Required",
            "    OutPostArn: \"${11:String}\"",
            "    PlacementGroupArn: \"${12:String}\"",
            "    TagSpecifications:",
            "      TagSpecifications",
            "    Tenancy: \"${14:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html",
            "Attributes: ",
            "  Tenancy",
            "  AvailableInstanceCount",
            "  AvailabilityZone",
            "  TotalInstanceCount",
            "  InstanceType"
        ],
        "prefix": "ec2-capacityreservation",
        "scope": "yaml"
    },
    "AWS::EC2::CapacityReservationFleet": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::CapacityReservationFleet",
            "  Properties:",
            "    AllocationStrategy: \"${2:String}\"",
            "    EndDate: \"${3:String}\"",
            "    InstanceMatchCriteria: \"${4:String}\"",
            "    InstanceTypeSpecifications:",
            "      InstanceTypeSpecifications",
            "    NoRemoveEndDate: ${6|false,true|}",
            "    RemoveEndDate: ${7|false,true|}",
            "    TagSpecifications:",
            "      TagSpecifications",
            "    Tenancy: \"${9:String}\"",
            "    TotalTargetCapacity: ${10:Number}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html",
            "Attributes: ",
            "  CapacityReservationFleetId"
        ],
        "prefix": "ec2-capacityreservationfleet",
        "scope": "yaml"
    },
    "AWS::EC2::CarrierGateway": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::CarrierGateway",
            "  Properties:",
            "    Tags:",
            "      Tags",
            "    VpcId: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-carriergateway.html",
            "Attributes: ",
            "  CarrierGatewayId",
            "  State",
            "  OwnerId"
        ],
        "prefix": "ec2-carriergateway",
        "scope": "yaml"
    },
    "AWS::EC2::ClientVpnAuthorizationRule": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::ClientVpnAuthorizationRule",
            "  Properties:",
            "    AccessGroupId: \"${2:String}\"",
            "    AuthorizeAllGroups: ${3|false,true|}",
            "    ClientVpnEndpointId: \"${4:String}\" # Required",
            "    Description: \"${5:String}\"",
            "    TargetNetworkCidr: \"${6:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html"
        ],
        "prefix": "ec2-clientvpnauthorizationrule",
        "scope": "yaml"
    },
    "AWS::EC2::ClientVpnEndpoint": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::ClientVpnEndpoint",
            "  Properties:",
            "    AuthenticationOptions: # Required",
            "      AuthenticationOptions",
            "    ClientCidrBlock: \"${3:String}\" # Required",
            "    ClientConnectOptions:",
            "      Enabled: ${4|false,true|}",
            "      LambdaFunctionArn: \"${5:String}\"",
            "    ClientLoginBannerOptions:",
            "      BannerText: \"${5:String}\"",
            "      Enabled: ${6|false,true|}",
            "    ConnectionLogOptions:",
            "      CloudwatchLogGroup: \"${6:String}\"",
            "      CloudwatchLogStream: \"${7:String}\"",
            "      Enabled: ${8|false,true|}",
            "    Description: \"${7:String}\"",
            "    DnsServers:",
            "      DnsServers",
            "    SecurityGroupIds:",
            "      SecurityGroupIds",
            "    SelfServicePortal: \"${10:String}\"",
            "    ServerCertificateArn: \"${11:String}\" # Required",
            "    SessionTimeoutHours: ${12:Number}",
            "    SplitTunnel: ${13|false,true|}",
            "    TagSpecifications:",
            "      TagSpecifications",
            "    TransportProtocol: \"${15:String}\"",
            "    VpcId: \"${16:String}\"",
            "    VpnPort: ${17:Number}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html"
        ],
        "prefix": "ec2-clientvpnendpoint",
        "scope": "yaml"
    },
    "AWS::EC2::ClientVpnRoute": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::ClientVpnRoute",
            "  Properties:",
            "    ClientVpnEndpointId: \"${2:String}\" # Required",
            "    Description: \"${3:String}\"",
            "    DestinationCidrBlock: \"${4:String}\" # Required",
            "    TargetVpcSubnetId: \"${5:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html"
        ],
        "prefix": "ec2-clientvpnroute",
        "scope": "yaml"
    },
    "AWS::EC2::ClientVpnTargetNetworkAssociation": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::ClientVpnTargetNetworkAssociation",
            "  Properties:",
            "    ClientVpnEndpointId: \"${2:String}\" # Required",
            "    SubnetId: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpntargetnetworkassociation.html"
        ],
        "prefix": "ec2-clientvpntargetnetworkassociation",
        "scope": "yaml"
    },
    "AWS::EC2::CustomerGateway": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::CustomerGateway",
            "  Properties:",
            "    BgpAsn: ${2:Number} # Required",
            "    IpAddress: \"${3:String}\" # Required",
            "    Tags:",
            "      Tags",
            "    Type: \"${5:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html"
        ],
        "prefix": "ec2-customergateway",
        "scope": "yaml"
    },
    "AWS::EC2::DHCPOptions": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::DHCPOptions",
            "  Properties:",
            "    DomainName: \"${2:String}\"",
            "    DomainNameServers:",
            "      DomainNameServers",
            "    NetbiosNameServers:",
            "      NetbiosNameServers",
            "    NetbiosNodeType: ${5:Number}",
            "    NtpServers:",
            "      NtpServers",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html",
            "Attributes: ",
            "  DhcpOptionsId"
        ],
        "prefix": "ec2-dhcpoptions",
        "scope": "yaml"
    },
    "AWS::EC2::EC2Fleet": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::EC2Fleet",
            "  Properties:",
            "    Context: \"${2:String}\"",
            "    ExcessCapacityTerminationPolicy: \"${3:String}\"",
            "    LaunchTemplateConfigs: # Required",
            "      LaunchTemplateConfigs",
            "    OnDemandOptions:",
            "      AllocationStrategy: \"${5:String}\"",
            "      MaxTotalPrice: \"${7:String}\"",
            "      MinTargetCapacity: ${8:Number}",
            "      SingleAvailabilityZone: ${9|false,true|}",
            "      SingleInstanceType: ${10|false,true|}",
            "    ReplaceUnhealthyInstances: ${6|false,true|}",
            "    SpotOptions:",
            "      AllocationStrategy: \"${7:String}\"",
            "      InstanceInterruptionBehavior: \"${8:String}\"",
            "      InstancePoolsToUseCount: ${9:Number}",
            "      MaxTotalPrice: \"${11:String}\"",
            "      MinTargetCapacity: ${12:Number}",
            "      SingleAvailabilityZone: ${13|false,true|}",
            "      SingleInstanceType: ${14|false,true|}",
            "    TagSpecifications:",
            "      TagSpecifications",
            "    TargetCapacitySpecification:",
            "      DefaultTargetCapacityType: \"${9:String}\"",
            "      OnDemandTargetCapacity: ${10:Number}",
            "      SpotTargetCapacity: ${11:Number}",
            "      TargetCapacityUnitType: \"${12:String}\"",
            "      TotalTargetCapacity: ${13:Number}",
            "    TerminateInstancesWithExpiration: ${10|false,true|}",
            "    Type: \"${11:String}\"",
            "    ValidFrom: \"${12:String}\"",
            "    ValidUntil: \"${13:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html",
            "Attributes: ",
            "  FleetId"
        ],
        "prefix": "ec2-ec2fleet",
        "scope": "yaml"
    },
    "AWS::EC2::EIP": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::EIP",
            "  Properties:",
            "    Domain: \"${2:String}\"",
            "    InstanceId: \"${3:String}\"",
            "    PublicIpv4Pool: \"${4:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html",
            "Attributes: ",
            "  AllocationId"
        ],
        "prefix": "ec2-eip",
        "scope": "yaml"
    },
    "AWS::EC2::EIPAssociation": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::EIPAssociation",
            "  Properties:",
            "    AllocationId: \"${2:String}\"",
            "    EIP: \"${3:String}\"",
            "    InstanceId: \"${4:String}\"",
            "    NetworkInterfaceId: \"${5:String}\"",
            "    PrivateIpAddress: \"${6:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html"
        ],
        "prefix": "ec2-eipassociation",
        "scope": "yaml"
    },
    "AWS::EC2::EgressOnlyInternetGateway": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::EgressOnlyInternetGateway",
            "  Properties:",
            "    VpcId: \"${2:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-egressonlyinternetgateway.html",
            "Attributes: ",
            "  Id"
        ],
        "prefix": "ec2-egressonlyinternetgateway",
        "scope": "yaml"
    },
    "AWS::EC2::EnclaveCertificateIamRoleAssociation": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::EnclaveCertificateIamRoleAssociation",
            "  Properties:",
            "    CertificateArn: \"${2:String}\" # Required",
            "    RoleArn: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-enclavecertificateiamroleassociation.html",
            "Attributes: ",
            "  CertificateS3BucketName",
            "  CertificateS3ObjectKey",
            "  EncryptionKmsKeyId"
        ],
        "prefix": "ec2-enclavecertificateiamroleassociation",
        "scope": "yaml"
    },
    "AWS::EC2::FlowLog": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::FlowLog",
            "  Properties:",
            "    DeliverLogsPermissionArn: \"${2:String}\"",
            "    DestinationOptions: ${3:JSON}",
            "    LogDestination: \"${4:String}\"",
            "    LogDestinationType: \"${5:String}\"",
            "    LogFormat: \"${6:String}\"",
            "    LogGroupName: \"${7:String}\"",
            "    MaxAggregationInterval: ${8:Number}",
            "    ResourceId: \"${9:String}\" # Required",
            "    ResourceType: \"${10:String}\" # Required",
            "    Tags:",
            "      Tags",
            "    TrafficType: \"${12:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html",
            "Attributes: ",
            "  Id"
        ],
        "prefix": "ec2-flowlog",
        "scope": "yaml"
    },
    "AWS::EC2::GatewayRouteTableAssociation": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::GatewayRouteTableAssociation",
            "  Properties:",
            "    GatewayId: \"${2:String}\" # Required",
            "    RouteTableId: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-gatewayroutetableassociation.html",
            "Attributes: ",
            "  AssociationId"
        ],
        "prefix": "ec2-gatewayroutetableassociation",
        "scope": "yaml"
    },
    "AWS::EC2::Host": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::Host",
            "  Properties:",
            "    AutoPlacement: \"${2:String}\"",
            "    AvailabilityZone: \"${3:String}\" # Required",
            "    HostRecovery: \"${4:String}\"",
            "    InstanceType: \"${5:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html",
            "Attributes: ",
            "  HostId"
        ],
        "prefix": "ec2-host",
        "scope": "yaml"
    },
    "AWS::EC2::IPAM": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::IPAM",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    OperatingRegions:",
            "      OperatingRegions",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipam.html",
            "Attributes: ",
            "  IpamId",
            "  Arn",
            "  PublicDefaultScopeId",
            "  PrivateDefaultScopeId",
            "  ScopeCount"
        ],
        "prefix": "ec2-ipam",
        "scope": "yaml"
    },
    "AWS::EC2::IPAMAllocation": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::IPAMAllocation",
            "  Properties:",
            "    Cidr: \"${2:String}\"",
            "    Description: \"${3:String}\"",
            "    IpamPoolId: \"${4:String}\" # Required",
            "    NetmaskLength: ${5:Number}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamallocation.html",
            "Attributes: ",
            "  IpamPoolAllocationId"
        ],
        "prefix": "ec2-ipamallocation",
        "scope": "yaml"
    },
    "AWS::EC2::IPAMPool": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::IPAMPool",
            "  Properties:",
            "    AddressFamily: \"${2:String}\" # Required",
            "    AllocationDefaultNetmaskLength: ${3:Number}",
            "    AllocationMaxNetmaskLength: ${4:Number}",
            "    AllocationMinNetmaskLength: ${5:Number}",
            "    AllocationResourceTags:",
            "      AllocationResourceTags",
            "    AutoImport: ${7|false,true|}",
            "    Description: \"${8:String}\"",
            "    IpamScopeId: \"${9:String}\" # Required",
            "    Locale: \"${10:String}\"",
            "    ProvisionedCidrs:",
            "      ProvisionedCidrs",
            "    PubliclyAdvertisable: ${12|false,true|}",
            "    SourceIpamPoolId: \"${13:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html",
            "Attributes: ",
            "  IpamPoolId",
            "  Arn",
            "  IpamScopeArn",
            "  IpamScopeType",
            "  IpamArn",
            "  PoolDepth",
            "  State",
            "  StateMessage"
        ],
        "prefix": "ec2-ipampool",
        "scope": "yaml"
    },
    "AWS::EC2::IPAMScope": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::IPAMScope",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    IpamId: \"${3:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamscope.html",
            "Attributes: ",
            "  IpamScopeId",
            "  Arn",
            "  IpamArn",
            "  IpamScopeType",
            "  IsDefault",
            "  PoolCount"
        ],
        "prefix": "ec2-ipamscope",
        "scope": "yaml"
    },
    "AWS::EC2::Instance": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::Instance",
            "  Properties:",
            "    AdditionalInfo: \"${2:String}\"",
            "    Affinity: \"${3:String}\"",
            "    AvailabilityZone: \"${4:String}\"",
            "    BlockDeviceMappings:",
            "      BlockDeviceMappings",
            "    CpuOptions:",
            "      CoreCount: ${6:Number}",
            "      ThreadsPerCore: ${7:Number}",
            "    CreditSpecification:",
            "      CPUCredits: \"${7:String}\"",
            "    DisableApiTermination: ${8|false,true|}",
            "    EbsOptimized: ${9|false,true|}",
            "    ElasticGpuSpecifications:",
            "      ElasticGpuSpecifications",
            "    ElasticInferenceAccelerators:",
            "      ElasticInferenceAccelerators",
            "    EnclaveOptions:",
            "      Enabled: ${12|false,true|}",
            "    HibernationOptions:",
            "      Configured: ${13|false,true|}",
            "    HostId: \"${14:String}\"",
            "    HostResourceGroupArn: \"${15:String}\"",
            "    IamInstanceProfile: \"${16:String}\"",
            "    ImageId: \"${17:String}\"",
            "    InstanceInitiatedShutdownBehavior: \"${18:String}\"",
            "    InstanceType: \"${19:String}\"",
            "    Ipv6AddressCount: ${20:Number}",
            "    Ipv6Addresses:",
            "      Ipv6Addresses",
            "    KernelId: \"${22:String}\"",
            "    KeyName: \"${23:String}\"",
            "    LaunchTemplate:",
            "      LaunchTemplateId: \"${24:String}\"",
            "      LaunchTemplateName: \"${25:String}\"",
            "      Version: \"${26:String}\"",
            "    LicenseSpecifications:",
            "      LicenseSpecifications",
            "    Monitoring: ${26|false,true|}",
            "    NetworkInterfaces:",
            "      NetworkInterfaces",
            "    PlacementGroupName: \"${28:String}\"",
            "    PrivateDnsNameOptions:",
            "      EnableResourceNameDnsAAAARecord: ${29|false,true|}",
            "      EnableResourceNameDnsARecord: ${30|false,true|}",
            "      HostnameType: \"${31:String}\"",
            "    PrivateIpAddress: \"${30:String}\"",
            "    PropagateTagsToVolumeOnCreation: ${31|false,true|}",
            "    RamdiskId: \"${32:String}\"",
            "    SecurityGroupIds:",
            "      SecurityGroupIds",
            "    SecurityGroups:",
            "      SecurityGroups",
            "    SourceDestCheck: ${35|false,true|}",
            "    SsmAssociations:",
            "      SsmAssociations",
            "    SubnetId: \"${37:String}\"",
            "    Tags:",
            "      Tags",
            "    Tenancy: \"${39:String}\"",
            "    UserData: \"${40:String}\"",
            "    Volumes:",
            "      Volumes"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html",
            "Attributes: ",
            "  AvailabilityZone",
            "  PrivateDnsName",
            "  PrivateIp",
            "  PublicDnsName",
            "  PublicIp"
        ],
        "prefix": "ec2-instance",
        "scope": "yaml"
    },
    "AWS::EC2::InternetGateway": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::InternetGateway",
            "  Properties:",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-internetgateway.html",
            "Attributes: ",
            "  InternetGatewayId"
        ],
        "prefix": "ec2-internetgateway",
        "scope": "yaml"
    },
    "AWS::EC2::KeyPair": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::KeyPair",
            "  Properties:",
            "    KeyName: \"${2:String}\" # Required",
            "    KeyType: \"${3:String}\"",
            "    PublicKeyMaterial: \"${4:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-keypair.html",
            "Attributes: ",
            "  KeyFingerprint",
            "  KeyPairId"
        ],
        "prefix": "ec2-keypair",
        "scope": "yaml"
    },
    "AWS::EC2::LaunchTemplate": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::LaunchTemplate",
            "  Properties:",
            "    LaunchTemplateData:",
            "      BlockDeviceMappings:",
            "        -",
            "      DisableApiTermination: ${6|false,true|}",
            "      EbsOptimized: ${7|false,true|}",
            "      ElasticGpuSpecifications:",
            "        -",
            "      ElasticInferenceAccelerators:",
            "        -",
            "      ImageId: \"${13:String}\"",
            "      InstanceInitiatedShutdownBehavior: \"${14:String}\"",
            "      InstanceType: \"${17:String}\"",
            "      KernelId: \"${18:String}\"",
            "      KeyName: \"${19:String}\"",
            "      LicenseSpecifications:",
            "        -",
            "      NetworkInterfaces:",
            "        -",
            "      RamDiskId: \"${27:String}\"",
            "      SecurityGroupIds:",
            "        -",
            "      SecurityGroups:",
            "        -",
            "      TagSpecifications:",
            "        -",
            "      UserData: \"${31:String}\"",
            "    LaunchTemplateName: \"${3:String}\"",
            "    TagSpecifications:",
            "      TagSpecifications"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html",
            "Attributes: ",
            "  LatestVersionNumber",
            "  DefaultVersionNumber"
        ],
        "prefix": "ec2-launchtemplate",
        "scope": "yaml"
    },
    "AWS::EC2::LocalGatewayRoute": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::LocalGatewayRoute",
            "  Properties:",
            "    DestinationCidrBlock: \"${2:String}\" # Required",
            "    LocalGatewayRouteTableId: \"${3:String}\" # Required",
            "    LocalGatewayVirtualInterfaceGroupId: \"${4:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroute.html",
            "Attributes: ",
            "  State",
            "  Type"
        ],
        "prefix": "ec2-localgatewayroute",
        "scope": "yaml"
    },
    "AWS::EC2::LocalGatewayRouteTableVPCAssociation": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::LocalGatewayRouteTableVPCAssociation",
            "  Properties:",
            "    LocalGatewayRouteTableId: \"${2:String}\" # Required",
            "    Tags:",
            "      Tags",
            "    VpcId: \"${4:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroutetablevpcassociation.html",
            "Attributes: ",
            "  LocalGatewayId",
            "  LocalGatewayRouteTableVpcAssociationId",
            "  State"
        ],
        "prefix": "ec2-localgatewayroutetablevpcassociation",
        "scope": "yaml"
    },
    "AWS::EC2::NatGateway": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::NatGateway",
            "  Properties:",
            "    AllocationId: \"${2:String}\"",
            "    ConnectivityType: \"${3:String}\"",
            "    SubnetId: \"${4:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html"
        ],
        "prefix": "ec2-natgateway",
        "scope": "yaml"
    },
    "AWS::EC2::NetworkAcl": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::NetworkAcl",
            "  Properties:",
            "    Tags:",
            "      Tags",
            "    VpcId: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkacl.html",
            "Attributes: ",
            "  Id"
        ],
        "prefix": "ec2-networkacl",
        "scope": "yaml"
    },
    "AWS::EC2::NetworkAclEntry": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::NetworkAclEntry",
            "  Properties:",
            "    CidrBlock: \"${2:String}\"",
            "    Egress: ${3|false,true|}",
            "    Icmp:",
            "      Code: ${4:Number}",
            "      Type: ${5:Number}",
            "    Ipv6CidrBlock: \"${5:String}\"",
            "    NetworkAclId: \"${6:String}\" # Required",
            "    PortRange:",
            "      From: ${7:Number}",
            "      To: ${8:Number}",
            "    Protocol: ${8:Number} # Required",
            "    RuleAction: \"${9:String}\" # Required",
            "    RuleNumber: ${10:Number} # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html",
            "Attributes: ",
            "  Id"
        ],
        "prefix": "ec2-networkaclentry",
        "scope": "yaml"
    },
    "AWS::EC2::NetworkInsightsAccessScope": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::NetworkInsightsAccessScope",
            "  Properties:",
            "    ExcludePaths:",
            "      ExcludePaths",
            "    MatchPaths:",
            "      MatchPaths",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsaccessscope.html",
            "Attributes: ",
            "  NetworkInsightsAccessScopeId",
            "  NetworkInsightsAccessScopeArn",
            "  CreatedDate",
            "  UpdatedDate"
        ],
        "prefix": "ec2-networkinsightsaccessscope",
        "scope": "yaml"
    },
    "AWS::EC2::NetworkInsightsAccessScopeAnalysis": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::NetworkInsightsAccessScopeAnalysis",
            "  Properties:",
            "    NetworkInsightsAccessScopeId: \"${2:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsaccessscopeanalysis.html",
            "Attributes: ",
            "  NetworkInsightsAccessScopeAnalysisId",
            "  NetworkInsightsAccessScopeAnalysisArn",
            "  Status",
            "  StatusMessage",
            "  StartDate",
            "  EndDate",
            "  FindingsFound",
            "  AnalyzedEniCount"
        ],
        "prefix": "ec2-networkinsightsaccessscopeanalysis",
        "scope": "yaml"
    },
    "AWS::EC2::NetworkInsightsAnalysis": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::NetworkInsightsAnalysis",
            "  Properties:",
            "    FilterInArns:",
            "      FilterInArns",
            "    NetworkInsightsPathId: \"${3:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsanalysis.html",
            "Attributes: ",
            "  NetworkInsightsAnalysisId",
            "  NetworkInsightsAnalysisArn",
            "  StartDate",
            "  Status",
            "  StatusMessage",
            "  NetworkPathFound",
            "  ForwardPathComponents",
            "  ReturnPathComponents",
            "  Explanations",
            "  AlternatePathHints"
        ],
        "prefix": "ec2-networkinsightsanalysis",
        "scope": "yaml"
    },
    "AWS::EC2::NetworkInsightsPath": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::NetworkInsightsPath",
            "  Properties:",
            "    Destination: \"${2:String}\" # Required",
            "    DestinationIp: \"${3:String}\"",
            "    DestinationPort: ${4:Number}",
            "    Protocol: \"${5:String}\" # Required",
            "    Source: \"${6:String}\" # Required",
            "    SourceIp: \"${7:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html",
            "Attributes: ",
            "  NetworkInsightsPathId",
            "  NetworkInsightsPathArn",
            "  CreatedDate"
        ],
        "prefix": "ec2-networkinsightspath",
        "scope": "yaml"
    },
    "AWS::EC2::NetworkInterface": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::NetworkInterface",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    GroupSet:",
            "      GroupSet",
            "    InterfaceType: \"${4:String}\"",
            "    Ipv6AddressCount: ${5:Number}",
            "    Ipv6Addresses:",
            "      Ipv6Addresses",
            "    PrivateIpAddress: \"${7:String}\"",
            "    PrivateIpAddresses:",
            "      PrivateIpAddresses",
            "    SecondaryPrivateIpAddressCount: ${9:Number}",
            "    SourceDestCheck: ${10|false,true|}",
            "    SubnetId: \"${11:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html",
            "Attributes: ",
            "  PrimaryPrivateIpAddress",
            "  SecondaryPrivateIpAddresses",
            "  Id"
        ],
        "prefix": "ec2-networkinterface",
        "scope": "yaml"
    },
    "AWS::EC2::NetworkInterfaceAttachment": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::NetworkInterfaceAttachment",
            "  Properties:",
            "    DeleteOnTermination: ${2|false,true|}",
            "    DeviceIndex: \"${3:String}\" # Required",
            "    InstanceId: \"${4:String}\" # Required",
            "    NetworkInterfaceId: \"${5:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html"
        ],
        "prefix": "ec2-networkinterfaceattachment",
        "scope": "yaml"
    },
    "AWS::EC2::NetworkInterfacePermission": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::NetworkInterfacePermission",
            "  Properties:",
            "    AwsAccountId: \"${2:String}\" # Required",
            "    NetworkInterfaceId: \"${3:String}\" # Required",
            "    Permission: \"${4:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html"
        ],
        "prefix": "ec2-networkinterfacepermission",
        "scope": "yaml"
    },
    "AWS::EC2::PlacementGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::PlacementGroup",
            "  Properties:",
            "    Strategy: \"${2:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-placementgroup.html"
        ],
        "prefix": "ec2-placementgroup",
        "scope": "yaml"
    },
    "AWS::EC2::PrefixList": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::PrefixList",
            "  Properties:",
            "    AddressFamily: \"${2:String}\" # Required",
            "    Entries:",
            "      Entries",
            "    MaxEntries: ${4:Number} # Required",
            "    PrefixListName: \"${5:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-prefixlist.html",
            "Attributes: ",
            "  PrefixListId",
            "  OwnerId",
            "  Version",
            "  Arn"
        ],
        "prefix": "ec2-prefixlist",
        "scope": "yaml"
    },
    "AWS::EC2::Route": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::Route",
            "  Properties:",
            "    CarrierGatewayId: \"${2:String}\"",
            "    DestinationCidrBlock: \"${3:String}\"",
            "    DestinationIpv6CidrBlock: \"${4:String}\"",
            "    EgressOnlyInternetGatewayId: \"${5:String}\"",
            "    GatewayId: \"${6:String}\"",
            "    InstanceId: \"${7:String}\"",
            "    LocalGatewayId: \"${8:String}\"",
            "    NatGatewayId: \"${9:String}\"",
            "    NetworkInterfaceId: \"${10:String}\"",
            "    RouteTableId: \"${11:String}\" # Required",
            "    TransitGatewayId: \"${12:String}\"",
            "    VpcEndpointId: \"${13:String}\"",
            "    VpcPeeringConnectionId: \"${14:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html"
        ],
        "prefix": "ec2-route",
        "scope": "yaml"
    },
    "AWS::EC2::RouteTable": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::RouteTable",
            "  Properties:",
            "    Tags:",
            "      Tags",
            "    VpcId: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routetable.html",
            "Attributes: ",
            "  RouteTableId"
        ],
        "prefix": "ec2-routetable",
        "scope": "yaml"
    },
    "AWS::EC2::SecurityGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::SecurityGroup",
            "  Properties:",
            "    GroupDescription: \"${2:String}\" # Required",
            "    GroupName: \"${3:String}\"",
            "    SecurityGroupEgress:",
            "      SecurityGroupEgress",
            "    SecurityGroupIngress:",
            "      SecurityGroupIngress",
            "    Tags:",
            "      Tags",
            "    VpcId: \"${7:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html",
            "Attributes: ",
            "  GroupId",
            "  VpcId"
        ],
        "prefix": "ec2-securitygroup",
        "scope": "yaml"
    },
    "AWS::EC2::SecurityGroupEgress": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::SecurityGroupEgress",
            "  Properties:",
            "    CidrIp: \"${2:String}\"",
            "    CidrIpv6: \"${3:String}\"",
            "    Description: \"${4:String}\"",
            "    DestinationPrefixListId: \"${5:String}\"",
            "    DestinationSecurityGroupId: \"${6:String}\"",
            "    FromPort: ${7:Number}",
            "    GroupId: \"${8:String}\" # Required",
            "    IpProtocol: \"${9:String}\" # Required",
            "    ToPort: ${10:Number}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html"
        ],
        "prefix": "ec2-securitygroupegress",
        "scope": "yaml"
    },
    "AWS::EC2::SecurityGroupIngress": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::SecurityGroupIngress",
            "  Properties:",
            "    CidrIp: \"${2:String}\"",
            "    CidrIpv6: \"${3:String}\"",
            "    Description: \"${4:String}\"",
            "    FromPort: ${5:Number}",
            "    GroupId: \"${6:String}\"",
            "    GroupName: \"${7:String}\"",
            "    IpProtocol: \"${8:String}\" # Required",
            "    SourcePrefixListId: \"${9:String}\"",
            "    SourceSecurityGroupId: \"${10:String}\"",
            "    SourceSecurityGroupName: \"${11:String}\"",
            "    SourceSecurityGroupOwnerId: \"${12:String}\"",
            "    ToPort: ${13:Number}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html"
        ],
        "prefix": "ec2-securitygroupingress",
        "scope": "yaml"
    },
    "AWS::EC2::SpotFleet": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::SpotFleet",
            "  Properties:",
            "    SpotFleetRequestConfigData:",
            "      AllocationStrategy: \"${2:String}\"",
            "      Context: \"${3:String}\"",
            "      ExcessCapacityTerminationPolicy: \"${4:String}\"",
            "      IamFleetRole: \"${5:String}\"",
            "      InstanceInterruptionBehavior: \"${6:String}\"",
            "      InstancePoolsToUseCount: ${7:Number}",
            "      LaunchSpecifications:",
            "        -",
            "      LaunchTemplateConfigs:",
            "        -",
            "      OnDemandAllocationStrategy: \"${11:String}\"",
            "      OnDemandMaxTotalPrice: \"${12:String}\"",
            "      OnDemandTargetCapacity: ${13:Number}",
            "      ReplaceUnhealthyInstances: ${14|false,true|}",
            "      SpotMaxTotalPrice: \"${16:String}\"",
            "      SpotPrice: \"${17:String}\"",
            "      TargetCapacity: ${18:Number}",
            "      TargetCapacityUnitType: \"${19:String}\"",
            "      TerminateInstancesWithExpiration: ${20|false,true|}",
            "      Type: \"${21:String}\"",
            "      ValidFrom: \"${22:String}\"",
            "      ValidUntil: \"${23:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-spotfleet.html",
            "Attributes: ",
            "  Id"
        ],
        "prefix": "ec2-spotfleet",
        "scope": "yaml"
    },
    "AWS::EC2::Subnet": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::Subnet",
            "  Properties:",
            "    AssignIpv6AddressOnCreation: ${2|false,true|}",
            "    AvailabilityZone: \"${3:String}\"",
            "    AvailabilityZoneId: \"${4:String}\"",
            "    CidrBlock: \"${5:String}\"",
            "    EnableDns64: ${6|false,true|}",
            "    Ipv6CidrBlock: \"${7:String}\"",
            "    Ipv6Native: ${8|false,true|}",
            "    MapPublicIpOnLaunch: ${9|false,true|}",
            "    OutpostArn: \"${10:String}\"",
            "    PrivateDnsNameOptionsOnLaunch: ${11:JSON}",
            "    Tags:",
            "      Tags",
            "    VpcId: \"${13:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html",
            "Attributes: ",
            "  VpcId",
            "  NetworkAclAssociationId",
            "  AvailabilityZone",
            "  SubnetId",
            "  Ipv6CidrBlocks",
            "  OutpostArn"
        ],
        "prefix": "ec2-subnet",
        "scope": "yaml"
    },
    "AWS::EC2::SubnetCidrBlock": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::SubnetCidrBlock",
            "  Properties:",
            "    Ipv6CidrBlock: \"${2:String}\" # Required",
            "    SubnetId: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetcidrblock.html"
        ],
        "prefix": "ec2-subnetcidrblock",
        "scope": "yaml"
    },
    "AWS::EC2::SubnetNetworkAclAssociation": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::SubnetNetworkAclAssociation",
            "  Properties:",
            "    NetworkAclId: \"${2:String}\" # Required",
            "    SubnetId: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-network-acl-assoc.html",
            "Attributes: ",
            "  AssociationId"
        ],
        "prefix": "ec2-subnetnetworkaclassociation",
        "scope": "yaml"
    },
    "AWS::EC2::SubnetRouteTableAssociation": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::SubnetRouteTableAssociation",
            "  Properties:",
            "    RouteTableId: \"${2:String}\" # Required",
            "    SubnetId: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetroutetableassociation.html",
            "Attributes: ",
            "  Id"
        ],
        "prefix": "ec2-subnetroutetableassociation",
        "scope": "yaml"
    },
    "AWS::EC2::TrafficMirrorFilter": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::TrafficMirrorFilter",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    NetworkServices:",
            "      NetworkServices",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilter.html"
        ],
        "prefix": "ec2-trafficmirrorfilter",
        "scope": "yaml"
    },
    "AWS::EC2::TrafficMirrorFilterRule": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::TrafficMirrorFilterRule",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    DestinationCidrBlock: \"${3:String}\" # Required",
            "    DestinationPortRange:",
            "      FromPort: ${4:Number}",
            "      ToPort: ${5:Number}",
            "    Protocol: ${5:Number}",
            "    RuleAction: \"${6:String}\" # Required",
            "    RuleNumber: ${7:Number} # Required",
            "    SourceCidrBlock: \"${8:String}\" # Required",
            "    SourcePortRange:",
            "      FromPort: ${9:Number}",
            "      ToPort: ${10:Number}",
            "    TrafficDirection: \"${10:String}\" # Required",
            "    TrafficMirrorFilterId: \"${11:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html"
        ],
        "prefix": "ec2-trafficmirrorfilterrule",
        "scope": "yaml"
    },
    "AWS::EC2::TrafficMirrorSession": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::TrafficMirrorSession",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    NetworkInterfaceId: \"${3:String}\" # Required",
            "    PacketLength: ${4:Number}",
            "    SessionNumber: ${5:Number} # Required",
            "    Tags:",
            "      Tags",
            "    TrafficMirrorFilterId: \"${7:String}\" # Required",
            "    TrafficMirrorTargetId: \"${8:String}\" # Required",
            "    VirtualNetworkId: ${9:Number}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html"
        ],
        "prefix": "ec2-trafficmirrorsession",
        "scope": "yaml"
    },
    "AWS::EC2::TrafficMirrorTarget": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::TrafficMirrorTarget",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    GatewayLoadBalancerEndpointId: \"${3:String}\"",
            "    NetworkInterfaceId: \"${4:String}\"",
            "    NetworkLoadBalancerArn: \"${5:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrortarget.html"
        ],
        "prefix": "ec2-trafficmirrortarget",
        "scope": "yaml"
    },
    "AWS::EC2::TransitGateway": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::TransitGateway",
            "  Properties:",
            "    AmazonSideAsn: ${2:Number}",
            "    AssociationDefaultRouteTableId: \"${3:String}\"",
            "    AutoAcceptSharedAttachments: \"${4:String}\"",
            "    DefaultRouteTableAssociation: \"${5:String}\"",
            "    DefaultRouteTablePropagation: \"${6:String}\"",
            "    Description: \"${7:String}\"",
            "    DnsSupport: \"${8:String}\"",
            "    MulticastSupport: \"${9:String}\"",
            "    PropagationDefaultRouteTableId: \"${10:String}\"",
            "    Tags:",
            "      Tags",
            "    TransitGatewayCidrBlocks:",
            "      TransitGatewayCidrBlocks",
            "    VpnEcmpSupport: \"${13:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html",
            "Attributes: ",
            "  Id"
        ],
        "prefix": "ec2-transitgateway",
        "scope": "yaml"
    },
    "AWS::EC2::TransitGatewayAttachment": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::TransitGatewayAttachment",
            "  Properties:",
            "    SubnetIds: # Required",
            "      SubnetIds",
            "    Tags:",
            "      Tags",
            "    TransitGatewayId: \"${4:String}\" # Required",
            "    VpcId: \"${5:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html",
            "Attributes: ",
            "  Id"
        ],
        "prefix": "ec2-transitgatewayattachment",
        "scope": "yaml"
    },
    "AWS::EC2::TransitGatewayConnect": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::TransitGatewayConnect",
            "  Properties:",
            "    Options:",
            "      Protocol: \"${2:String}\"",
            "    Tags:",
            "      Tags",
            "    TransportTransitGatewayAttachmentId: \"${4:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayconnect.html",
            "Attributes: ",
            "  TransitGatewayAttachmentId",
            "  TransitGatewayId",
            "  State",
            "  CreationTime"
        ],
        "prefix": "ec2-transitgatewayconnect",
        "scope": "yaml"
    },
    "AWS::EC2::TransitGatewayMulticastDomain": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::TransitGatewayMulticastDomain",
            "  Properties:",
            "    Options: ${2:JSON}",
            "    Tags:",
            "      Tags",
            "    TransitGatewayId: \"${4:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomain.html",
            "Attributes: ",
            "  TransitGatewayMulticastDomainId",
            "  TransitGatewayMulticastDomainArn",
            "  State",
            "  CreationTime"
        ],
        "prefix": "ec2-transitgatewaymulticastdomain",
        "scope": "yaml"
    },
    "AWS::EC2::TransitGatewayMulticastDomainAssociation": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::TransitGatewayMulticastDomainAssociation",
            "  Properties:",
            "    SubnetId: \"${2:String}\" # Required",
            "    TransitGatewayAttachmentId: \"${3:String}\" # Required",
            "    TransitGatewayMulticastDomainId: \"${4:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomainassociation.html",
            "Attributes: ",
            "  ResourceId",
            "  ResourceType",
            "  State"
        ],
        "prefix": "ec2-transitgatewaymulticastdomainassociation",
        "scope": "yaml"
    },
    "AWS::EC2::TransitGatewayMulticastGroupMember": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::TransitGatewayMulticastGroupMember",
            "  Properties:",
            "    GroupIpAddress: \"${2:String}\" # Required",
            "    NetworkInterfaceId: \"${3:String}\" # Required",
            "    TransitGatewayMulticastDomainId: \"${4:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupmember.html",
            "Attributes: ",
            "  TransitGatewayAttachmentId",
            "  SubnetId",
            "  ResourceId",
            "  ResourceType",
            "  GroupMember",
            "  GroupSource",
            "  MemberType",
            "  SourceType"
        ],
        "prefix": "ec2-transitgatewaymulticastgroupmember",
        "scope": "yaml"
    },
    "AWS::EC2::TransitGatewayMulticastGroupSource": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::TransitGatewayMulticastGroupSource",
            "  Properties:",
            "    GroupIpAddress: \"${2:String}\" # Required",
            "    NetworkInterfaceId: \"${3:String}\" # Required",
            "    TransitGatewayMulticastDomainId: \"${4:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupsource.html",
            "Attributes: ",
            "  TransitGatewayAttachmentId",
            "  SubnetId",
            "  ResourceId",
            "  ResourceType",
            "  GroupMember",
            "  GroupSource",
            "  MemberType",
            "  SourceType"
        ],
        "prefix": "ec2-transitgatewaymulticastgroupsource",
        "scope": "yaml"
    },
    "AWS::EC2::TransitGatewayPeeringAttachment": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::TransitGatewayPeeringAttachment",
            "  Properties:",
            "    PeerAccountId: \"${2:String}\" # Required",
            "    PeerRegion: \"${3:String}\" # Required",
            "    PeerTransitGatewayId: \"${4:String}\" # Required",
            "    Tags:",
            "      Tags",
            "    TransitGatewayId: \"${6:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html",
            "Attributes: ",
            "  State",
            "  CreationTime",
            "  TransitGatewayAttachmentId"
        ],
        "prefix": "ec2-transitgatewaypeeringattachment",
        "scope": "yaml"
    },
    "AWS::EC2::TransitGatewayRoute": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::TransitGatewayRoute",
            "  Properties:",
            "    Blackhole: ${2|false,true|}",
            "    DestinationCidrBlock: \"${3:String}\"",
            "    TransitGatewayAttachmentId: \"${4:String}\"",
            "    TransitGatewayRouteTableId: \"${5:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html"
        ],
        "prefix": "ec2-transitgatewayroute",
        "scope": "yaml"
    },
    "AWS::EC2::TransitGatewayRouteTable": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::TransitGatewayRouteTable",
            "  Properties:",
            "    Tags:",
            "      Tags",
            "    TransitGatewayId: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetable.html"
        ],
        "prefix": "ec2-transitgatewayroutetable",
        "scope": "yaml"
    },
    "AWS::EC2::TransitGatewayRouteTableAssociation": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::TransitGatewayRouteTableAssociation",
            "  Properties:",
            "    TransitGatewayAttachmentId: \"${2:String}\" # Required",
            "    TransitGatewayRouteTableId: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetableassociation.html"
        ],
        "prefix": "ec2-transitgatewayroutetableassociation",
        "scope": "yaml"
    },
    "AWS::EC2::TransitGatewayRouteTablePropagation": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::TransitGatewayRouteTablePropagation",
            "  Properties:",
            "    TransitGatewayAttachmentId: \"${2:String}\" # Required",
            "    TransitGatewayRouteTableId: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetablepropagation.html"
        ],
        "prefix": "ec2-transitgatewayroutetablepropagation",
        "scope": "yaml"
    },
    "AWS::EC2::TransitGatewayVpcAttachment": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::TransitGatewayVpcAttachment",
            "  Properties:",
            "    AddSubnetIds:",
            "      AddSubnetIds",
            "    Options: ${3:JSON}",
            "    RemoveSubnetIds:",
            "      RemoveSubnetIds",
            "    SubnetIds: # Required",
            "      SubnetIds",
            "    Tags:",
            "      Tags",
            "    TransitGatewayId: \"${7:String}\" # Required",
            "    VpcId: \"${8:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html",
            "Attributes: ",
            "  Id"
        ],
        "prefix": "ec2-transitgatewayvpcattachment",
        "scope": "yaml"
    },
    "AWS::EC2::VPC": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::VPC",
            "  Properties:",
            "    CidrBlock: \"${2:String}\"",
            "    EnableDnsHostnames: ${3|false,true|}",
            "    EnableDnsSupport: ${4|false,true|}",
            "    InstanceTenancy: \"${5:String}\"",
            "    Ipv4IpamPoolId: \"${6:String}\"",
            "    Ipv4NetmaskLength: ${7:Number}",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html",
            "Attributes: ",
            "  VpcId",
            "  CidrBlock",
            "  CidrBlockAssociations",
            "  DefaultNetworkAcl",
            "  DefaultSecurityGroup",
            "  Ipv6CidrBlocks"
        ],
        "prefix": "ec2-vpc",
        "scope": "yaml"
    },
    "AWS::EC2::VPCCidrBlock": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::VPCCidrBlock",
            "  Properties:",
            "    AmazonProvidedIpv6CidrBlock: ${2|false,true|}",
            "    CidrBlock: \"${3:String}\"",
            "    Ipv4IpamPoolId: \"${4:String}\"",
            "    Ipv4NetmaskLength: ${5:Number}",
            "    Ipv6CidrBlock: \"${6:String}\"",
            "    Ipv6IpamPoolId: \"${7:String}\"",
            "    Ipv6NetmaskLength: ${8:Number}",
            "    Ipv6Pool: \"${9:String}\"",
            "    VpcId: \"${10:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html"
        ],
        "prefix": "ec2-vpccidrblock",
        "scope": "yaml"
    },
    "AWS::EC2::VPCDHCPOptionsAssociation": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::VPCDHCPOptionsAssociation",
            "  Properties:",
            "    DhcpOptionsId: \"${2:String}\" # Required",
            "    VpcId: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcdhcpoptionsassociation.html",
            "Attributes: ",
            "  Id"
        ],
        "prefix": "ec2-vpcdhcpoptionsassociation",
        "scope": "yaml"
    },
    "AWS::EC2::VPCEndpoint": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::VPCEndpoint",
            "  Properties:",
            "    PolicyDocument: ${2:JSON}",
            "    PrivateDnsEnabled: ${3|false,true|}",
            "    RouteTableIds:",
            "      RouteTableIds",
            "    SecurityGroupIds:",
            "      SecurityGroupIds",
            "    ServiceName: \"${6:String}\" # Required",
            "    SubnetIds:",
            "      SubnetIds",
            "    VpcEndpointType: \"${8:String}\"",
            "    VpcId: \"${9:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html",
            "Attributes: ",
            "  CreationTimestamp",
            "  DnsEntries",
            "  NetworkInterfaceIds"
        ],
        "prefix": "ec2-vpcendpoint",
        "scope": "yaml"
    },
    "AWS::EC2::VPCEndpointConnectionNotification": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::VPCEndpointConnectionNotification",
            "  Properties:",
            "    ConnectionEvents: # Required",
            "      ConnectionEvents",
            "    ConnectionNotificationArn: \"${3:String}\" # Required",
            "    ServiceId: \"${4:String}\"",
            "    VPCEndpointId: \"${5:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html"
        ],
        "prefix": "ec2-vpcendpointconnectionnotification",
        "scope": "yaml"
    },
    "AWS::EC2::VPCEndpointService": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::VPCEndpointService",
            "  Properties:",
            "    AcceptanceRequired: ${2|false,true|}",
            "    GatewayLoadBalancerArns:",
            "      GatewayLoadBalancerArns",
            "    NetworkLoadBalancerArns:",
            "      NetworkLoadBalancerArns",
            "    PayerResponsibility: \"${5:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html"
        ],
        "prefix": "ec2-vpcendpointservice",
        "scope": "yaml"
    },
    "AWS::EC2::VPCEndpointServicePermissions": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::VPCEndpointServicePermissions",
            "  Properties:",
            "    AllowedPrincipals:",
            "      AllowedPrincipals",
            "    ServiceId: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservicepermissions.html"
        ],
        "prefix": "ec2-vpcendpointservicepermissions",
        "scope": "yaml"
    },
    "AWS::EC2::VPCGatewayAttachment": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::VPCGatewayAttachment",
            "  Properties:",
            "    InternetGatewayId: \"${2:String}\"",
            "    VpcId: \"${3:String}\" # Required",
            "    VpnGatewayId: \"${4:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html"
        ],
        "prefix": "ec2-vpcgatewayattachment",
        "scope": "yaml"
    },
    "AWS::EC2::VPCPeeringConnection": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::VPCPeeringConnection",
            "  Properties:",
            "    PeerOwnerId: \"${2:String}\"",
            "    PeerRegion: \"${3:String}\"",
            "    PeerRoleArn: \"${4:String}\"",
            "    PeerVpcId: \"${5:String}\" # Required",
            "    Tags:",
            "      Tags",
            "    VpcId: \"${7:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html"
        ],
        "prefix": "ec2-vpcpeeringconnection",
        "scope": "yaml"
    },
    "AWS::EC2::VPNConnection": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::VPNConnection",
            "  Properties:",
            "    CustomerGatewayId: \"${2:String}\" # Required",
            "    StaticRoutesOnly: ${3|false,true|}",
            "    Tags:",
            "      Tags",
            "    TransitGatewayId: \"${5:String}\"",
            "    Type: \"${6:String}\" # Required",
            "    VpnGatewayId: \"${7:String}\"",
            "    VpnTunnelOptionsSpecifications:",
            "      VpnTunnelOptionsSpecifications"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html"
        ],
        "prefix": "ec2-vpnconnection",
        "scope": "yaml"
    },
    "AWS::EC2::VPNConnectionRoute": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::VPNConnectionRoute",
            "  Properties:",
            "    DestinationCidrBlock: \"${2:String}\" # Required",
            "    VpnConnectionId: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection-route.html"
        ],
        "prefix": "ec2-vpnconnectionroute",
        "scope": "yaml"
    },
    "AWS::EC2::VPNGateway": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::VPNGateway",
            "  Properties:",
            "    AmazonSideAsn: ${2:Number}",
            "    Tags:",
            "      Tags",
            "    Type: \"${4:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html"
        ],
        "prefix": "ec2-vpngateway",
        "scope": "yaml"
    },
    "AWS::EC2::VPNGatewayRoutePropagation": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::VPNGatewayRoutePropagation",
            "  Properties:",
            "    RouteTableIds: # Required",
            "      RouteTableIds",
            "    VpnGatewayId: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpngatewayroutepropagation.html",
            "Attributes: ",
            "  Id"
        ],
        "prefix": "ec2-vpngatewayroutepropagation",
        "scope": "yaml"
    },
    "AWS::EC2::Volume": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::Volume",
            "  Properties:",
            "    AutoEnableIO: ${2|false,true|}",
            "    AvailabilityZone: \"${3:String}\" # Required",
            "    Encrypted: ${4|false,true|}",
            "    Iops: ${5:Number}",
            "    KmsKeyId: \"${6:String}\"",
            "    MultiAttachEnabled: ${7|false,true|}",
            "    OutpostArn: \"${8:String}\"",
            "    Size: ${9:Number}",
            "    SnapshotId: \"${10:String}\"",
            "    Tags:",
            "      Tags",
            "    Throughput: ${12:Number}",
            "    VolumeType: \"${13:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html"
        ],
        "prefix": "ec2-volume",
        "scope": "yaml"
    },
    "AWS::EC2::VolumeAttachment": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EC2::VolumeAttachment",
            "  Properties:",
            "    Device: \"${2:String}\" # Required",
            "    InstanceId: \"${3:String}\" # Required",
            "    VolumeId: \"${4:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html"
        ],
        "prefix": "ec2-volumeattachment",
        "scope": "yaml"
    },
    "AWS::ECR::PublicRepository": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ECR::PublicRepository",
            "  Properties:",
            "    RepositoryCatalogData: ${2:JSON}",
            "    RepositoryName: \"${3:String}\"",
            "    RepositoryPolicyText: ${4:JSON}",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "ecr-publicrepository",
        "scope": "yaml"
    },
    "AWS::ECR::PullThroughCacheRule": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ECR::PullThroughCacheRule",
            "  Properties:",
            "    EcrRepositoryPrefix: \"${2:String}\"",
            "    UpstreamRegistryUrl: \"${3:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-pullthroughcacherule.html"
        ],
        "prefix": "ecr-pullthroughcacherule",
        "scope": "yaml"
    },
    "AWS::ECR::RegistryPolicy": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ECR::RegistryPolicy",
            "  Properties:",
            "    PolicyText: ${2:JSON} # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html",
            "Attributes: ",
            "  RegistryId"
        ],
        "prefix": "ecr-registrypolicy",
        "scope": "yaml"
    },
    "AWS::ECR::ReplicationConfiguration": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ECR::ReplicationConfiguration",
            "  Properties:",
            "    ReplicationConfiguration:",
            "      Rules:",
            "        -"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html",
            "Attributes: ",
            "  RegistryId"
        ],
        "prefix": "ecr-replicationconfiguration",
        "scope": "yaml"
    },
    "AWS::ECR::Repository": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ECR::Repository",
            "  Properties:",
            "    EncryptionConfiguration:",
            "      EncryptionType: \"${2:String}\"",
            "      KmsKey: \"${3:String}\"",
            "    ImageScanningConfiguration:",
            "      ScanOnPush: ${3|false,true|}",
            "    ImageTagMutability: \"${4:String}\"",
            "    LifecyclePolicy:",
            "      LifecyclePolicyText: \"${5:String}\"",
            "      RegistryId: \"${6:String}\"",
            "    RepositoryName: \"${6:String}\"",
            "    RepositoryPolicyText: ${7:JSON}",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html",
            "Attributes: ",
            "  Arn",
            "  RepositoryUri"
        ],
        "prefix": "ecr-repository",
        "scope": "yaml"
    },
    "AWS::ECS::CapacityProvider": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ECS::CapacityProvider",
            "  Properties:",
            "    AutoScalingGroupProvider:",
            "      AutoScalingGroupArn: \"${2:String}\"",
            "      ManagedTerminationProtection: \"${4:String}\"",
            "    Name: \"${3:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-capacityprovider.html"
        ],
        "prefix": "ecs-capacityprovider",
        "scope": "yaml"
    },
    "AWS::ECS::Cluster": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ECS::Cluster",
            "  Properties:",
            "    CapacityProviders:",
            "      CapacityProviders",
            "    ClusterName: \"${3:String}\"",
            "    ClusterSettings:",
            "      ClusterSettings",
            "    Configuration:",
            "    DefaultCapacityProviderStrategy:",
            "      DefaultCapacityProviderStrategy",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-cluster.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "ecs-cluster",
        "scope": "yaml"
    },
    "AWS::ECS::ClusterCapacityProviderAssociations": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ECS::ClusterCapacityProviderAssociations",
            "  Properties:",
            "    CapacityProviders: # Required",
            "      CapacityProviders",
            "    Cluster: \"${3:String}\" # Required",
            "    DefaultCapacityProviderStrategy: # Required",
            "      DefaultCapacityProviderStrategy"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-clustercapacityproviderassociations.html"
        ],
        "prefix": "ecs-clustercapacityproviderassociations",
        "scope": "yaml"
    },
    "AWS::ECS::PrimaryTaskSet": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ECS::PrimaryTaskSet",
            "  Properties:",
            "    Cluster: \"${2:String}\" # Required",
            "    Service: \"${3:String}\" # Required",
            "    TaskSetId: \"${4:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-primarytaskset.html"
        ],
        "prefix": "ecs-primarytaskset",
        "scope": "yaml"
    },
    "AWS::ECS::Service": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ECS::Service",
            "  Properties:",
            "    CapacityProviderStrategy:",
            "      CapacityProviderStrategy",
            "    Cluster: \"${3:String}\"",
            "    DeploymentConfiguration:",
            "      MaximumPercent: ${5:Number}",
            "      MinimumHealthyPercent: ${6:Number}",
            "    DeploymentController:",
            "      Type: \"${5:String}\"",
            "    DesiredCount: ${6:Number}",
            "    EnableECSManagedTags: ${7|false,true|}",
            "    EnableExecuteCommand: ${8|false,true|}",
            "    HealthCheckGracePeriodSeconds: ${9:Number}",
            "    LaunchType: \"${10:String}\"",
            "    LoadBalancers:",
            "      LoadBalancers",
            "    NetworkConfiguration:",
            "    PlacementConstraints:",
            "      PlacementConstraints",
            "    PlacementStrategies:",
            "      PlacementStrategies",
            "    PlatformVersion: \"${15:String}\"",
            "    PropagateTags: \"${16:String}\"",
            "    Role: \"${17:String}\"",
            "    SchedulingStrategy: \"${18:String}\"",
            "    ServiceName: \"${19:String}\"",
            "    ServiceRegistries:",
            "      ServiceRegistries",
            "    Tags:",
            "      Tags",
            "    TaskDefinition: \"${22:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html",
            "Attributes: ",
            "  ServiceArn",
            "  Name"
        ],
        "prefix": "ecs-service",
        "scope": "yaml"
    },
    "AWS::ECS::TaskDefinition": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ECS::TaskDefinition",
            "  Properties:",
            "    ContainerDefinitions:",
            "      ContainerDefinitions",
            "    Cpu: \"${3:String}\"",
            "    EphemeralStorage:",
            "      SizeInGiB: ${4:Number}",
            "    ExecutionRoleArn: \"${5:String}\"",
            "    Family: \"${6:String}\"",
            "    InferenceAccelerators:",
            "      InferenceAccelerators",
            "    IpcMode: \"${8:String}\"",
            "    Memory: \"${9:String}\"",
            "    NetworkMode: \"${10:String}\"",
            "    PidMode: \"${11:String}\"",
            "    PlacementConstraints:",
            "      PlacementConstraints",
            "    ProxyConfiguration:",
            "      ContainerName: \"${13:String}\"",
            "      ProxyConfigurationProperties:",
            "        -",
            "      Type: \"${15:String}\"",
            "    RequiresCompatibilities:",
            "      RequiresCompatibilities",
            "    RuntimePlatform:",
            "      CpuArchitecture: \"${15:String}\"",
            "      OperatingSystemFamily: \"${16:String}\"",
            "    Tags:",
            "      Tags",
            "    TaskRoleArn: \"${17:String}\"",
            "    Volumes:",
            "      Volumes"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html",
            "Attributes: ",
            "  TaskDefinitionArn"
        ],
        "prefix": "ecs-taskdefinition",
        "scope": "yaml"
    },
    "AWS::ECS::TaskSet": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ECS::TaskSet",
            "  Properties:",
            "    Cluster: \"${2:String}\" # Required",
            "    ExternalId: \"${3:String}\"",
            "    LaunchType: \"${4:String}\"",
            "    LoadBalancers:",
            "      LoadBalancers",
            "    NetworkConfiguration:",
            "    PlatformVersion: \"${7:String}\"",
            "    Scale:",
            "      Unit: \"${8:String}\"",
            "      Value: ${9:Number}",
            "    Service: \"${9:String}\" # Required",
            "    ServiceRegistries:",
            "      ServiceRegistries",
            "    TaskDefinition: \"${11:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html",
            "Attributes: ",
            "  Id"
        ],
        "prefix": "ecs-taskset",
        "scope": "yaml"
    },
    "AWS::EFS::AccessPoint": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EFS::AccessPoint",
            "  Properties:",
            "    AccessPointTags:",
            "      AccessPointTags",
            "    ClientToken: \"${3:String}\"",
            "    FileSystemId: \"${4:String}\" # Required",
            "    PosixUser:",
            "      Gid: \"${5:String}\"",
            "      SecondaryGids:",
            "        -",
            "      Uid: \"${7:String}\"",
            "    RootDirectory:",
            "      Path: \"${7:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-accesspoint.html",
            "Attributes: ",
            "  AccessPointId",
            "  Arn"
        ],
        "prefix": "efs-accesspoint",
        "scope": "yaml"
    },
    "AWS::EFS::FileSystem": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EFS::FileSystem",
            "  Properties:",
            "    AvailabilityZoneName: \"${2:String}\"",
            "    BackupPolicy:",
            "      Status: \"${3:String}\"",
            "    BypassPolicyLockoutSafetyCheck: ${4|false,true|}",
            "    Encrypted: ${5|false,true|}",
            "    FileSystemPolicy: ${6:JSON}",
            "    FileSystemTags:",
            "      FileSystemTags",
            "    KmsKeyId: \"${8:String}\"",
            "    LifecyclePolicies:",
            "      LifecyclePolicies",
            "    PerformanceMode: \"${10:String}\"",
            "    ProvisionedThroughputInMibps: ${11:Number}",
            "    ThroughputMode: \"${12:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-filesystem.html",
            "Attributes: ",
            "  FileSystemId",
            "  Arn"
        ],
        "prefix": "efs-filesystem",
        "scope": "yaml"
    },
    "AWS::EFS::MountTarget": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EFS::MountTarget",
            "  Properties:",
            "    FileSystemId: \"${2:String}\" # Required",
            "    IpAddress: \"${3:String}\"",
            "    SecurityGroups: # Required",
            "      SecurityGroups",
            "    SubnetId: \"${5:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-mounttarget.html",
            "Attributes: ",
            "  Id",
            "  IpAddress"
        ],
        "prefix": "efs-mounttarget",
        "scope": "yaml"
    },
    "AWS::EKS::Addon": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EKS::Addon",
            "  Properties:",
            "    AddonName: \"${2:String}\" # Required",
            "    AddonVersion: \"${3:String}\"",
            "    ClusterName: \"${4:String}\" # Required",
            "    ResolveConflicts: \"${5:String}\"",
            "    ServiceAccountRoleArn: \"${6:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "eks-addon",
        "scope": "yaml"
    },
    "AWS::EKS::Cluster": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EKS::Cluster",
            "  Properties:",
            "    EncryptionConfig:",
            "      EncryptionConfig",
            "    KubernetesNetworkConfig:",
            "      IpFamily: \"${3:String}\"",
            "      ServiceIpv4Cidr: \"${4:String}\"",
            "      ServiceIpv6Cidr: \"${5:String}\"",
            "    Logging:",
            "    Name: \"${5:String}\"",
            "    ResourcesVpcConfig:",
            "      EndpointPrivateAccess: ${6|false,true|}",
            "      EndpointPublicAccess: ${7|false,true|}",
            "      PublicAccessCidrs:",
            "        -",
            "      SecurityGroupIds:",
            "        -",
            "      SubnetIds:",
            "        -",
            "    RoleArn: \"${7:String}\" # Required",
            "    Tags:",
            "      Tags",
            "    Version: \"${9:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html",
            "Attributes: ",
            "  KubernetesNetworkConfig.ServiceIpv6Cidr",
            "  Arn",
            "  Endpoint",
            "  CertificateAuthorityData",
            "  ClusterSecurityGroupId",
            "  EncryptionConfigKeyArn",
            "  OpenIdConnectIssuerUrl"
        ],
        "prefix": "eks-cluster",
        "scope": "yaml"
    },
    "AWS::EKS::FargateProfile": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EKS::FargateProfile",
            "  Properties:",
            "    ClusterName: \"${2:String}\" # Required",
            "    FargateProfileName: \"${3:String}\"",
            "    PodExecutionRoleArn: \"${4:String}\" # Required",
            "    Selectors: # Required",
            "      Selectors",
            "    Subnets:",
            "      Subnets",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "eks-fargateprofile",
        "scope": "yaml"
    },
    "AWS::EKS::IdentityProviderConfig": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EKS::IdentityProviderConfig",
            "  Properties:",
            "    ClusterName: \"${2:String}\" # Required",
            "    IdentityProviderConfigName: \"${3:String}\"",
            "    Oidc:",
            "      ClientId: \"${4:String}\"",
            "      GroupsClaim: \"${5:String}\"",
            "      GroupsPrefix: \"${6:String}\"",
            "      IssuerUrl: \"${7:String}\"",
            "      RequiredClaims:",
            "        -",
            "      UsernameClaim: \"${9:String}\"",
            "      UsernamePrefix: \"${10:String}\"",
            "    Tags:",
            "      Tags",
            "    Type: \"${6:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-identityproviderconfig.html",
            "Attributes: ",
            "  IdentityProviderConfigArn"
        ],
        "prefix": "eks-identityproviderconfig",
        "scope": "yaml"
    },
    "AWS::EKS::Nodegroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EKS::Nodegroup",
            "  Properties:",
            "    AmiType: \"${2:String}\"",
            "    CapacityType: \"${3:String}\"",
            "    ClusterName: \"${4:String}\" # Required",
            "    DiskSize: ${5:Number}",
            "    ForceUpdateEnabled: ${6|false,true|}",
            "    InstanceTypes:",
            "      InstanceTypes",
            "    Labels: ${8:JSON}",
            "    LaunchTemplate:",
            "      Id: \"${9:String}\"",
            "      Name: \"${10:String}\"",
            "      Version: \"${11:String}\"",
            "    NodeRole: \"${10:String}\" # Required",
            "    NodegroupName: \"${11:String}\"",
            "    ReleaseVersion: \"${12:String}\"",
            "    RemoteAccess:",
            "      Ec2SshKey: \"${13:String}\"",
            "      SourceSecurityGroups:",
            "        -",
            "    ScalingConfig:",
            "      DesiredSize: ${14:Number}",
            "      MaxSize: ${15:Number}",
            "      MinSize: ${16:Number}",
            "    Subnets: # Required",
            "      Subnets",
            "    Tags: ${16:JSON}",
            "    Taints:",
            "      Taints",
            "    UpdateConfig:",
            "      MaxUnavailable: ${18:Number}",
            "      MaxUnavailablePercentage: ${19:Number}",
            "    Version: \"${19:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html",
            "Attributes: ",
            "  ClusterName",
            "  NodegroupName",
            "  Id",
            "  Arn"
        ],
        "prefix": "eks-nodegroup",
        "scope": "yaml"
    },
    "AWS::EMR::Cluster": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EMR::Cluster",
            "  Properties:",
            "    AdditionalInfo: ${2:JSON}",
            "    Applications:",
            "      Applications",
            "    AutoScalingRole: \"${4:String}\"",
            "    BootstrapActions:",
            "      BootstrapActions",
            "    Configurations:",
            "      Configurations",
            "    CustomAmiId: \"${7:String}\"",
            "    EbsRootVolumeSize: ${8:Number}",
            "    Instances:",
            "      AdditionalMasterSecurityGroups:",
            "        -",
            "      AdditionalSlaveSecurityGroups:",
            "        -",
            "      Ec2KeyName: \"${13:String}\"",
            "      Ec2SubnetId: \"${14:String}\"",
            "      Ec2SubnetIds:",
            "        -",
            "      EmrManagedMasterSecurityGroup: \"${16:String}\"",
            "      EmrManagedSlaveSecurityGroup: \"${17:String}\"",
            "      HadoopVersion: \"${18:String}\"",
            "      KeepJobFlowAliveWhenNoSteps: ${19|false,true|}",
            "      ServiceAccessSecurityGroup: \"${23:String}\"",
            "      TerminationProtected: ${24|false,true|}",
            "    JobFlowRole: \"${10:String}\" # Required",
            "    KerberosAttributes:",
            "      ADDomainJoinPassword: \"${11:String}\"",
            "      ADDomainJoinUser: \"${12:String}\"",
            "      CrossRealmTrustPrincipalPassword: \"${13:String}\"",
            "      KdcAdminPassword: \"${14:String}\"",
            "      Realm: \"${15:String}\"",
            "    LogEncryptionKmsKeyId: \"${12:String}\"",
            "    LogUri: \"${13:String}\"",
            "    ManagedScalingPolicy:",
            "    Name: \"${15:String}\" # Required",
            "    ReleaseLabel: \"${16:String}\"",
            "    ScaleDownBehavior: \"${17:String}\"",
            "    SecurityConfiguration: \"${18:String}\"",
            "    ServiceRole: \"${19:String}\" # Required",
            "    StepConcurrencyLevel: ${20:Number}",
            "    Steps:",
            "      Steps",
            "    Tags:",
            "      Tags",
            "    VisibleToAllUsers: ${23|false,true|}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html",
            "Attributes: ",
            "  MasterPublicDNS"
        ],
        "prefix": "emr-cluster",
        "scope": "yaml"
    },
    "AWS::EMR::InstanceFleetConfig": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EMR::InstanceFleetConfig",
            "  Properties:",
            "    ClusterId: \"${2:String}\" # Required",
            "    InstanceFleetType: \"${3:String}\" # Required",
            "    InstanceTypeConfigs:",
            "      InstanceTypeConfigs",
            "    LaunchSpecifications:",
            "    Name: \"${6:String}\"",
            "    TargetOnDemandCapacity: ${7:Number}",
            "    TargetSpotCapacity: ${8:Number}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-instancefleetconfig.html"
        ],
        "prefix": "emr-instancefleetconfig",
        "scope": "yaml"
    },
    "AWS::EMR::InstanceGroupConfig": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EMR::InstanceGroupConfig",
            "  Properties:",
            "    AutoScalingPolicy:",
            "      Rules:",
            "        -",
            "    BidPrice: \"${3:String}\"",
            "    Configurations:",
            "      Configurations",
            "    CustomAmiId: \"${5:String}\"",
            "    EbsConfiguration:",
            "      EbsBlockDeviceConfigs:",
            "        -",
            "      EbsOptimized: ${7|false,true|}",
            "    InstanceCount: ${7:Number} # Required",
            "    InstanceRole: \"${8:String}\" # Required",
            "    InstanceType: \"${9:String}\" # Required",
            "    JobFlowId: \"${10:String}\" # Required",
            "    Market: \"${11:String}\"",
            "    Name: \"${12:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-instancegroupconfig.html"
        ],
        "prefix": "emr-instancegroupconfig",
        "scope": "yaml"
    },
    "AWS::EMR::SecurityConfiguration": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EMR::SecurityConfiguration",
            "  Properties:",
            "    Name: \"${2:String}\"",
            "    SecurityConfiguration: ${3:JSON} # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-securityconfiguration.html"
        ],
        "prefix": "emr-securityconfiguration",
        "scope": "yaml"
    },
    "AWS::EMR::Step": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EMR::Step",
            "  Properties:",
            "    ActionOnFailure: \"${2:String}\" # Required",
            "    HadoopJarStep:",
            "      Args:",
            "        -",
            "      Jar: \"${4:String}\"",
            "      MainClass: \"${5:String}\"",
            "      StepProperties:",
            "        -",
            "    JobFlowId: \"${4:String}\" # Required",
            "    Name: \"${5:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-step.html"
        ],
        "prefix": "emr-step",
        "scope": "yaml"
    },
    "AWS::EMR::Studio": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EMR::Studio",
            "  Properties:",
            "    AuthMode: \"${2:String}\" # Required",
            "    DefaultS3Location: \"${3:String}\" # Required",
            "    Description: \"${4:String}\"",
            "    EngineSecurityGroupId: \"${5:String}\" # Required",
            "    IdpAuthUrl: \"${6:String}\"",
            "    IdpRelayStateParameterName: \"${7:String}\"",
            "    Name: \"${8:String}\" # Required",
            "    ServiceRole: \"${9:String}\" # Required",
            "    SubnetIds: # Required",
            "      SubnetIds",
            "    Tags:",
            "      Tags",
            "    UserRole: \"${12:String}\"",
            "    VpcId: \"${13:String}\" # Required",
            "    WorkspaceSecurityGroupId: \"${14:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html",
            "Attributes: ",
            "  Arn",
            "  StudioId",
            "  Url"
        ],
        "prefix": "emr-studio",
        "scope": "yaml"
    },
    "AWS::EMR::StudioSessionMapping": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EMR::StudioSessionMapping",
            "  Properties:",
            "    IdentityName: \"${2:String}\" # Required",
            "    IdentityType: \"${3:String}\" # Required",
            "    SessionPolicyArn: \"${4:String}\" # Required",
            "    StudioId: \"${5:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studiosessionmapping.html"
        ],
        "prefix": "emr-studiosessionmapping",
        "scope": "yaml"
    },
    "AWS::EMRContainers::VirtualCluster": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EMRContainers::VirtualCluster",
            "  Properties:",
            "    ContainerProvider:",
            "      Id: \"${2:String}\"",
            "      Type: \"${4:String}\"",
            "    Name: \"${3:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrcontainers-virtualcluster.html",
            "Attributes: ",
            "  Arn",
            "  Id"
        ],
        "prefix": "emrcontainers-virtualcluster",
        "scope": "yaml"
    },
    "AWS::ElastiCache::CacheCluster": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ElastiCache::CacheCluster",
            "  Properties:",
            "    AZMode: \"${2:String}\"",
            "    AutoMinorVersionUpgrade: ${3|false,true|}",
            "    CacheNodeType: \"${4:String}\" # Required",
            "    CacheParameterGroupName: \"${5:String}\"",
            "    CacheSecurityGroupNames:",
            "      CacheSecurityGroupNames",
            "    CacheSubnetGroupName: \"${7:String}\"",
            "    ClusterName: \"${8:String}\"",
            "    Engine: \"${9:String}\" # Required",
            "    EngineVersion: \"${10:String}\"",
            "    LogDeliveryConfigurations:",
            "      LogDeliveryConfigurations",
            "    NotificationTopicArn: \"${12:String}\"",
            "    NumCacheNodes: ${13:Number} # Required",
            "    Port: ${14:Number}",
            "    PreferredAvailabilityZone: \"${15:String}\"",
            "    PreferredAvailabilityZones:",
            "      PreferredAvailabilityZones",
            "    PreferredMaintenanceWindow: \"${17:String}\"",
            "    SnapshotArns:",
            "      SnapshotArns",
            "    SnapshotName: \"${19:String}\"",
            "    SnapshotRetentionLimit: ${20:Number}",
            "    SnapshotWindow: \"${21:String}\"",
            "    Tags:",
            "      Tags",
            "    VpcSecurityGroupIds:",
            "      VpcSecurityGroupIds"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html",
            "Attributes: ",
            "  ConfigurationEndpoint.Address",
            "  ConfigurationEndpoint.Port",
            "  RedisEndpoint.Address",
            "  RedisEndpoint.Port"
        ],
        "prefix": "elasticache-cachecluster",
        "scope": "yaml"
    },
    "AWS::ElastiCache::GlobalReplicationGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ElastiCache::GlobalReplicationGroup",
            "  Properties:",
            "    AutomaticFailoverEnabled: ${2|false,true|}",
            "    CacheNodeType: \"${3:String}\"",
            "    CacheParameterGroupName: \"${4:String}\"",
            "    EngineVersion: \"${5:String}\"",
            "    GlobalNodeGroupCount: ${6:Number}",
            "    GlobalReplicationGroupDescription: \"${7:String}\"",
            "    GlobalReplicationGroupIdSuffix: \"${8:String}\"",
            "    Members: # Required",
            "      Members",
            "    RegionalConfigurations:",
            "      RegionalConfigurations"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-globalreplicationgroup.html",
            "Attributes: ",
            "  GlobalReplicationGroupId",
            "  Status"
        ],
        "prefix": "elasticache-globalreplicationgroup",
        "scope": "yaml"
    },
    "AWS::ElastiCache::ParameterGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ElastiCache::ParameterGroup",
            "  Properties:",
            "    CacheParameterGroupFamily: \"${2:String}\" # Required",
            "    Description: \"${3:String}\" # Required",
            "    Properties:",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-parameter-group.html"
        ],
        "prefix": "elasticache-parametergroup",
        "scope": "yaml"
    },
    "AWS::ElastiCache::ReplicationGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ElastiCache::ReplicationGroup",
            "  Properties:",
            "    AtRestEncryptionEnabled: ${2|false,true|}",
            "    AuthToken: \"${3:String}\"",
            "    AutoMinorVersionUpgrade: ${4|false,true|}",
            "    AutomaticFailoverEnabled: ${5|false,true|}",
            "    CacheNodeType: \"${6:String}\"",
            "    CacheParameterGroupName: \"${7:String}\"",
            "    CacheSecurityGroupNames:",
            "      CacheSecurityGroupNames",
            "    CacheSubnetGroupName: \"${9:String}\"",
            "    DataTieringEnabled: ${10|false,true|}",
            "    Engine: \"${11:String}\"",
            "    EngineVersion: \"${12:String}\"",
            "    GlobalReplicationGroupId: \"${13:String}\"",
            "    KmsKeyId: \"${14:String}\"",
            "    LogDeliveryConfigurations:",
            "      LogDeliveryConfigurations",
            "    MultiAZEnabled: ${16|false,true|}",
            "    NodeGroupConfiguration:",
            "      NodeGroupConfiguration",
            "    NotificationTopicArn: \"${18:String}\"",
            "    NumCacheClusters: ${19:Number}",
            "    NumNodeGroups: ${20:Number}",
            "    Port: ${21:Number}",
            "    PreferredCacheClusterAZs:",
            "      PreferredCacheClusterAZs",
            "    PreferredMaintenanceWindow: \"${23:String}\"",
            "    PrimaryClusterId: \"${24:String}\"",
            "    ReplicasPerNodeGroup: ${25:Number}",
            "    ReplicationGroupDescription: \"${26:String}\" # Required",
            "    ReplicationGroupId: \"${27:String}\"",
            "    SecurityGroupIds:",
            "      SecurityGroupIds",
            "    SnapshotArns:",
            "      SnapshotArns",
            "    SnapshotName: \"${30:String}\"",
            "    SnapshotRetentionLimit: ${31:Number}",
            "    SnapshotWindow: \"${32:String}\"",
            "    SnapshottingClusterId: \"${33:String}\"",
            "    Tags:",
            "      Tags",
            "    TransitEncryptionEnabled: ${35|false,true|}",
            "    UserGroupIds:",
            "      UserGroupIds"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html",
            "Attributes: ",
            "  ConfigurationEndPoint.Address",
            "  ConfigurationEndPoint.Port",
            "  PrimaryEndPoint.Address",
            "  PrimaryEndPoint.Port",
            "  ReadEndPoint.Addresses",
            "  ReadEndPoint.Addresses.List",
            "  ReadEndPoint.Ports",
            "  ReadEndPoint.Ports.List",
            "  ReaderEndPoint.Address",
            "  ReaderEndPoint.Port"
        ],
        "prefix": "elasticache-replicationgroup",
        "scope": "yaml"
    },
    "AWS::ElastiCache::SecurityGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ElastiCache::SecurityGroup",
            "  Properties:",
            "    Description: \"${2:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-security-group.html"
        ],
        "prefix": "elasticache-securitygroup",
        "scope": "yaml"
    },
    "AWS::ElastiCache::SecurityGroupIngress": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ElastiCache::SecurityGroupIngress",
            "  Properties:",
            "    CacheSecurityGroupName: \"${2:String}\" # Required",
            "    EC2SecurityGroupName: \"${3:String}\" # Required",
            "    EC2SecurityGroupOwnerId: \"${4:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-security-group-ingress.html"
        ],
        "prefix": "elasticache-securitygroupingress",
        "scope": "yaml"
    },
    "AWS::ElastiCache::SubnetGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ElastiCache::SubnetGroup",
            "  Properties:",
            "    CacheSubnetGroupName: \"${2:String}\"",
            "    Description: \"${3:String}\" # Required",
            "    SubnetIds: # Required",
            "      SubnetIds",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-subnetgroup.html"
        ],
        "prefix": "elasticache-subnetgroup",
        "scope": "yaml"
    },
    "AWS::ElastiCache::User": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ElastiCache::User",
            "  Properties:",
            "    AccessString: \"${2:String}\"",
            "    Engine: \"${3:String}\" # Required",
            "    NoPasswordRequired: ${4|false,true|}",
            "    Passwords:",
            "      Passwords",
            "    UserId: \"${6:String}\" # Required",
            "    UserName: \"${7:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-user.html",
            "Attributes: ",
            "  Status",
            "  Arn"
        ],
        "prefix": "elasticache-user",
        "scope": "yaml"
    },
    "AWS::ElastiCache::UserGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ElastiCache::UserGroup",
            "  Properties:",
            "    Engine: \"${2:String}\" # Required",
            "    UserGroupId: \"${3:String}\" # Required",
            "    UserIds:",
            "      UserIds"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-usergroup.html",
            "Attributes: ",
            "  Status",
            "  Arn"
        ],
        "prefix": "elasticache-usergroup",
        "scope": "yaml"
    },
    "AWS::ElasticBeanstalk::Application": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ElasticBeanstalk::Application",
            "  Properties:",
            "    ApplicationName: \"${2:String}\"",
            "    Description: \"${3:String}\"",
            "    ResourceLifecycleConfig:",
            "      ServiceRole: \"${4:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk.html"
        ],
        "prefix": "elasticbeanstalk-application",
        "scope": "yaml"
    },
    "AWS::ElasticBeanstalk::ApplicationVersion": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ElasticBeanstalk::ApplicationVersion",
            "  Properties:",
            "    ApplicationName: \"${2:String}\" # Required",
            "    Description: \"${3:String}\"",
            "    SourceBundle:",
            "      S3Bucket: \"${4:String}\"",
            "      S3Key: \"${5:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-version.html"
        ],
        "prefix": "elasticbeanstalk-applicationversion",
        "scope": "yaml"
    },
    "AWS::ElasticBeanstalk::ConfigurationTemplate": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ElasticBeanstalk::ConfigurationTemplate",
            "  Properties:",
            "    ApplicationName: \"${2:String}\" # Required",
            "    Description: \"${3:String}\"",
            "    EnvironmentId: \"${4:String}\"",
            "    OptionSettings:",
            "      OptionSettings",
            "    PlatformArn: \"${6:String}\"",
            "    SolutionStackName: \"${7:String}\"",
            "    SourceConfiguration:",
            "      ApplicationName: \"${8:String}\"",
            "      TemplateName: \"${9:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticbeanstalk-configurationtemplate.html"
        ],
        "prefix": "elasticbeanstalk-configurationtemplate",
        "scope": "yaml"
    },
    "AWS::ElasticBeanstalk::Environment": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ElasticBeanstalk::Environment",
            "  Properties:",
            "    ApplicationName: \"${2:String}\" # Required",
            "    CNAMEPrefix: \"${3:String}\"",
            "    Description: \"${4:String}\"",
            "    EnvironmentName: \"${5:String}\"",
            "    OperationsRole: \"${6:String}\"",
            "    OptionSettings:",
            "      OptionSettings",
            "    PlatformArn: \"${8:String}\"",
            "    SolutionStackName: \"${9:String}\"",
            "    Tags:",
            "      Tags",
            "    TemplateName: \"${11:String}\"",
            "    Tier:",
            "      Name: \"${12:String}\"",
            "      Type: \"${13:String}\"",
            "      Version: \"${14:String}\"",
            "    VersionLabel: \"${13:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment.html",
            "Attributes: ",
            "  EndpointURL"
        ],
        "prefix": "elasticbeanstalk-environment",
        "scope": "yaml"
    },
    "AWS::ElasticLoadBalancing::LoadBalancer": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ElasticLoadBalancing::LoadBalancer",
            "  Properties:",
            "    AccessLoggingPolicy:",
            "      EmitInterval: ${2:Number}",
            "      Enabled: ${3|false,true|}",
            "      S3BucketName: \"${4:String}\"",
            "      S3BucketPrefix: \"${5:String}\"",
            "    AppCookieStickinessPolicy:",
            "      AppCookieStickinessPolicy",
            "    AvailabilityZones:",
            "      AvailabilityZones",
            "    ConnectionDrainingPolicy:",
            "      Enabled: ${5|false,true|}",
            "      Timeout: ${6:Number}",
            "    ConnectionSettings:",
            "      IdleTimeout: ${6:Number}",
            "    CrossZone: ${7|false,true|}",
            "    HealthCheck:",
            "      HealthyThreshold: \"${8:String}\"",
            "      Interval: \"${9:String}\"",
            "      Target: \"${10:String}\"",
            "      Timeout: \"${11:String}\"",
            "      UnhealthyThreshold: \"${12:String}\"",
            "    Instances:",
            "      Instances",
            "    LBCookieStickinessPolicy:",
            "      LBCookieStickinessPolicy",
            "    Listeners: # Required",
            "      Listeners",
            "    LoadBalancerName: \"${12:String}\"",
            "    Policies:",
            "      Policies",
            "    Scheme: \"${14:String}\"",
            "    SecurityGroups:",
            "      SecurityGroups",
            "    Subnets:",
            "      Subnets",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html",
            "Attributes: ",
            "  CanonicalHostedZoneName",
            "  CanonicalHostedZoneNameID",
            "  DNSName",
            "  SourceSecurityGroup.GroupName",
            "  SourceSecurityGroup.OwnerAlias"
        ],
        "prefix": "elasticloadbalancing-loadbalancer",
        "scope": "yaml"
    },
    "AWS::ElasticLoadBalancingV2::Listener": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ElasticLoadBalancingV2::Listener",
            "  Properties:",
            "    AlpnPolicy:",
            "      AlpnPolicy",
            "    Certificates:",
            "      Certificates",
            "    DefaultActions: # Required",
            "      DefaultActions",
            "    LoadBalancerArn: \"${5:String}\" # Required",
            "    Port: ${6:Number}",
            "    Protocol: \"${7:String}\"",
            "    SslPolicy: \"${8:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html",
            "Attributes: ",
            "  ListenerArn"
        ],
        "prefix": "elasticloadbalancingv2-listener",
        "scope": "yaml"
    },
    "AWS::ElasticLoadBalancingV2::ListenerCertificate": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ElasticLoadBalancingV2::ListenerCertificate",
            "  Properties:",
            "    Certificates: # Required",
            "      Certificates",
            "    ListenerArn: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenercertificate.html"
        ],
        "prefix": "elasticloadbalancingv2-listenercertificate",
        "scope": "yaml"
    },
    "AWS::ElasticLoadBalancingV2::ListenerRule": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ElasticLoadBalancingV2::ListenerRule",
            "  Properties:",
            "    Actions: # Required",
            "      Actions",
            "    Conditions: # Required",
            "      Conditions",
            "    ListenerArn: \"${4:String}\" # Required",
            "    Priority: ${5:Number} # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenerrule.html",
            "Attributes: ",
            "  RuleArn",
            "  IsDefault"
        ],
        "prefix": "elasticloadbalancingv2-listenerrule",
        "scope": "yaml"
    },
    "AWS::ElasticLoadBalancingV2::LoadBalancer": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ElasticLoadBalancingV2::LoadBalancer",
            "  Properties:",
            "    IpAddressType: \"${2:String}\"",
            "    LoadBalancerAttributes:",
            "      LoadBalancerAttributes",
            "    Name: \"${4:String}\"",
            "    Scheme: \"${5:String}\"",
            "    SecurityGroups:",
            "      SecurityGroups",
            "    SubnetMappings:",
            "      SubnetMappings",
            "    Subnets:",
            "      Subnets",
            "    Tags:",
            "      Tags",
            "    Type: \"${10:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html",
            "Attributes: ",
            "  CanonicalHostedZoneID",
            "  DNSName",
            "  LoadBalancerFullName",
            "  LoadBalancerName",
            "  SecurityGroups"
        ],
        "prefix": "elasticloadbalancingv2-loadbalancer",
        "scope": "yaml"
    },
    "AWS::ElasticLoadBalancingV2::TargetGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ElasticLoadBalancingV2::TargetGroup",
            "  Properties:",
            "    HealthCheckEnabled: ${2|false,true|}",
            "    HealthCheckIntervalSeconds: ${3:Number}",
            "    HealthCheckPath: \"${4:String}\"",
            "    HealthCheckPort: \"${5:String}\"",
            "    HealthCheckProtocol: \"${6:String}\"",
            "    HealthCheckTimeoutSeconds: ${7:Number}",
            "    HealthyThresholdCount: ${8:Number}",
            "    IpAddressType: \"${9:String}\"",
            "    Matcher:",
            "      GrpcCode: \"${10:String}\"",
            "      HttpCode: \"${11:String}\"",
            "    Name: \"${11:String}\"",
            "    Port: ${12:Number}",
            "    Protocol: \"${13:String}\"",
            "    ProtocolVersion: \"${14:String}\"",
            "    Tags:",
            "      Tags",
            "    TargetGroupAttributes:",
            "      TargetGroupAttributes",
            "    TargetType: \"${17:String}\"",
            "    Targets:",
            "      Targets",
            "    UnhealthyThresholdCount: ${19:Number}",
            "    VpcId: \"${20:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html",
            "Attributes: ",
            "  LoadBalancerArns",
            "  TargetGroupFullName",
            "  TargetGroupName"
        ],
        "prefix": "elasticloadbalancingv2-targetgroup",
        "scope": "yaml"
    },
    "AWS::Elasticsearch::Domain": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Elasticsearch::Domain",
            "  Properties:",
            "    AccessPolicies: ${2:JSON}",
            "    AdvancedOptions:",
            "    AdvancedSecurityOptions:",
            "      Enabled: ${4|false,true|}",
            "      InternalUserDatabaseEnabled: ${5|false,true|}",
            "    CognitoOptions:",
            "      Enabled: ${5|false,true|}",
            "      IdentityPoolId: \"${6:String}\"",
            "      RoleArn: \"${7:String}\"",
            "      UserPoolId: \"${8:String}\"",
            "    DomainEndpointOptions:",
            "      CustomEndpoint: \"${6:String}\"",
            "      CustomEndpointCertificateArn: \"${7:String}\"",
            "      CustomEndpointEnabled: ${8|false,true|}",
            "      EnforceHTTPS: ${9|false,true|}",
            "      TLSSecurityPolicy: \"${10:String}\"",
            "    DomainName: \"${7:String}\"",
            "    EBSOptions:",
            "      EBSEnabled: ${8|false,true|}",
            "      Iops: ${9:Number}",
            "      VolumeSize: ${10:Number}",
            "      VolumeType: \"${11:String}\"",
            "    ElasticsearchClusterConfig:",
            "      DedicatedMasterCount: ${10:Number}",
            "      DedicatedMasterEnabled: ${11|false,true|}",
            "      DedicatedMasterType: \"${12:String}\"",
            "      InstanceCount: ${13:Number}",
            "      InstanceType: \"${14:String}\"",
            "      WarmCount: ${15:Number}",
            "      WarmEnabled: ${16|false,true|}",
            "      WarmType: \"${17:String}\"",
            "      ZoneAwarenessEnabled: ${19|false,true|}",
            "    ElasticsearchVersion: \"${10:String}\"",
            "    EncryptionAtRestOptions:",
            "      Enabled: ${11|false,true|}",
            "      KmsKeyId: \"${12:String}\"",
            "    LogPublishingOptions:",
            "    NodeToNodeEncryptionOptions:",
            "      Enabled: ${13|false,true|}",
            "    SnapshotOptions:",
            "      AutomatedSnapshotStartHour: ${14:Number}",
            "    Tags:",
            "      Tags",
            "    VPCOptions:",
            "      SecurityGroupIds:",
            "        -",
            "      SubnetIds:",
            "        -"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html",
            "Attributes: ",
            "  Arn",
            "  DomainArn",
            "  DomainEndpoint"
        ],
        "prefix": "elasticsearch-domain",
        "scope": "yaml"
    },
    "AWS::EventSchemas::Discoverer": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EventSchemas::Discoverer",
            "  Properties:",
            "    CrossAccount: ${2|false,true|}",
            "    Description: \"${3:String}\"",
            "    SourceArn: \"${4:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-discoverer.html",
            "Attributes: ",
            "  DiscovererArn",
            "  DiscovererId",
            "  CrossAccount"
        ],
        "prefix": "eventschemas-discoverer",
        "scope": "yaml"
    },
    "AWS::EventSchemas::Registry": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EventSchemas::Registry",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    RegistryName: \"${3:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-registry.html",
            "Attributes: ",
            "  RegistryName",
            "  RegistryArn"
        ],
        "prefix": "eventschemas-registry",
        "scope": "yaml"
    },
    "AWS::EventSchemas::RegistryPolicy": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EventSchemas::RegistryPolicy",
            "  Properties:",
            "    Policy: ${2:JSON} # Required",
            "    RegistryName: \"${3:String}\" # Required",
            "    RevisionId: \"${4:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-registrypolicy.html",
            "Attributes: ",
            "  Id"
        ],
        "prefix": "eventschemas-registrypolicy",
        "scope": "yaml"
    },
    "AWS::EventSchemas::Schema": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::EventSchemas::Schema",
            "  Properties:",
            "    Content: \"${2:String}\" # Required",
            "    Description: \"${3:String}\"",
            "    RegistryName: \"${4:String}\" # Required",
            "    SchemaName: \"${5:String}\"",
            "    Tags:",
            "      Tags",
            "    Type: \"${7:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-schema.html",
            "Attributes: ",
            "  SchemaVersion",
            "  SchemaArn",
            "  SchemaName"
        ],
        "prefix": "eventschemas-schema",
        "scope": "yaml"
    },
    "AWS::Events::ApiDestination": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Events::ApiDestination",
            "  Properties:",
            "    ConnectionArn: \"${2:String}\" # Required",
            "    Description: \"${3:String}\"",
            "    HttpMethod: \"${4:String}\" # Required",
            "    InvocationEndpoint: \"${5:String}\" # Required",
            "    InvocationRateLimitPerSecond: ${6:Number}",
            "    Name: \"${7:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-apidestination.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "events-apidestination",
        "scope": "yaml"
    },
    "AWS::Events::Archive": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Events::Archive",
            "  Properties:",
            "    ArchiveName: \"${2:String}\"",
            "    Description: \"${3:String}\"",
            "    EventPattern: ${4:JSON}",
            "    RetentionDays: ${5:Number}",
            "    SourceArn: \"${6:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-archive.html",
            "Attributes: ",
            "  ArchiveName",
            "  Arn"
        ],
        "prefix": "events-archive",
        "scope": "yaml"
    },
    "AWS::Events::Connection": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Events::Connection",
            "  Properties:",
            "    AuthParameters:",
            "    AuthorizationType: \"${3:String}\" # Required",
            "    Description: \"${4:String}\"",
            "    Name: \"${5:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-connection.html",
            "Attributes: ",
            "  Arn",
            "  SecretArn"
        ],
        "prefix": "events-connection",
        "scope": "yaml"
    },
    "AWS::Events::Endpoint": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Events::Endpoint",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    EventBuses: # Required",
            "      EventBuses",
            "    Name: \"${4:String}\" # Required",
            "    ReplicationConfig:",
            "      State: \"${5:String}\"",
            "    RoleArn: \"${6:String}\"",
            "    RoutingConfig:"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-endpoint.html",
            "Attributes: ",
            "  Arn",
            "  EndpointId",
            "  EndpointUrl",
            "  State",
            "  StateReason"
        ],
        "prefix": "events-endpoint",
        "scope": "yaml"
    },
    "AWS::Events::EventBus": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Events::EventBus",
            "  Properties:",
            "    EventSourceName: \"${2:String}\"",
            "    Name: \"${3:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-eventbus.html",
            "Attributes: ",
            "  Policy",
            "  Arn",
            "  Name"
        ],
        "prefix": "events-eventbus",
        "scope": "yaml"
    },
    "AWS::Events::EventBusPolicy": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Events::EventBusPolicy",
            "  Properties:",
            "    Action: \"${2:String}\"",
            "    Condition:",
            "      Key: \"${3:String}\"",
            "      Type: \"${4:String}\"",
            "      Value: \"${5:String}\"",
            "    EventBusName: \"${4:String}\"",
            "    Principal: \"${5:String}\"",
            "    Statement: ${6:JSON}",
            "    StatementId: \"${7:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-eventbuspolicy.html"
        ],
        "prefix": "events-eventbuspolicy",
        "scope": "yaml"
    },
    "AWS::Events::Rule": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Events::Rule",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    EventBusName: \"${3:String}\"",
            "    EventPattern: ${4:JSON}",
            "    Name: \"${5:String}\"",
            "    RoleArn: \"${6:String}\"",
            "    ScheduleExpression: \"${7:String}\"",
            "    State: \"${8:String}\"",
            "    Targets:",
            "      Targets"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-rule.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "events-rule",
        "scope": "yaml"
    },
    "AWS::Evidently::Experiment": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Evidently::Experiment",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    MetricGoals: # Required",
            "      MetricGoals",
            "    Name: \"${4:String}\" # Required",
            "    OnlineAbConfig:",
            "      ControlTreatmentName: \"${5:String}\"",
            "      TreatmentWeights:",
            "        -",
            "    Project: \"${6:String}\" # Required",
            "    RandomizationSalt: \"${7:String}\"",
            "    RunningStatus:",
            "      AnalysisCompleteTime: \"${8:String}\"",
            "      DesiredState: \"${9:String}\"",
            "      Reason: \"${10:String}\"",
            "      Status: \"${11:String}\"",
            "    SamplingRate: ${9:Number}",
            "    Tags:",
            "      Tags",
            "    Treatments: # Required",
            "      Treatments"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-experiment.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "evidently-experiment",
        "scope": "yaml"
    },
    "AWS::Evidently::Feature": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Evidently::Feature",
            "  Properties:",
            "    DefaultVariation: \"${2:String}\"",
            "    Description: \"${3:String}\"",
            "    EntityOverrides:",
            "      EntityOverrides",
            "    EvaluationStrategy: \"${5:String}\"",
            "    Name: \"${6:String}\" # Required",
            "    Project: \"${7:String}\" # Required",
            "    Tags:",
            "      Tags",
            "    Variations: # Required",
            "      Variations"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-feature.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "evidently-feature",
        "scope": "yaml"
    },
    "AWS::Evidently::Launch": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Evidently::Launch",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    ExecutionStatus:",
            "      DesiredState: \"${3:String}\"",
            "      Reason: \"${4:String}\"",
            "      Status: \"${5:String}\"",
            "    Groups: # Required",
            "      Groups",
            "    MetricMonitors:",
            "      MetricMonitors",
            "    Name: \"${6:String}\" # Required",
            "    Project: \"${7:String}\" # Required",
            "    RandomizationSalt: \"${8:String}\"",
            "    ScheduledSplitsConfig: # Required",
            "      ScheduledSplitsConfig",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-launch.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "evidently-launch",
        "scope": "yaml"
    },
    "AWS::Evidently::Project": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Evidently::Project",
            "  Properties:",
            "    DataDelivery:",
            "      LogGroup: \"${2:String}\"",
            "    Description: \"${3:String}\"",
            "    Name: \"${4:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-project.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "evidently-project",
        "scope": "yaml"
    },
    "AWS::FIS::ExperimentTemplate": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::FIS::ExperimentTemplate",
            "  Properties:",
            "    Actions:",
            "    Description: \"${3:String}\" # Required",
            "    LogConfiguration:",
            "      CloudWatchLogsConfiguration: ${4:JSON}",
            "      LogSchemaVersion: ${5:Number}",
            "      S3Configuration: ${6:JSON}",
            "    RoleArn: \"${5:String}\" # Required",
            "    StopConditions: # Required",
            "      StopConditions",
            "    Tags:",
            "    Targets:"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fis-experimenttemplate.html",
            "Attributes: ",
            "  Id"
        ],
        "prefix": "fis-experimenttemplate",
        "scope": "yaml"
    },
    "AWS::FMS::NotificationChannel": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::FMS::NotificationChannel",
            "  Properties:",
            "    SnsRoleName: \"${2:String}\" # Required",
            "    SnsTopicArn: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-notificationchannel.html"
        ],
        "prefix": "fms-notificationchannel",
        "scope": "yaml"
    },
    "AWS::FMS::Policy": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::FMS::Policy",
            "  Properties:",
            "    DeleteAllPolicyResources: ${2|false,true|}",
            "    ExcludeMap:",
            "      ACCOUNT:",
            "        -",
            "      ORGUNIT:",
            "        -",
            "    ExcludeResourceTags: ${4|false,true|} # Required",
            "    IncludeMap:",
            "      ACCOUNT:",
            "        -",
            "      ORGUNIT:",
            "        -",
            "    PolicyName: \"${6:String}\" # Required",
            "    RemediationEnabled: ${7|false,true|} # Required",
            "    ResourceTags:",
            "      ResourceTags",
            "    ResourceType: \"${9:String}\" # Required",
            "    ResourceTypeList:",
            "      ResourceTypeList",
            "    ResourcesCleanUp: ${11|false,true|}",
            "    SecurityServicePolicyData: ${12:JSON} # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html",
            "Attributes: ",
            "  Id",
            "  Arn"
        ],
        "prefix": "fms-policy",
        "scope": "yaml"
    },
    "AWS::FSx::FileSystem": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::FSx::FileSystem",
            "  Properties:",
            "    BackupId: \"${2:String}\"",
            "    FileSystemType: \"${3:String}\" # Required",
            "    FileSystemTypeVersion: \"${4:String}\"",
            "    KmsKeyId: \"${5:String}\"",
            "    LustreConfiguration:",
            "      AutoImportPolicy: \"${6:String}\"",
            "      AutomaticBackupRetentionDays: ${7:Number}",
            "      CopyTagsToBackups: ${8|false,true|}",
            "      DailyAutomaticBackupStartTime: \"${9:String}\"",
            "      DataCompressionType: \"${10:String}\"",
            "      DeploymentType: \"${11:String}\"",
            "      DriveCacheType: \"${12:String}\"",
            "      ExportPath: \"${13:String}\"",
            "      ImportPath: \"${14:String}\"",
            "      ImportedFileChunkSize: ${15:Number}",
            "      PerUnitStorageThroughput: ${16:Number}",
            "      WeeklyMaintenanceStartTime: \"${17:String}\"",
            "    OntapConfiguration:",
            "      AutomaticBackupRetentionDays: ${7:Number}",
            "      DailyAutomaticBackupStartTime: \"${8:String}\"",
            "      DeploymentType: \"${9:String}\"",
            "      EndpointIpAddressRange: \"${11:String}\"",
            "      FsxAdminPassword: \"${12:String}\"",
            "      PreferredSubnetId: \"${13:String}\"",
            "      RouteTableIds:",
            "        -",
            "      ThroughputCapacity: ${15:Number}",
            "      WeeklyMaintenanceStartTime: \"${16:String}\"",
            "    OpenZFSConfiguration:",
            "      AutomaticBackupRetentionDays: ${8:Number}",
            "      CopyTagsToBackups: ${9|false,true|}",
            "      CopyTagsToVolumes: ${10|false,true|}",
            "      DailyAutomaticBackupStartTime: \"${11:String}\"",
            "      DeploymentType: \"${12:String}\"",
            "      Options:",
            "        -",
            "      ThroughputCapacity: ${16:Number}",
            "      WeeklyMaintenanceStartTime: \"${17:String}\"",
            "    SecurityGroupIds:",
            "      SecurityGroupIds",
            "    StorageCapacity: ${10:Number}",
            "    StorageType: \"${11:String}\"",
            "    SubnetIds: # Required",
            "      SubnetIds",
            "    Tags:",
            "      Tags",
            "    WindowsConfiguration:",
            "      ActiveDirectoryId: \"${14:String}\"",
            "      Aliases:",
            "        -",
            "      AutomaticBackupRetentionDays: ${17:Number}",
            "      CopyTagsToBackups: ${18|false,true|}",
            "      DailyAutomaticBackupStartTime: \"${19:String}\"",
            "      DeploymentType: \"${20:String}\"",
            "      PreferredSubnetId: \"${21:String}\"",
            "      ThroughputCapacity: ${23:Number}",
            "      WeeklyMaintenanceStartTime: \"${24:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-filesystem.html",
            "Attributes: ",
            "  RootVolumeId",
            "  DNSName",
            "  LustreMountName"
        ],
        "prefix": "fsx-filesystem",
        "scope": "yaml"
    },
    "AWS::FSx::Snapshot": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::FSx::Snapshot",
            "  Properties:",
            "    Name: \"${2:String}\" # Required",
            "    Tags:",
            "      Tags",
            "    VolumeId: \"${4:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-snapshot.html",
            "Attributes: ",
            "  ResourceARN"
        ],
        "prefix": "fsx-snapshot",
        "scope": "yaml"
    },
    "AWS::FSx::StorageVirtualMachine": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::FSx::StorageVirtualMachine",
            "  Properties:",
            "    ActiveDirectoryConfiguration:",
            "      NetBiosName: \"${2:String}\"",
            "    FileSystemId: \"${3:String}\" # Required",
            "    Name: \"${4:String}\" # Required",
            "    RootVolumeSecurityStyle: \"${5:String}\"",
            "    SvmAdminPassword: \"${6:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-storagevirtualmachine.html",
            "Attributes: ",
            "  ResourceARN",
            "  StorageVirtualMachineId",
            "  UUID"
        ],
        "prefix": "fsx-storagevirtualmachine",
        "scope": "yaml"
    },
    "AWS::FSx::Volume": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::FSx::Volume",
            "  Properties:",
            "    BackupId: \"${2:String}\"",
            "    Name: \"${3:String}\" # Required",
            "    OntapConfiguration:",
            "      JunctionPath: \"${4:String}\"",
            "      SecurityStyle: \"${5:String}\"",
            "      SizeInMegabytes: \"${6:String}\"",
            "      StorageEfficiencyEnabled: \"${7:String}\"",
            "      StorageVirtualMachineId: \"${8:String}\"",
            "    OpenZFSConfiguration:",
            "      CopyTagsToSnapshots: ${5|false,true|}",
            "      DataCompressionType: \"${6:String}\"",
            "      NfsExports:",
            "        -",
            "      Options:",
            "        -",
            "      ParentVolumeId: \"${10:String}\"",
            "      ReadOnly: ${11|false,true|}",
            "      RecordSizeKiB: ${12:Number}",
            "      StorageCapacityQuotaGiB: ${13:Number}",
            "      StorageCapacityReservationGiB: ${14:Number}",
            "      UserAndGroupQuotas:",
            "        -",
            "    Tags:",
            "      Tags",
            "    VolumeType: \"${7:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-volume.html",
            "Attributes: ",
            "  ResourceARN",
            "  VolumeId",
            "  UUID"
        ],
        "prefix": "fsx-volume",
        "scope": "yaml"
    },
    "AWS::FinSpace::Environment": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::FinSpace::Environment",
            "  Properties:",
            "    DataBundles:",
            "      DataBundles",
            "    Description: \"${3:String}\"",
            "    FederationMode: \"${4:String}\"",
            "    FederationParameters:",
            "      ApplicationCallBackURL: \"${5:String}\"",
            "      AttributeMap: ${6:JSON}",
            "      FederationProviderName: \"${7:String}\"",
            "      FederationURN: \"${8:String}\"",
            "      SamlMetadataDocument: \"${9:String}\"",
            "      SamlMetadataURL: \"${10:String}\"",
            "    KmsKeyId: \"${6:String}\"",
            "    Name: \"${7:String}\" # Required",
            "    SuperuserParameters:",
            "      EmailAddress: \"${8:String}\"",
            "      FirstName: \"${9:String}\"",
            "      LastName: \"${10:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-finspace-environment.html",
            "Attributes: ",
            "  EnvironmentId",
            "  AwsAccountId",
            "  Status",
            "  EnvironmentUrl",
            "  EnvironmentArn",
            "  SageMakerStudioDomainUrl",
            "  DedicatedServiceAccountId"
        ],
        "prefix": "finspace-environment",
        "scope": "yaml"
    },
    "AWS::Forecast::Dataset": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Forecast::Dataset",
            "  Properties:",
            "    DataFrequency: \"${2:String}\"",
            "    DatasetName: \"${3:String}\" # Required",
            "    DatasetType: \"${4:String}\" # Required",
            "    Domain: \"${5:String}\" # Required",
            "    EncryptionConfig: ${6:JSON}",
            "    Schema: ${7:JSON} # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-forecast-dataset.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "forecast-dataset",
        "scope": "yaml"
    },
    "AWS::Forecast::DatasetGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Forecast::DatasetGroup",
            "  Properties:",
            "    DatasetArns:",
            "      DatasetArns",
            "    DatasetGroupName: \"${3:String}\" # Required",
            "    Domain: \"${4:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-forecast-datasetgroup.html",
            "Attributes: ",
            "  DatasetGroupArn"
        ],
        "prefix": "forecast-datasetgroup",
        "scope": "yaml"
    },
    "AWS::FraudDetector::Detector": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::FraudDetector::Detector",
            "  Properties:",
            "    AssociatedModels:",
            "      AssociatedModels",
            "    Description: \"${3:String}\"",
            "    DetectorId: \"${4:String}\" # Required",
            "    DetectorVersionStatus: \"${5:String}\"",
            "    EventType:",
            "      Arn: \"${6:String}\"",
            "      CreatedTime: \"${7:String}\"",
            "      Description: \"${8:String}\"",
            "      EntityTypes:",
            "        -",
            "      EventVariables:",
            "        -",
            "      Inline: ${11|false,true|}",
            "      Labels:",
            "        -",
            "      LastUpdatedTime: \"${13:String}\"",
            "      Name: \"${14:String}\"",
            "      Tags:",
            "        -",
            "    RuleExecutionMode: \"${7:String}\"",
            "    Rules: # Required",
            "      Rules",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-detector.html",
            "Attributes: ",
            "  DetectorVersionId",
            "  EventType.Arn",
            "  EventType.CreatedTime",
            "  EventType.LastUpdatedTime",
            "  Arn",
            "  CreatedTime",
            "  LastUpdatedTime"
        ],
        "prefix": "frauddetector-detector",
        "scope": "yaml"
    },
    "AWS::FraudDetector::EntityType": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::FraudDetector::EntityType",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    Name: \"${3:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-entitytype.html",
            "Attributes: ",
            "  Arn",
            "  CreatedTime",
            "  LastUpdatedTime"
        ],
        "prefix": "frauddetector-entitytype",
        "scope": "yaml"
    },
    "AWS::FraudDetector::EventType": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::FraudDetector::EventType",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    EntityTypes: # Required",
            "      EntityTypes",
            "    EventVariables: # Required",
            "      EventVariables",
            "    Labels: # Required",
            "      Labels",
            "    Name: \"${6:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-eventtype.html",
            "Attributes: ",
            "  Arn",
            "  CreatedTime",
            "  LastUpdatedTime"
        ],
        "prefix": "frauddetector-eventtype",
        "scope": "yaml"
    },
    "AWS::FraudDetector::Label": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::FraudDetector::Label",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    Name: \"${3:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-label.html",
            "Attributes: ",
            "  Arn",
            "  CreatedTime",
            "  LastUpdatedTime"
        ],
        "prefix": "frauddetector-label",
        "scope": "yaml"
    },
    "AWS::FraudDetector::Outcome": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::FraudDetector::Outcome",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    Name: \"${3:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-outcome.html",
            "Attributes: ",
            "  Arn",
            "  CreatedTime",
            "  LastUpdatedTime"
        ],
        "prefix": "frauddetector-outcome",
        "scope": "yaml"
    },
    "AWS::FraudDetector::Variable": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::FraudDetector::Variable",
            "  Properties:",
            "    DataSource: \"${2:String}\" # Required",
            "    DataType: \"${3:String}\" # Required",
            "    DefaultValue: \"${4:String}\" # Required",
            "    Description: \"${5:String}\"",
            "    Name: \"${6:String}\" # Required",
            "    Tags:",
            "      Tags",
            "    VariableType: \"${8:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-variable.html",
            "Attributes: ",
            "  Arn",
            "  CreatedTime",
            "  LastUpdatedTime"
        ],
        "prefix": "frauddetector-variable",
        "scope": "yaml"
    },
    "AWS::GameLift::Alias": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::GameLift::Alias",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    Name: \"${3:String}\" # Required",
            "    RoutingStrategy:",
            "      FleetId: \"${4:String}\"",
            "      Message: \"${5:String}\"",
            "      Type: \"${6:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-alias.html",
            "Attributes: ",
            "  AliasId"
        ],
        "prefix": "gamelift-alias",
        "scope": "yaml"
    },
    "AWS::GameLift::Build": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::GameLift::Build",
            "  Properties:",
            "    Name: \"${2:String}\"",
            "    OperatingSystem: \"${3:String}\"",
            "    StorageLocation:",
            "      Bucket: \"${4:String}\"",
            "      Key: \"${5:String}\"",
            "      ObjectVersion: \"${6:String}\"",
            "      RoleArn: \"${7:String}\"",
            "    Version: \"${5:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-build.html"
        ],
        "prefix": "gamelift-build",
        "scope": "yaml"
    },
    "AWS::GameLift::Fleet": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::GameLift::Fleet",
            "  Properties:",
            "    BuildId: \"${2:String}\"",
            "    CertificateConfiguration:",
            "      CertificateType: \"${3:String}\"",
            "    Description: \"${4:String}\"",
            "    DesiredEC2Instances: ${5:Number}",
            "    EC2InboundPermissions:",
            "      EC2InboundPermissions",
            "    EC2InstanceType: \"${7:String}\"",
            "    FleetType: \"${8:String}\"",
            "    InstanceRoleARN: \"${9:String}\"",
            "    Locations:",
            "      Locations",
            "    MaxSize: ${11:Number}",
            "    MetricGroups:",
            "      MetricGroups",
            "    MinSize: ${13:Number}",
            "    Name: \"${14:String}\"",
            "    NewGameSessionProtectionPolicy: \"${15:String}\"",
            "    PeerVpcAwsAccountId: \"${16:String}\"",
            "    PeerVpcId: \"${17:String}\"",
            "    ResourceCreationLimitPolicy:",
            "      NewGameSessionsPerCreator: ${18:Number}",
            "      PolicyPeriodInMinutes: ${19:Number}",
            "    RuntimeConfiguration:",
            "      GameSessionActivationTimeoutSeconds: ${19:Number}",
            "      MaxConcurrentGameSessionActivations: ${20:Number}",
            "      ServerProcesses:",
            "        -",
            "    ScriptId: \"${20:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html",
            "Attributes: ",
            "  FleetId"
        ],
        "prefix": "gamelift-fleet",
        "scope": "yaml"
    },
    "AWS::GameLift::GameServerGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::GameLift::GameServerGroup",
            "  Properties:",
            "    AutoScalingPolicy:",
            "      EstimatedInstanceWarmup: ${2:Number}",
            "    BalancingStrategy: \"${3:String}\"",
            "    DeleteOption: \"${4:String}\"",
            "    GameServerGroupName: \"${5:String}\" # Required",
            "    GameServerProtectionPolicy: \"${6:String}\"",
            "    InstanceDefinitions: # Required",
            "      InstanceDefinitions",
            "    LaunchTemplate:",
            "      LaunchTemplateId: \"${8:String}\"",
            "      LaunchTemplateName: \"${9:String}\"",
            "      Version: \"${10:String}\"",
            "    MaxSize: ${9:Number}",
            "    MinSize: ${10:Number}",
            "    RoleArn: \"${11:String}\" # Required",
            "    Tags:",
            "      Tags",
            "    VpcSubnets:",
            "      VpcSubnets"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html",
            "Attributes: ",
            "  AutoScalingGroupArn",
            "  GameServerGroupArn"
        ],
        "prefix": "gamelift-gameservergroup",
        "scope": "yaml"
    },
    "AWS::GameLift::GameSessionQueue": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::GameLift::GameSessionQueue",
            "  Properties:",
            "    CustomEventData: \"${2:String}\"",
            "    Destinations:",
            "      Destinations",
            "    FilterConfiguration:",
            "      AllowedLocations:",
            "        -",
            "    Name: \"${5:String}\" # Required",
            "    NotificationTarget: \"${6:String}\"",
            "    PlayerLatencyPolicies:",
            "      PlayerLatencyPolicies",
            "    PriorityConfiguration:",
            "      LocationOrder:",
            "        -",
            "      PriorityOrder:",
            "        -",
            "    Tags:",
            "      Tags",
            "    TimeoutInSeconds: ${10:Number}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gamesessionqueue.html",
            "Attributes: ",
            "  Arn",
            "  Name"
        ],
        "prefix": "gamelift-gamesessionqueue",
        "scope": "yaml"
    },
    "AWS::GameLift::MatchmakingConfiguration": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::GameLift::MatchmakingConfiguration",
            "  Properties:",
            "    AcceptanceRequired: ${2|false,true|} # Required",
            "    AcceptanceTimeoutSeconds: ${3:Number}",
            "    AdditionalPlayerCount: ${4:Number}",
            "    BackfillMode: \"${5:String}\"",
            "    CustomEventData: \"${6:String}\"",
            "    Description: \"${7:String}\"",
            "    FlexMatchMode: \"${8:String}\"",
            "    GameProperties:",
            "      GameProperties",
            "    GameSessionData: \"${10:String}\"",
            "    GameSessionQueueArns:",
            "      GameSessionQueueArns",
            "    Name: \"${12:String}\" # Required",
            "    NotificationTarget: \"${13:String}\"",
            "    RequestTimeoutSeconds: ${14:Number} # Required",
            "    RuleSetName: \"${15:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingconfiguration.html",
            "Attributes: ",
            "  Arn",
            "  Name"
        ],
        "prefix": "gamelift-matchmakingconfiguration",
        "scope": "yaml"
    },
    "AWS::GameLift::MatchmakingRuleSet": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::GameLift::MatchmakingRuleSet",
            "  Properties:",
            "    Name: \"${2:String}\" # Required",
            "    RuleSetBody: \"${3:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingruleset.html",
            "Attributes: ",
            "  Arn",
            "  Name"
        ],
        "prefix": "gamelift-matchmakingruleset",
        "scope": "yaml"
    },
    "AWS::GameLift::Script": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::GameLift::Script",
            "  Properties:",
            "    Name: \"${2:String}\"",
            "    StorageLocation:",
            "      Bucket: \"${3:String}\"",
            "      Key: \"${4:String}\"",
            "      ObjectVersion: \"${5:String}\"",
            "      RoleArn: \"${6:String}\"",
            "    Tags:",
            "      Tags",
            "    Version: \"${5:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-script.html",
            "Attributes: ",
            "  Id",
            "  Arn"
        ],
        "prefix": "gamelift-script",
        "scope": "yaml"
    },
    "AWS::GlobalAccelerator::Accelerator": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::GlobalAccelerator::Accelerator",
            "  Properties:",
            "    Enabled: ${2|false,true|}",
            "    IpAddressType: \"${3:String}\"",
            "    IpAddresses:",
            "      IpAddresses",
            "    Name: \"${5:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-accelerator.html",
            "Attributes: ",
            "  DnsName",
            "  AcceleratorArn"
        ],
        "prefix": "globalaccelerator-accelerator",
        "scope": "yaml"
    },
    "AWS::GlobalAccelerator::EndpointGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::GlobalAccelerator::EndpointGroup",
            "  Properties:",
            "    EndpointConfigurations:",
            "      EndpointConfigurations",
            "    EndpointGroupRegion: \"${3:String}\" # Required",
            "    HealthCheckIntervalSeconds: ${4:Number}",
            "    HealthCheckPath: \"${5:String}\"",
            "    HealthCheckPort: ${6:Number}",
            "    HealthCheckProtocol: \"${7:String}\"",
            "    ListenerArn: \"${8:String}\" # Required",
            "    PortOverrides:",
            "      PortOverrides",
            "    ThresholdCount: ${10:Number}",
            "    TrafficDialPercentage: ${11:Number}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html",
            "Attributes: ",
            "  EndpointGroupArn"
        ],
        "prefix": "globalaccelerator-endpointgroup",
        "scope": "yaml"
    },
    "AWS::GlobalAccelerator::Listener": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::GlobalAccelerator::Listener",
            "  Properties:",
            "    AcceleratorArn: \"${2:String}\" # Required",
            "    ClientAffinity: \"${3:String}\"",
            "    PortRanges: # Required",
            "      PortRanges",
            "    Protocol: \"${5:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-listener.html",
            "Attributes: ",
            "  ListenerArn"
        ],
        "prefix": "globalaccelerator-listener",
        "scope": "yaml"
    },
    "AWS::Glue::Classifier": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Glue::Classifier",
            "  Properties:",
            "    CsvClassifier:",
            "      AllowSingleColumn: ${2|false,true|}",
            "      ContainsHeader: \"${3:String}\"",
            "      Delimiter: \"${4:String}\"",
            "      DisableValueTrimming: ${5|false,true|}",
            "      Header:",
            "        -",
            "      Name: \"${7:String}\"",
            "      QuoteSymbol: \"${8:String}\"",
            "    GrokClassifier:",
            "      Classification: \"${3:String}\"",
            "      CustomPatterns: \"${4:String}\"",
            "      GrokPattern: \"${5:String}\"",
            "      Name: \"${6:String}\"",
            "    JsonClassifier:",
            "      JsonPath: \"${4:String}\"",
            "      Name: \"${5:String}\"",
            "    XMLClassifier:",
            "      Classification: \"${5:String}\"",
            "      Name: \"${6:String}\"",
            "      RowTag: \"${7:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-classifier.html"
        ],
        "prefix": "glue-classifier",
        "scope": "yaml"
    },
    "AWS::Glue::Connection": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Glue::Connection",
            "  Properties:",
            "    CatalogId: \"${2:String}\" # Required",
            "    ConnectionInput:",
            "      ConnectionProperties: ${3:JSON}",
            "      ConnectionType: \"${4:String}\"",
            "      Description: \"${5:String}\"",
            "      MatchCriteria:",
            "        -",
            "      Name: \"${7:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-connection.html"
        ],
        "prefix": "glue-connection",
        "scope": "yaml"
    },
    "AWS::Glue::Crawler": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Glue::Crawler",
            "  Properties:",
            "    Classifiers:",
            "      Classifiers",
            "    Configuration: \"${3:String}\"",
            "    CrawlerSecurityConfiguration: \"${4:String}\"",
            "    DatabaseName: \"${5:String}\"",
            "    Description: \"${6:String}\"",
            "    Name: \"${7:String}\"",
            "    RecrawlPolicy:",
            "      RecrawlBehavior: \"${8:String}\"",
            "    Role: \"${9:String}\" # Required",
            "    Schedule:",
            "      ScheduleExpression: \"${10:String}\"",
            "    SchemaChangePolicy:",
            "      DeleteBehavior: \"${11:String}\"",
            "      UpdateBehavior: \"${12:String}\"",
            "    TablePrefix: \"${12:String}\"",
            "    Tags: ${13:JSON}",
            "    Targets:",
            "      CatalogTargets:",
            "        -",
            "      DynamoDBTargets:",
            "        -",
            "      JdbcTargets:",
            "        -",
            "      MongoDBTargets:",
            "        -",
            "      S3Targets:",
            "        -"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-crawler.html"
        ],
        "prefix": "glue-crawler",
        "scope": "yaml"
    },
    "AWS::Glue::DataCatalogEncryptionSettings": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Glue::DataCatalogEncryptionSettings",
            "  Properties:",
            "    CatalogId: \"${2:String}\" # Required",
            "    DataCatalogEncryptionSettings:"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-datacatalogencryptionsettings.html"
        ],
        "prefix": "glue-datacatalogencryptionsettings",
        "scope": "yaml"
    },
    "AWS::Glue::Database": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Glue::Database",
            "  Properties:",
            "    CatalogId: \"${2:String}\" # Required",
            "    DatabaseInput:",
            "      CreateTableDefaultPermissions:",
            "        -",
            "      Description: \"${4:String}\"",
            "      LocationUri: \"${5:String}\"",
            "      Name: \"${6:String}\"",
            "      Parameters: ${7:JSON}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-database.html"
        ],
        "prefix": "glue-database",
        "scope": "yaml"
    },
    "AWS::Glue::DevEndpoint": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Glue::DevEndpoint",
            "  Properties:",
            "    Arguments: ${2:JSON}",
            "    EndpointName: \"${3:String}\"",
            "    ExtraJarsS3Path: \"${4:String}\"",
            "    ExtraPythonLibsS3Path: \"${5:String}\"",
            "    GlueVersion: \"${6:String}\"",
            "    NumberOfNodes: ${7:Number}",
            "    NumberOfWorkers: ${8:Number}",
            "    PublicKey: \"${9:String}\"",
            "    PublicKeys:",
            "      PublicKeys",
            "    RoleArn: \"${11:String}\" # Required",
            "    SecurityConfiguration: \"${12:String}\"",
            "    SecurityGroupIds:",
            "      SecurityGroupIds",
            "    SubnetId: \"${14:String}\"",
            "    Tags: ${15:JSON}",
            "    WorkerType: \"${16:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-devendpoint.html"
        ],
        "prefix": "glue-devendpoint",
        "scope": "yaml"
    },
    "AWS::Glue::Job": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Glue::Job",
            "  Properties:",
            "    AllocatedCapacity: ${2:Number}",
            "    Command:",
            "      Name: \"${3:String}\"",
            "      PythonVersion: \"${4:String}\"",
            "      ScriptLocation: \"${5:String}\"",
            "    Connections:",
            "      Connections:",
            "        -",
            "    DefaultArguments: ${5:JSON}",
            "    Description: \"${6:String}\"",
            "    ExecutionProperty:",
            "      MaxConcurrentRuns: ${7:Number}",
            "    GlueVersion: \"${8:String}\"",
            "    LogUri: \"${9:String}\"",
            "    MaxCapacity: ${10:Number}",
            "    MaxRetries: ${11:Number}",
            "    Name: \"${12:String}\"",
            "    NotificationProperty:",
            "      NotifyDelayAfter: ${13:Number}",
            "    NumberOfWorkers: ${14:Number}",
            "    Role: \"${15:String}\" # Required",
            "    SecurityConfiguration: \"${16:String}\"",
            "    Tags: ${17:JSON}",
            "    Timeout: ${18:Number}",
            "    WorkerType: \"${19:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-job.html"
        ],
        "prefix": "glue-job",
        "scope": "yaml"
    },
    "AWS::Glue::MLTransform": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Glue::MLTransform",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    GlueVersion: \"${3:String}\"",
            "    InputRecordTables:",
            "      GlueTables:",
            "        -",
            "    MaxCapacity: ${5:Number}",
            "    MaxRetries: ${6:Number}",
            "    Name: \"${7:String}\"",
            "    NumberOfWorkers: ${8:Number}",
            "    Role: \"${9:String}\" # Required",
            "    Tags: ${10:JSON}",
            "    Timeout: ${11:Number}",
            "    TransformEncryption:",
            "      TaskRunSecurityConfigurationName: \"${13:String}\"",
            "    TransformParameters:",
            "      TransformType: \"${14:String}\"",
            "    WorkerType: \"${14:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-mltransform.html"
        ],
        "prefix": "glue-mltransform",
        "scope": "yaml"
    },
    "AWS::Glue::Partition": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Glue::Partition",
            "  Properties:",
            "    CatalogId: \"${2:String}\" # Required",
            "    DatabaseName: \"${3:String}\" # Required",
            "    PartitionInput:",
            "      Parameters: ${4:JSON}",
            "      Values:",
            "        -",
            "    TableName: \"${5:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-partition.html"
        ],
        "prefix": "glue-partition",
        "scope": "yaml"
    },
    "AWS::Glue::Registry": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Glue::Registry",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    Name: \"${3:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-registry.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "glue-registry",
        "scope": "yaml"
    },
    "AWS::Glue::Schema": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Glue::Schema",
            "  Properties:",
            "    CheckpointVersion:",
            "      IsLatest: ${2|false,true|}",
            "      VersionNumber: ${3:Number}",
            "    Compatibility: \"${3:String}\" # Required",
            "    DataFormat: \"${4:String}\" # Required",
            "    Description: \"${5:String}\"",
            "    Name: \"${6:String}\" # Required",
            "    Registry:",
            "      Arn: \"${7:String}\"",
            "      Name: \"${8:String}\"",
            "    SchemaDefinition: \"${8:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-schema.html",
            "Attributes: ",
            "  Arn",
            "  InitialSchemaVersionId"
        ],
        "prefix": "glue-schema",
        "scope": "yaml"
    },
    "AWS::Glue::SchemaVersion": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Glue::SchemaVersion",
            "  Properties:",
            "    Schema:",
            "      RegistryName: \"${2:String}\"",
            "      SchemaArn: \"${3:String}\"",
            "      SchemaName: \"${4:String}\"",
            "    SchemaDefinition: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-schemaversion.html",
            "Attributes: ",
            "  VersionId"
        ],
        "prefix": "glue-schemaversion",
        "scope": "yaml"
    },
    "AWS::Glue::SchemaVersionMetadata": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Glue::SchemaVersionMetadata",
            "  Properties:",
            "    Key: \"${2:String}\" # Required",
            "    SchemaVersionId: \"${3:String}\" # Required",
            "    Value: \"${4:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-schemaversionmetadata.html"
        ],
        "prefix": "glue-schemaversionmetadata",
        "scope": "yaml"
    },
    "AWS::Glue::SecurityConfiguration": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Glue::SecurityConfiguration",
            "  Properties:",
            "    EncryptionConfiguration:",
            "    Name: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-securityconfiguration.html"
        ],
        "prefix": "glue-securityconfiguration",
        "scope": "yaml"
    },
    "AWS::Glue::Table": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Glue::Table",
            "  Properties:",
            "    CatalogId: \"${2:String}\" # Required",
            "    DatabaseName: \"${3:String}\" # Required",
            "    TableInput:",
            "      Description: \"${4:String}\"",
            "      Name: \"${5:String}\"",
            "      Owner: \"${6:String}\"",
            "      Parameters: ${7:JSON}",
            "      PartitionKeys:",
            "        -",
            "      Retention: ${9:Number}",
            "      TableType: \"${11:String}\"",
            "      ViewExpandedText: \"${13:String}\"",
            "      ViewOriginalText: \"${14:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-table.html"
        ],
        "prefix": "glue-table",
        "scope": "yaml"
    },
    "AWS::Glue::Trigger": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Glue::Trigger",
            "  Properties:",
            "    Actions: # Required",
            "      Actions",
            "    Description: \"${3:String}\"",
            "    Name: \"${4:String}\"",
            "    Predicate:",
            "      Conditions:",
            "        -",
            "      Logical: \"${6:String}\"",
            "    Schedule: \"${6:String}\"",
            "    StartOnCreation: ${7|false,true|}",
            "    Tags: ${8:JSON}",
            "    Type: \"${9:String}\" # Required",
            "    WorkflowName: \"${10:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-trigger.html"
        ],
        "prefix": "glue-trigger",
        "scope": "yaml"
    },
    "AWS::Glue::Workflow": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Glue::Workflow",
            "  Properties:",
            "    DefaultRunProperties: ${2:JSON}",
            "    Description: \"${3:String}\"",
            "    Name: \"${4:String}\"",
            "    Tags: ${5:JSON}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-workflow.html"
        ],
        "prefix": "glue-workflow",
        "scope": "yaml"
    },
    "AWS::Greengrass::ConnectorDefinition": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Greengrass::ConnectorDefinition",
            "  Properties:",
            "    InitialVersion:",
            "      Connectors:",
            "        -",
            "    Name: \"${3:String}\" # Required",
            "    Tags: ${4:JSON}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-connectordefinition.html",
            "Attributes: ",
            "  LatestVersionArn",
            "  Id",
            "  Arn",
            "  Name"
        ],
        "prefix": "greengrass-connectordefinition",
        "scope": "yaml"
    },
    "AWS::Greengrass::ConnectorDefinitionVersion": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Greengrass::ConnectorDefinitionVersion",
            "  Properties:",
            "    ConnectorDefinitionId: \"${2:String}\" # Required",
            "    Connectors: # Required",
            "      Connectors"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-connectordefinitionversion.html"
        ],
        "prefix": "greengrass-connectordefinitionversion",
        "scope": "yaml"
    },
    "AWS::Greengrass::CoreDefinition": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Greengrass::CoreDefinition",
            "  Properties:",
            "    InitialVersion:",
            "      Cores:",
            "        -",
            "    Name: \"${3:String}\" # Required",
            "    Tags: ${4:JSON}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-coredefinition.html",
            "Attributes: ",
            "  LatestVersionArn",
            "  Id",
            "  Arn",
            "  Name"
        ],
        "prefix": "greengrass-coredefinition",
        "scope": "yaml"
    },
    "AWS::Greengrass::CoreDefinitionVersion": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Greengrass::CoreDefinitionVersion",
            "  Properties:",
            "    CoreDefinitionId: \"${2:String}\" # Required",
            "    Cores: # Required",
            "      Cores"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-coredefinitionversion.html"
        ],
        "prefix": "greengrass-coredefinitionversion",
        "scope": "yaml"
    },
    "AWS::Greengrass::DeviceDefinition": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Greengrass::DeviceDefinition",
            "  Properties:",
            "    InitialVersion:",
            "      Devices:",
            "        -",
            "    Name: \"${3:String}\" # Required",
            "    Tags: ${4:JSON}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-devicedefinition.html",
            "Attributes: ",
            "  LatestVersionArn",
            "  Id",
            "  Arn",
            "  Name"
        ],
        "prefix": "greengrass-devicedefinition",
        "scope": "yaml"
    },
    "AWS::Greengrass::DeviceDefinitionVersion": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Greengrass::DeviceDefinitionVersion",
            "  Properties:",
            "    DeviceDefinitionId: \"${2:String}\" # Required",
            "    Devices: # Required",
            "      Devices"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-devicedefinitionversion.html"
        ],
        "prefix": "greengrass-devicedefinitionversion",
        "scope": "yaml"
    },
    "AWS::Greengrass::FunctionDefinition": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Greengrass::FunctionDefinition",
            "  Properties:",
            "    InitialVersion:",
            "      Functions:",
            "        -",
            "    Name: \"${3:String}\" # Required",
            "    Tags: ${4:JSON}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-functiondefinition.html",
            "Attributes: ",
            "  LatestVersionArn",
            "  Id",
            "  Arn",
            "  Name"
        ],
        "prefix": "greengrass-functiondefinition",
        "scope": "yaml"
    },
    "AWS::Greengrass::FunctionDefinitionVersion": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Greengrass::FunctionDefinitionVersion",
            "  Properties:",
            "    DefaultConfig:",
            "    FunctionDefinitionId: \"${3:String}\" # Required",
            "    Functions: # Required",
            "      Functions"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-functiondefinitionversion.html"
        ],
        "prefix": "greengrass-functiondefinitionversion",
        "scope": "yaml"
    },
    "AWS::Greengrass::Group": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Greengrass::Group",
            "  Properties:",
            "    InitialVersion:",
            "      ConnectorDefinitionVersionArn: \"${2:String}\"",
            "      CoreDefinitionVersionArn: \"${3:String}\"",
            "      DeviceDefinitionVersionArn: \"${4:String}\"",
            "      FunctionDefinitionVersionArn: \"${5:String}\"",
            "      LoggerDefinitionVersionArn: \"${6:String}\"",
            "      ResourceDefinitionVersionArn: \"${7:String}\"",
            "      SubscriptionDefinitionVersionArn: \"${8:String}\"",
            "    Name: \"${3:String}\" # Required",
            "    RoleArn: \"${4:String}\"",
            "    Tags: ${5:JSON}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-group.html",
            "Attributes: ",
            "  RoleAttachedAt",
            "  LatestVersionArn",
            "  Id",
            "  Arn",
            "  RoleArn",
            "  Name"
        ],
        "prefix": "greengrass-group",
        "scope": "yaml"
    },
    "AWS::Greengrass::GroupVersion": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Greengrass::GroupVersion",
            "  Properties:",
            "    ConnectorDefinitionVersionArn: \"${2:String}\"",
            "    CoreDefinitionVersionArn: \"${3:String}\"",
            "    DeviceDefinitionVersionArn: \"${4:String}\"",
            "    FunctionDefinitionVersionArn: \"${5:String}\"",
            "    GroupId: \"${6:String}\" # Required",
            "    LoggerDefinitionVersionArn: \"${7:String}\"",
            "    ResourceDefinitionVersionArn: \"${8:String}\"",
            "    SubscriptionDefinitionVersionArn: \"${9:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-groupversion.html"
        ],
        "prefix": "greengrass-groupversion",
        "scope": "yaml"
    },
    "AWS::Greengrass::LoggerDefinition": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Greengrass::LoggerDefinition",
            "  Properties:",
            "    InitialVersion:",
            "      Loggers:",
            "        -",
            "    Name: \"${3:String}\" # Required",
            "    Tags: ${4:JSON}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-loggerdefinition.html",
            "Attributes: ",
            "  LatestVersionArn",
            "  Id",
            "  Arn",
            "  Name"
        ],
        "prefix": "greengrass-loggerdefinition",
        "scope": "yaml"
    },
    "AWS::Greengrass::LoggerDefinitionVersion": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Greengrass::LoggerDefinitionVersion",
            "  Properties:",
            "    LoggerDefinitionId: \"${2:String}\" # Required",
            "    Loggers: # Required",
            "      Loggers"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-loggerdefinitionversion.html"
        ],
        "prefix": "greengrass-loggerdefinitionversion",
        "scope": "yaml"
    },
    "AWS::Greengrass::ResourceDefinition": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Greengrass::ResourceDefinition",
            "  Properties:",
            "    InitialVersion:",
            "      Resources:",
            "        -",
            "    Name: \"${3:String}\" # Required",
            "    Tags: ${4:JSON}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-resourcedefinition.html",
            "Attributes: ",
            "  LatestVersionArn",
            "  Id",
            "  Arn",
            "  Name"
        ],
        "prefix": "greengrass-resourcedefinition",
        "scope": "yaml"
    },
    "AWS::Greengrass::ResourceDefinitionVersion": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Greengrass::ResourceDefinitionVersion",
            "  Properties:",
            "    ResourceDefinitionId: \"${2:String}\" # Required",
            "    Resources: # Required",
            "      Resources"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-resourcedefinitionversion.html"
        ],
        "prefix": "greengrass-resourcedefinitionversion",
        "scope": "yaml"
    },
    "AWS::Greengrass::SubscriptionDefinition": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Greengrass::SubscriptionDefinition",
            "  Properties:",
            "    InitialVersion:",
            "      Subscriptions:",
            "        -",
            "    Name: \"${3:String}\" # Required",
            "    Tags: ${4:JSON}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-subscriptiondefinition.html",
            "Attributes: ",
            "  LatestVersionArn",
            "  Id",
            "  Arn",
            "  Name"
        ],
        "prefix": "greengrass-subscriptiondefinition",
        "scope": "yaml"
    },
    "AWS::Greengrass::SubscriptionDefinitionVersion": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Greengrass::SubscriptionDefinitionVersion",
            "  Properties:",
            "    SubscriptionDefinitionId: \"${2:String}\" # Required",
            "    Subscriptions: # Required",
            "      Subscriptions"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-subscriptiondefinitionversion.html"
        ],
        "prefix": "greengrass-subscriptiondefinitionversion",
        "scope": "yaml"
    },
    "AWS::GreengrassV2::ComponentVersion": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::GreengrassV2::ComponentVersion",
            "  Properties:",
            "    InlineRecipe: \"${2:String}\"",
            "    LambdaFunction:",
            "      ComponentName: \"${5:String}\"",
            "      ComponentPlatforms:",
            "        -",
            "      ComponentVersion: \"${7:String}\"",
            "      LambdaArn: \"${8:String}\"",
            "    Tags:"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrassv2-componentversion.html",
            "Attributes: ",
            "  Arn",
            "  ComponentName",
            "  ComponentVersion"
        ],
        "prefix": "greengrassv2-componentversion",
        "scope": "yaml"
    },
    "AWS::GroundStation::Config": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::GroundStation::Config",
            "  Properties:",
            "    ConfigData:",
            "    Name: \"${3:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-groundstation-config.html",
            "Attributes: ",
            "  Type",
            "  Arn",
            "  Id"
        ],
        "prefix": "groundstation-config",
        "scope": "yaml"
    },
    "AWS::GroundStation::DataflowEndpointGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::GroundStation::DataflowEndpointGroup",
            "  Properties:",
            "    EndpointDetails: # Required",
            "      EndpointDetails",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-groundstation-dataflowendpointgroup.html",
            "Attributes: ",
            "  Id",
            "  Arn"
        ],
        "prefix": "groundstation-dataflowendpointgroup",
        "scope": "yaml"
    },
    "AWS::GroundStation::MissionProfile": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::GroundStation::MissionProfile",
            "  Properties:",
            "    ContactPostPassDurationSeconds: ${2:Number}",
            "    ContactPrePassDurationSeconds: ${3:Number}",
            "    DataflowEdges: # Required",
            "      DataflowEdges",
            "    MinimumViableContactDurationSeconds: ${5:Number} # Required",
            "    Name: \"${6:String}\" # Required",
            "    Tags:",
            "      Tags",
            "    TrackingConfigArn: \"${8:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-groundstation-missionprofile.html",
            "Attributes: ",
            "  Id",
            "  Arn",
            "  Region"
        ],
        "prefix": "groundstation-missionprofile",
        "scope": "yaml"
    },
    "AWS::GuardDuty::Detector": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::GuardDuty::Detector",
            "  Properties:",
            "    DataSources:",
            "    Enable: ${3|false,true|} # Required",
            "    FindingPublishingFrequency: \"${4:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-detector.html"
        ],
        "prefix": "guardduty-detector",
        "scope": "yaml"
    },
    "AWS::GuardDuty::Filter": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::GuardDuty::Filter",
            "  Properties:",
            "    Action: \"${2:String}\" # Required",
            "    Description: \"${3:String}\" # Required",
            "    DetectorId: \"${4:String}\" # Required",
            "    FindingCriteria:",
            "      Criterion: ${5:JSON}",
            "    Name: \"${6:String}\" # Required",
            "    Rank: ${7:Number} # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-filter.html"
        ],
        "prefix": "guardduty-filter",
        "scope": "yaml"
    },
    "AWS::GuardDuty::IPSet": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::GuardDuty::IPSet",
            "  Properties:",
            "    Activate: ${2|false,true|} # Required",
            "    DetectorId: \"${3:String}\" # Required",
            "    Format: \"${4:String}\" # Required",
            "    Location: \"${5:String}\" # Required",
            "    Name: \"${6:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-ipset.html"
        ],
        "prefix": "guardduty-ipset",
        "scope": "yaml"
    },
    "AWS::GuardDuty::Master": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::GuardDuty::Master",
            "  Properties:",
            "    DetectorId: \"${2:String}\" # Required",
            "    InvitationId: \"${3:String}\"",
            "    MasterId: \"${4:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-master.html"
        ],
        "prefix": "guardduty-master",
        "scope": "yaml"
    },
    "AWS::GuardDuty::Member": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::GuardDuty::Member",
            "  Properties:",
            "    DetectorId: \"${2:String}\" # Required",
            "    DisableEmailNotification: ${3|false,true|}",
            "    Email: \"${4:String}\" # Required",
            "    MemberId: \"${5:String}\" # Required",
            "    Message: \"${6:String}\"",
            "    Status: \"${7:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-member.html"
        ],
        "prefix": "guardduty-member",
        "scope": "yaml"
    },
    "AWS::GuardDuty::ThreatIntelSet": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::GuardDuty::ThreatIntelSet",
            "  Properties:",
            "    Activate: ${2|false,true|} # Required",
            "    DetectorId: \"${3:String}\" # Required",
            "    Format: \"${4:String}\" # Required",
            "    Location: \"${5:String}\" # Required",
            "    Name: \"${6:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-threatintelset.html"
        ],
        "prefix": "guardduty-threatintelset",
        "scope": "yaml"
    },
    "AWS::HealthLake::FHIRDatastore": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::HealthLake::FHIRDatastore",
            "  Properties:",
            "    DatastoreName: \"${2:String}\"",
            "    DatastoreTypeVersion: \"${3:String}\" # Required",
            "    PreloadDataConfig:",
            "      PreloadDataType: \"${4:String}\"",
            "    SseConfiguration:",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-healthlake-fhirdatastore.html",
            "Attributes: ",
            "  DatastoreArn",
            "  DatastoreEndpoint",
            "  DatastoreId",
            "  DatastoreStatus"
        ],
        "prefix": "healthlake-fhirdatastore",
        "scope": "yaml"
    },
    "AWS::IAM::AccessKey": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IAM::AccessKey",
            "  Properties:",
            "    Serial: ${2:Number}",
            "    Status: \"${3:String}\"",
            "    UserName: \"${4:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html",
            "Attributes: ",
            "  SecretAccessKey"
        ],
        "prefix": "iam-accesskey",
        "scope": "yaml"
    },
    "AWS::IAM::Group": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IAM::Group",
            "  Properties:",
            "    GroupName: \"${2:String}\"",
            "    ManagedPolicyArns:",
            "      ManagedPolicyArns",
            "    Path: \"${4:String}\"",
            "    Policies:",
            "      Policies"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "iam-group",
        "scope": "yaml"
    },
    "AWS::IAM::InstanceProfile": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IAM::InstanceProfile",
            "  Properties:",
            "    InstanceProfileName: \"${2:String}\"",
            "    Path: \"${3:String}\"",
            "    Roles: # Required",
            "      Roles"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "iam-instanceprofile",
        "scope": "yaml"
    },
    "AWS::IAM::ManagedPolicy": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IAM::ManagedPolicy",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    Groups:",
            "      Groups",
            "    ManagedPolicyName: \"${4:String}\"",
            "    Path: \"${5:String}\"",
            "    PolicyDocument: ${6:JSON} # Required",
            "    Roles:",
            "      Roles",
            "    Users:",
            "      Users"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-managedpolicy.html"
        ],
        "prefix": "iam-managedpolicy",
        "scope": "yaml"
    },
    "AWS::IAM::OIDCProvider": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IAM::OIDCProvider",
            "  Properties:",
            "    ClientIdList:",
            "      ClientIdList",
            "    Tags:",
            "      Tags",
            "    ThumbprintList: # Required",
            "      ThumbprintList",
            "    Url: \"${5:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-oidcprovider.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "iam-oidcprovider",
        "scope": "yaml"
    },
    "AWS::IAM::Policy": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IAM::Policy",
            "  Properties:",
            "    Groups:",
            "      Groups",
            "    PolicyDocument: ${3:JSON} # Required",
            "    PolicyName: \"${4:String}\" # Required",
            "    Roles:",
            "      Roles",
            "    Users:",
            "      Users"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-policy.html"
        ],
        "prefix": "iam-policy",
        "scope": "yaml"
    },
    "AWS::IAM::Role": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IAM::Role",
            "  Properties:",
            "    AssumeRolePolicyDocument: ${2:JSON} # Required",
            "    Description: \"${3:String}\"",
            "    ManagedPolicyArns:",
            "      ManagedPolicyArns",
            "    MaxSessionDuration: ${5:Number}",
            "    Path: \"${6:String}\"",
            "    PermissionsBoundary: \"${7:String}\"",
            "    Policies:",
            "      Policies",
            "    RoleName: \"${9:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html",
            "Attributes: ",
            "  Arn",
            "  RoleId"
        ],
        "prefix": "iam-role",
        "scope": "yaml"
    },
    "AWS::IAM::SAMLProvider": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IAM::SAMLProvider",
            "  Properties:",
            "    Name: \"${2:String}\"",
            "    SamlMetadataDocument: \"${3:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-samlprovider.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "iam-samlprovider",
        "scope": "yaml"
    },
    "AWS::IAM::ServerCertificate": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IAM::ServerCertificate",
            "  Properties:",
            "    CertificateBody: \"${2:String}\"",
            "    CertificateChain: \"${3:String}\"",
            "    Path: \"${4:String}\"",
            "    PrivateKey: \"${5:String}\"",
            "    ServerCertificateName: \"${6:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-servercertificate.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "iam-servercertificate",
        "scope": "yaml"
    },
    "AWS::IAM::ServiceLinkedRole": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IAM::ServiceLinkedRole",
            "  Properties:",
            "    AWSServiceName: \"${2:String}\" # Required",
            "    CustomSuffix: \"${3:String}\"",
            "    Description: \"${4:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-servicelinkedrole.html"
        ],
        "prefix": "iam-servicelinkedrole",
        "scope": "yaml"
    },
    "AWS::IAM::User": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IAM::User",
            "  Properties:",
            "    Groups:",
            "      Groups",
            "    LoginProfile:",
            "      Password: \"${3:String}\"",
            "      PasswordResetRequired: ${4|false,true|}",
            "    ManagedPolicyArns:",
            "      ManagedPolicyArns",
            "    Path: \"${5:String}\"",
            "    PermissionsBoundary: \"${6:String}\"",
            "    Policies:",
            "      Policies",
            "    Tags:",
            "      Tags",
            "    UserName: \"${9:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "iam-user",
        "scope": "yaml"
    },
    "AWS::IAM::UserToGroupAddition": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IAM::UserToGroupAddition",
            "  Properties:",
            "    GroupName: \"${2:String}\" # Required",
            "    Users: # Required",
            "      Users"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"
        ],
        "prefix": "iam-usertogroupaddition",
        "scope": "yaml"
    },
    "AWS::IAM::VirtualMFADevice": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IAM::VirtualMFADevice",
            "  Properties:",
            "    Path: \"${2:String}\"",
            "    Tags:",
            "      Tags",
            "    Users: # Required",
            "      Users",
            "    VirtualMfaDeviceName: \"${5:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-virtualmfadevice.html",
            "Attributes: ",
            "  SerialNumber"
        ],
        "prefix": "iam-virtualmfadevice",
        "scope": "yaml"
    },
    "AWS::IVS::Channel": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IVS::Channel",
            "  Properties:",
            "    Authorized: ${2|false,true|}",
            "    LatencyMode: \"${3:String}\"",
            "    Name: \"${4:String}\"",
            "    RecordingConfigurationArn: \"${5:String}\"",
            "    Tags:",
            "      Tags",
            "    Type: \"${7:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-channel.html",
            "Attributes: ",
            "  Arn",
            "  PlaybackUrl",
            "  IngestEndpoint"
        ],
        "prefix": "ivs-channel",
        "scope": "yaml"
    },
    "AWS::IVS::PlaybackKeyPair": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IVS::PlaybackKeyPair",
            "  Properties:",
            "    Name: \"${2:String}\"",
            "    PublicKeyMaterial: \"${3:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-playbackkeypair.html",
            "Attributes: ",
            "  Fingerprint",
            "  Arn"
        ],
        "prefix": "ivs-playbackkeypair",
        "scope": "yaml"
    },
    "AWS::IVS::RecordingConfiguration": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IVS::RecordingConfiguration",
            "  Properties:",
            "    DestinationConfiguration:",
            "    Name: \"${3:String}\"",
            "    Tags:",
            "      Tags",
            "    ThumbnailConfiguration:",
            "      RecordingMode: \"${5:String}\"",
            "      TargetIntervalSeconds: ${6:Number}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-recordingconfiguration.html",
            "Attributes: ",
            "  Arn",
            "  State"
        ],
        "prefix": "ivs-recordingconfiguration",
        "scope": "yaml"
    },
    "AWS::IVS::StreamKey": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IVS::StreamKey",
            "  Properties:",
            "    ChannelArn: \"${2:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-streamkey.html",
            "Attributes: ",
            "  Arn",
            "  Value"
        ],
        "prefix": "ivs-streamkey",
        "scope": "yaml"
    },
    "AWS::ImageBuilder::Component": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ImageBuilder::Component",
            "  Properties:",
            "    ChangeDescription: \"${2:String}\"",
            "    Data: \"${3:String}\"",
            "    Description: \"${4:String}\"",
            "    KmsKeyId: \"${5:String}\"",
            "    Name: \"${6:String}\" # Required",
            "    Platform: \"${7:String}\" # Required",
            "    SupportedOsVersions:",
            "      SupportedOsVersions",
            "    Tags:",
            "    Uri: \"${10:String}\"",
            "    Version: \"${11:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-component.html",
            "Attributes: ",
            "  Arn",
            "  Name",
            "  Type",
            "  Encrypted"
        ],
        "prefix": "imagebuilder-component",
        "scope": "yaml"
    },
    "AWS::ImageBuilder::ContainerRecipe": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ImageBuilder::ContainerRecipe",
            "  Properties:",
            "    Components: # Required",
            "      Components",
            "    ContainerType: \"${3:String}\" # Required",
            "    Description: \"${4:String}\"",
            "    DockerfileTemplateData: \"${5:String}\"",
            "    DockerfileTemplateUri: \"${6:String}\"",
            "    ImageOsVersionOverride: \"${7:String}\"",
            "    InstanceConfiguration:",
            "      BlockDeviceMappings:",
            "        -",
            "      Image: \"${9:String}\"",
            "    KmsKeyId: \"${9:String}\"",
            "    Name: \"${10:String}\" # Required",
            "    ParentImage: \"${11:String}\" # Required",
            "    PlatformOverride: \"${12:String}\"",
            "    Tags:",
            "    TargetRepository:",
            "      RepositoryName: \"${14:String}\"",
            "      Service: \"${15:String}\"",
            "    Version: \"${15:String}\" # Required",
            "    WorkingDirectory: \"${16:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-containerrecipe.html",
            "Attributes: ",
            "  Arn",
            "  Name"
        ],
        "prefix": "imagebuilder-containerrecipe",
        "scope": "yaml"
    },
    "AWS::ImageBuilder::DistributionConfiguration": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ImageBuilder::DistributionConfiguration",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    Distributions: # Required",
            "      Distributions",
            "    Name: \"${4:String}\" # Required",
            "    Tags:"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-distributionconfiguration.html",
            "Attributes: ",
            "  Arn",
            "  Name"
        ],
        "prefix": "imagebuilder-distributionconfiguration",
        "scope": "yaml"
    },
    "AWS::ImageBuilder::Image": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ImageBuilder::Image",
            "  Properties:",
            "    ContainerRecipeArn: \"${2:String}\"",
            "    DistributionConfigurationArn: \"${3:String}\"",
            "    EnhancedImageMetadataEnabled: ${4|false,true|}",
            "    ImageRecipeArn: \"${5:String}\"",
            "    ImageTestsConfiguration:",
            "      ImageTestsEnabled: ${6|false,true|}",
            "      TimeoutMinutes: ${7:Number}",
            "    InfrastructureConfigurationArn: \"${7:String}\" # Required",
            "    Tags:"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-image.html",
            "Attributes: ",
            "  Arn",
            "  Name",
            "  ImageId",
            "  ImageUri"
        ],
        "prefix": "imagebuilder-image",
        "scope": "yaml"
    },
    "AWS::ImageBuilder::ImagePipeline": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ImageBuilder::ImagePipeline",
            "  Properties:",
            "    ContainerRecipeArn: \"${2:String}\"",
            "    Description: \"${3:String}\"",
            "    DistributionConfigurationArn: \"${4:String}\"",
            "    EnhancedImageMetadataEnabled: ${5|false,true|}",
            "    ImageRecipeArn: \"${6:String}\"",
            "    ImageTestsConfiguration:",
            "      ImageTestsEnabled: ${7|false,true|}",
            "      TimeoutMinutes: ${8:Number}",
            "    InfrastructureConfigurationArn: \"${8:String}\" # Required",
            "    Name: \"${9:String}\" # Required",
            "    Schedule:",
            "      PipelineExecutionStartCondition: \"${10:String}\"",
            "      ScheduleExpression: \"${11:String}\"",
            "    Status: \"${11:String}\"",
            "    Tags:"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagepipeline.html",
            "Attributes: ",
            "  Arn",
            "  Name"
        ],
        "prefix": "imagebuilder-imagepipeline",
        "scope": "yaml"
    },
    "AWS::ImageBuilder::ImageRecipe": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ImageBuilder::ImageRecipe",
            "  Properties:",
            "    AdditionalInstanceConfiguration:",
            "      UserDataOverride: \"${3:String}\"",
            "    BlockDeviceMappings:",
            "      BlockDeviceMappings",
            "    Components: # Required",
            "      Components",
            "    Description: \"${5:String}\"",
            "    Name: \"${6:String}\" # Required",
            "    ParentImage: \"${7:String}\" # Required",
            "    Tags:",
            "    Version: \"${9:String}\" # Required",
            "    WorkingDirectory: \"${10:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagerecipe.html",
            "Attributes: ",
            "  Arn",
            "  Name"
        ],
        "prefix": "imagebuilder-imagerecipe",
        "scope": "yaml"
    },
    "AWS::ImageBuilder::InfrastructureConfiguration": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ImageBuilder::InfrastructureConfiguration",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    InstanceMetadataOptions:",
            "      HttpPutResponseHopLimit: ${3:Number}",
            "      HttpTokens: \"${4:String}\"",
            "    InstanceProfileName: \"${4:String}\" # Required",
            "    InstanceTypes:",
            "      InstanceTypes",
            "    KeyPair: \"${6:String}\"",
            "    Logging:",
            "    Name: \"${8:String}\" # Required",
            "    ResourceTags:",
            "    SecurityGroupIds:",
            "      SecurityGroupIds",
            "    SnsTopicArn: \"${11:String}\"",
            "    SubnetId: \"${12:String}\"",
            "    Tags:",
            "    TerminateInstanceOnFailure: ${14|false,true|}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-infrastructureconfiguration.html",
            "Attributes: ",
            "  Arn",
            "  Name"
        ],
        "prefix": "imagebuilder-infrastructureconfiguration",
        "scope": "yaml"
    },
    "AWS::Inspector::AssessmentTarget": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Inspector::AssessmentTarget",
            "  Properties:",
            "    AssessmentTargetName: \"${2:String}\"",
            "    ResourceGroupArn: \"${3:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspector-assessmenttarget.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "inspector-assessmenttarget",
        "scope": "yaml"
    },
    "AWS::Inspector::AssessmentTemplate": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Inspector::AssessmentTemplate",
            "  Properties:",
            "    AssessmentTargetArn: \"${2:String}\" # Required",
            "    AssessmentTemplateName: \"${3:String}\"",
            "    DurationInSeconds: ${4:Number} # Required",
            "    RulesPackageArns: # Required",
            "      RulesPackageArns",
            "    UserAttributesForFindings:",
            "      UserAttributesForFindings"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspector-assessmenttemplate.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "inspector-assessmenttemplate",
        "scope": "yaml"
    },
    "AWS::Inspector::ResourceGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Inspector::ResourceGroup",
            "  Properties:",
            "    ResourceGroupTags: # Required",
            "      ResourceGroupTags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspector-resourcegroup.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "inspector-resourcegroup",
        "scope": "yaml"
    },
    "AWS::InspectorV2::Filter": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::InspectorV2::Filter",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    FilterAction: \"${3:String}\" # Required",
            "    FilterCriteria:",
            "      AwsAccountId:",
            "        -",
            "      ComponentId:",
            "        -",
            "      ComponentType:",
            "        -",
            "      Ec2InstanceImageId:",
            "        -",
            "      Ec2InstanceSubnetId:",
            "        -",
            "      Ec2InstanceVpcId:",
            "        -",
            "      EcrImageArchitecture:",
            "        -",
            "      EcrImageHash:",
            "        -",
            "      EcrImagePushedAt:",
            "        -",
            "      EcrImageRegistry:",
            "        -",
            "      EcrImageRepositoryName:",
            "        -",
            "      EcrImageTags:",
            "        -",
            "      FindingArn:",
            "        -",
            "      FindingStatus:",
            "        -",
            "      FindingType:",
            "        -",
            "      FirstObservedAt:",
            "        -",
            "      InspectorScore:",
            "        -",
            "      LastObservedAt:",
            "        -",
            "      NetworkProtocol:",
            "        -",
            "      PortRange:",
            "        -",
            "      RelatedVulnerabilities:",
            "        -",
            "      ResourceId:",
            "        -",
            "      ResourceTags:",
            "        -",
            "      ResourceType:",
            "        -",
            "      Severity:",
            "        -",
            "      Title:",
            "        -",
            "      UpdatedAt:",
            "        -",
            "      VendorSeverity:",
            "        -",
            "      VulnerabilityId:",
            "        -",
            "      VulnerabilitySource:",
            "        -",
            "      VulnerablePackages:",
            "        -",
            "    Name: \"${5:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspectorv2-filter.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "inspectorv2-filter",
        "scope": "yaml"
    },
    "AWS::IoT1Click::Device": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoT1Click::Device",
            "  Properties:",
            "    DeviceId: \"${2:String}\" # Required",
            "    Enabled: ${3|false,true|} # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot1click-device.html",
            "Attributes: ",
            "  DeviceId",
            "  Enabled",
            "  Arn"
        ],
        "prefix": "iot1click-device",
        "scope": "yaml"
    },
    "AWS::IoT1Click::Placement": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoT1Click::Placement",
            "  Properties:",
            "    AssociatedDevices: ${2:JSON}",
            "    Attributes: ${3:JSON}",
            "    PlacementName: \"${4:String}\"",
            "    ProjectName: \"${5:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot1click-placement.html",
            "Attributes: ",
            "  PlacementName",
            "  ProjectName"
        ],
        "prefix": "iot1click-placement",
        "scope": "yaml"
    },
    "AWS::IoT1Click::Project": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoT1Click::Project",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    PlacementTemplate:",
            "      DefaultAttributes: ${3:JSON}",
            "      DeviceTemplates: ${4:JSON}",
            "    ProjectName: \"${4:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot1click-project.html",
            "Attributes: ",
            "  ProjectName",
            "  Arn"
        ],
        "prefix": "iot1click-project",
        "scope": "yaml"
    },
    "AWS::IoT::AccountAuditConfiguration": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoT::AccountAuditConfiguration",
            "  Properties:",
            "    AccountId: \"${2:String}\" # Required",
            "    AuditCheckConfigurations:",
            "    AuditNotificationTargetConfigurations:",
            "    RoleArn: \"${5:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-accountauditconfiguration.html"
        ],
        "prefix": "iot-accountauditconfiguration",
        "scope": "yaml"
    },
    "AWS::IoT::Authorizer": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoT::Authorizer",
            "  Properties:",
            "    AuthorizerFunctionArn: \"${2:String}\" # Required",
            "    AuthorizerName: \"${3:String}\"",
            "    EnableCachingForHttp: ${4|false,true|}",
            "    SigningDisabled: ${5|false,true|}",
            "    Status: \"${6:String}\"",
            "    Tags:",
            "      Tags",
            "    TokenKeyName: \"${8:String}\"",
            "    TokenSigningPublicKeys:"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-authorizer.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "iot-authorizer",
        "scope": "yaml"
    },
    "AWS::IoT::Certificate": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoT::Certificate",
            "  Properties:",
            "    CACertificatePem: \"${2:String}\"",
            "    CertificateMode: \"${3:String}\"",
            "    CertificatePem: \"${4:String}\"",
            "    CertificateSigningRequest: \"${5:String}\"",
            "    Status: \"${6:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-certificate.html",
            "Attributes: ",
            "  Id",
            "  Arn"
        ],
        "prefix": "iot-certificate",
        "scope": "yaml"
    },
    "AWS::IoT::CustomMetric": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoT::CustomMetric",
            "  Properties:",
            "    DisplayName: \"${2:String}\"",
            "    MetricName: \"${3:String}\"",
            "    MetricType: \"${4:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-custommetric.html",
            "Attributes: ",
            "  MetricArn"
        ],
        "prefix": "iot-custommetric",
        "scope": "yaml"
    },
    "AWS::IoT::Dimension": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoT::Dimension",
            "  Properties:",
            "    Name: \"${2:String}\"",
            "    StringValues: # Required",
            "      StringValues",
            "    Tags:",
            "      Tags",
            "    Type: \"${5:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-dimension.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "iot-dimension",
        "scope": "yaml"
    },
    "AWS::IoT::DomainConfiguration": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoT::DomainConfiguration",
            "  Properties:",
            "    AuthorizerConfig:",
            "      AllowAuthorizerOverride: ${2|false,true|}",
            "      DefaultAuthorizerName: \"${3:String}\"",
            "    DomainConfigurationName: \"${3:String}\"",
            "    DomainConfigurationStatus: \"${4:String}\"",
            "    DomainName: \"${5:String}\"",
            "    ServerCertificateArns:",
            "      ServerCertificateArns",
            "    ServiceType: \"${7:String}\"",
            "    Tags:",
            "      Tags",
            "    ValidationCertificateArn: \"${9:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-domainconfiguration.html",
            "Attributes: ",
            "  Arn",
            "  DomainType",
            "  ServerCertificates"
        ],
        "prefix": "iot-domainconfiguration",
        "scope": "yaml"
    },
    "AWS::IoT::FleetMetric": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoT::FleetMetric",
            "  Properties:",
            "    AggregationField: \"${2:String}\"",
            "    AggregationType:",
            "      Name: \"${3:String}\"",
            "      Values:",
            "        -",
            "    Description: \"${4:String}\"",
            "    IndexName: \"${5:String}\"",
            "    MetricName: \"${6:String}\" # Required",
            "    Period: ${7:Number}",
            "    QueryString: \"${8:String}\"",
            "    QueryVersion: \"${9:String}\"",
            "    Tags:",
            "      Tags",
            "    Unit: \"${11:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-fleetmetric.html",
            "Attributes: ",
            "  MetricArn",
            "  CreationDate",
            "  LastModifiedDate",
            "  Version"
        ],
        "prefix": "iot-fleetmetric",
        "scope": "yaml"
    },
    "AWS::IoT::JobTemplate": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoT::JobTemplate",
            "  Properties:",
            "    AbortConfig: ${2:JSON}",
            "    Description: \"${3:String}\" # Required",
            "    Document: \"${4:String}\"",
            "    DocumentSource: \"${5:String}\"",
            "    JobArn: \"${6:String}\"",
            "    JobExecutionsRetryConfig: ${7:JSON}",
            "    JobExecutionsRolloutConfig: ${8:JSON}",
            "    JobTemplateId: \"${9:String}\" # Required",
            "    PresignedUrlConfig: ${10:JSON}",
            "    Tags:",
            "      Tags",
            "    TimeoutConfig: ${12:JSON}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-jobtemplate.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "iot-jobtemplate",
        "scope": "yaml"
    },
    "AWS::IoT::Logging": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoT::Logging",
            "  Properties:",
            "    AccountId: \"${2:String}\" # Required",
            "    DefaultLogLevel: \"${3:String}\" # Required",
            "    RoleArn: \"${4:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-logging.html"
        ],
        "prefix": "iot-logging",
        "scope": "yaml"
    },
    "AWS::IoT::MitigationAction": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoT::MitigationAction",
            "  Properties:",
            "    ActionName: \"${2:String}\"",
            "    ActionParams:",
            "    RoleArn: \"${4:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-mitigationaction.html",
            "Attributes: ",
            "  MitigationActionArn",
            "  MitigationActionId"
        ],
        "prefix": "iot-mitigationaction",
        "scope": "yaml"
    },
    "AWS::IoT::Policy": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoT::Policy",
            "  Properties:",
            "    PolicyDocument: ${2:JSON} # Required",
            "    PolicyName: \"${3:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-policy.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "iot-policy",
        "scope": "yaml"
    },
    "AWS::IoT::PolicyPrincipalAttachment": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoT::PolicyPrincipalAttachment",
            "  Properties:",
            "    PolicyName: \"${2:String}\" # Required",
            "    Principal: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-policyprincipalattachment.html"
        ],
        "prefix": "iot-policyprincipalattachment",
        "scope": "yaml"
    },
    "AWS::IoT::ProvisioningTemplate": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoT::ProvisioningTemplate",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    Enabled: ${3|false,true|}",
            "    PreProvisioningHook:",
            "      PayloadVersion: \"${4:String}\"",
            "      TargetArn: \"${5:String}\"",
            "    ProvisioningRoleArn: \"${5:String}\" # Required",
            "    Tags:",
            "      Tags",
            "    TemplateBody: \"${7:String}\" # Required",
            "    TemplateName: \"${8:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-provisioningtemplate.html",
            "Attributes: ",
            "  TemplateArn"
        ],
        "prefix": "iot-provisioningtemplate",
        "scope": "yaml"
    },
    "AWS::IoT::ResourceSpecificLogging": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoT::ResourceSpecificLogging",
            "  Properties:",
            "    LogLevel: \"${2:String}\" # Required",
            "    TargetName: \"${3:String}\" # Required",
            "    TargetType: \"${4:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-resourcespecificlogging.html",
            "Attributes: ",
            "  TargetId"
        ],
        "prefix": "iot-resourcespecificlogging",
        "scope": "yaml"
    },
    "AWS::IoT::ScheduledAudit": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoT::ScheduledAudit",
            "  Properties:",
            "    DayOfMonth: \"${2:String}\"",
            "    DayOfWeek: \"${3:String}\"",
            "    Frequency: \"${4:String}\" # Required",
            "    ScheduledAuditName: \"${5:String}\"",
            "    Tags:",
            "      Tags",
            "    TargetCheckNames: # Required",
            "      TargetCheckNames"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-scheduledaudit.html",
            "Attributes: ",
            "  ScheduledAuditArn"
        ],
        "prefix": "iot-scheduledaudit",
        "scope": "yaml"
    },
    "AWS::IoT::SecurityProfile": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoT::SecurityProfile",
            "  Properties:",
            "    AdditionalMetricsToRetainV2:",
            "      AdditionalMetricsToRetainV2",
            "    AlertTargets:",
            "    Behaviors:",
            "      Behaviors",
            "    SecurityProfileDescription: \"${5:String}\"",
            "    SecurityProfileName: \"${6:String}\"",
            "    Tags:",
            "      Tags",
            "    TargetArns:",
            "      TargetArns"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-securityprofile.html",
            "Attributes: ",
            "  SecurityProfileArn"
        ],
        "prefix": "iot-securityprofile",
        "scope": "yaml"
    },
    "AWS::IoT::Thing": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoT::Thing",
            "  Properties:",
            "    AttributePayload:",
            "    ThingName: \"${3:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-thing.html"
        ],
        "prefix": "iot-thing",
        "scope": "yaml"
    },
    "AWS::IoT::ThingPrincipalAttachment": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoT::ThingPrincipalAttachment",
            "  Properties:",
            "    Principal: \"${2:String}\" # Required",
            "    ThingName: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-thingprincipalattachment.html"
        ],
        "prefix": "iot-thingprincipalattachment",
        "scope": "yaml"
    },
    "AWS::IoT::TopicRule": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoT::TopicRule",
            "  Properties:",
            "    RuleName: \"${2:String}\"",
            "    Tags:",
            "      Tags",
            "    TopicRulePayload:",
            "      Actions:",
            "        -",
            "      AwsIotSqlVersion: \"${5:String}\"",
            "      Description: \"${6:String}\"",
            "      RuleDisabled: ${8|false,true|}",
            "      Sql: \"${9:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-topicrule.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "iot-topicrule",
        "scope": "yaml"
    },
    "AWS::IoT::TopicRuleDestination": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoT::TopicRuleDestination",
            "  Properties:",
            "    HttpUrlProperties:",
            "      ConfirmationUrl: \"${2:String}\"",
            "    Status: \"${3:String}\"",
            "    VpcProperties:",
            "      RoleArn: \"${4:String}\"",
            "      SecurityGroups:",
            "        -",
            "      SubnetIds:",
            "        -",
            "      VpcId: \"${7:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-topicruledestination.html",
            "Attributes: ",
            "  Arn",
            "  StatusReason"
        ],
        "prefix": "iot-topicruledestination",
        "scope": "yaml"
    },
    "AWS::IoTAnalytics::Channel": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoTAnalytics::Channel",
            "  Properties:",
            "    ChannelName: \"${2:String}\"",
            "    ChannelStorage:",
            "    RetentionPeriod:",
            "      NumberOfDays: ${4:Number}",
            "      Unlimited: ${5|false,true|}",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotanalytics-channel.html",
            "Attributes: ",
            "  Id"
        ],
        "prefix": "iotanalytics-channel",
        "scope": "yaml"
    },
    "AWS::IoTAnalytics::Dataset": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoTAnalytics::Dataset",
            "  Properties:",
            "    Actions: # Required",
            "      Actions",
            "    ContentDeliveryRules:",
            "      ContentDeliveryRules",
            "    DatasetName: \"${4:String}\"",
            "    LateDataRules:",
            "      LateDataRules",
            "    RetentionPeriod:",
            "      NumberOfDays: ${6:Number}",
            "      Unlimited: ${7|false,true|}",
            "    Tags:",
            "      Tags",
            "    Triggers:",
            "      Triggers",
            "    VersioningConfiguration:",
            "      MaxVersions: ${9:Number}",
            "      Unlimited: ${10|false,true|}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotanalytics-dataset.html",
            "Attributes: ",
            "  Id"
        ],
        "prefix": "iotanalytics-dataset",
        "scope": "yaml"
    },
    "AWS::IoTAnalytics::Datastore": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoTAnalytics::Datastore",
            "  Properties:",
            "    DatastoreName: \"${2:String}\"",
            "    DatastorePartitions:",
            "      Partitions:",
            "        -",
            "    DatastoreStorage:",
            "    FileFormatConfiguration:",
            "    RetentionPeriod:",
            "      NumberOfDays: ${6:Number}",
            "      Unlimited: ${7|false,true|}",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotanalytics-datastore.html",
            "Attributes: ",
            "  Id"
        ],
        "prefix": "iotanalytics-datastore",
        "scope": "yaml"
    },
    "AWS::IoTAnalytics::Pipeline": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoTAnalytics::Pipeline",
            "  Properties:",
            "    PipelineActivities: # Required",
            "      PipelineActivities",
            "    PipelineName: \"${3:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotanalytics-pipeline.html",
            "Attributes: ",
            "  Id"
        ],
        "prefix": "iotanalytics-pipeline",
        "scope": "yaml"
    },
    "AWS::IoTCoreDeviceAdvisor::SuiteDefinition": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoTCoreDeviceAdvisor::SuiteDefinition",
            "  Properties:",
            "    SuiteDefinitionConfiguration: ${2:JSON} # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotcoredeviceadvisor-suitedefinition.html",
            "Attributes: ",
            "  SuiteDefinitionId",
            "  SuiteDefinitionArn",
            "  SuiteDefinitionVersion"
        ],
        "prefix": "iotcoredeviceadvisor-suitedefinition",
        "scope": "yaml"
    },
    "AWS::IoTEvents::AlarmModel": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoTEvents::AlarmModel",
            "  Properties:",
            "    AlarmCapabilities:",
            "    AlarmEventActions:",
            "      AlarmActions:",
            "        -",
            "    AlarmModelDescription: \"${4:String}\"",
            "    AlarmModelName: \"${5:String}\"",
            "    AlarmRule:",
            "    Key: \"${7:String}\"",
            "    RoleArn: \"${8:String}\" # Required",
            "    Severity: ${9:Number}",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotevents-alarmmodel.html"
        ],
        "prefix": "iotevents-alarmmodel",
        "scope": "yaml"
    },
    "AWS::IoTEvents::DetectorModel": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoTEvents::DetectorModel",
            "  Properties:",
            "    DetectorModelDefinition:",
            "      InitialStateName: \"${2:String}\"",
            "      States:",
            "        -",
            "    DetectorModelDescription: \"${3:String}\"",
            "    DetectorModelName: \"${4:String}\"",
            "    EvaluationMethod: \"${5:String}\"",
            "    Key: \"${6:String}\"",
            "    RoleArn: \"${7:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotevents-detectormodel.html"
        ],
        "prefix": "iotevents-detectormodel",
        "scope": "yaml"
    },
    "AWS::IoTEvents::Input": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoTEvents::Input",
            "  Properties:",
            "    InputDefinition:",
            "      Attributes:",
            "        -",
            "    InputDescription: \"${3:String}\"",
            "    InputName: \"${4:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotevents-input.html"
        ],
        "prefix": "iotevents-input",
        "scope": "yaml"
    },
    "AWS::IoTFleetHub::Application": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoTFleetHub::Application",
            "  Properties:",
            "    ApplicationDescription: \"${2:String}\"",
            "    ApplicationName: \"${3:String}\" # Required",
            "    RoleArn: \"${4:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleethub-application.html",
            "Attributes: ",
            "  ApplicationId",
            "  ApplicationArn",
            "  ApplicationUrl",
            "  ApplicationState",
            "  ApplicationCreationDate",
            "  ApplicationLastUpdateDate",
            "  SsoClientId",
            "  ErrorMessage"
        ],
        "prefix": "iotfleethub-application",
        "scope": "yaml"
    },
    "AWS::IoTSiteWise::AccessPolicy": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoTSiteWise::AccessPolicy",
            "  Properties:",
            "    AccessPolicyIdentity:",
            "    AccessPolicyPermission: \"${3:String}\" # Required",
            "    AccessPolicyResource:"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-accesspolicy.html",
            "Attributes: ",
            "  AccessPolicyId",
            "  AccessPolicyArn"
        ],
        "prefix": "iotsitewise-accesspolicy",
        "scope": "yaml"
    },
    "AWS::IoTSiteWise::Asset": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoTSiteWise::Asset",
            "  Properties:",
            "    AssetHierarchies:",
            "      AssetHierarchies",
            "    AssetModelId: \"${3:String}\" # Required",
            "    AssetName: \"${4:String}\" # Required",
            "    AssetProperties:",
            "      AssetProperties",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-asset.html",
            "Attributes: ",
            "  AssetId",
            "  AssetArn"
        ],
        "prefix": "iotsitewise-asset",
        "scope": "yaml"
    },
    "AWS::IoTSiteWise::AssetModel": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoTSiteWise::AssetModel",
            "  Properties:",
            "    AssetModelCompositeModels:",
            "      AssetModelCompositeModels",
            "    AssetModelDescription: \"${3:String}\"",
            "    AssetModelHierarchies:",
            "      AssetModelHierarchies",
            "    AssetModelName: \"${5:String}\" # Required",
            "    AssetModelProperties:",
            "      AssetModelProperties",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-assetmodel.html",
            "Attributes: ",
            "  AssetModelId",
            "  AssetModelArn"
        ],
        "prefix": "iotsitewise-assetmodel",
        "scope": "yaml"
    },
    "AWS::IoTSiteWise::Dashboard": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoTSiteWise::Dashboard",
            "  Properties:",
            "    DashboardDefinition: \"${2:String}\" # Required",
            "    DashboardDescription: \"${3:String}\" # Required",
            "    DashboardName: \"${4:String}\" # Required",
            "    ProjectId: \"${5:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-dashboard.html",
            "Attributes: ",
            "  DashboardId",
            "  DashboardArn"
        ],
        "prefix": "iotsitewise-dashboard",
        "scope": "yaml"
    },
    "AWS::IoTSiteWise::Gateway": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoTSiteWise::Gateway",
            "  Properties:",
            "    GatewayCapabilitySummaries:",
            "      GatewayCapabilitySummaries",
            "    GatewayName: \"${3:String}\" # Required",
            "    GatewayPlatform:",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-gateway.html",
            "Attributes: ",
            "  GatewayId"
        ],
        "prefix": "iotsitewise-gateway",
        "scope": "yaml"
    },
    "AWS::IoTSiteWise::Portal": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoTSiteWise::Portal",
            "  Properties:",
            "    Alarms: ${2:JSON}",
            "    NotificationSenderEmail: \"${3:String}\"",
            "    PortalAuthMode: \"${4:String}\"",
            "    PortalContactEmail: \"${5:String}\" # Required",
            "    PortalDescription: \"${6:String}\"",
            "    PortalName: \"${7:String}\" # Required",
            "    RoleArn: \"${8:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-portal.html",
            "Attributes: ",
            "  PortalArn",
            "  PortalClientId",
            "  PortalId",
            "  PortalStartUrl"
        ],
        "prefix": "iotsitewise-portal",
        "scope": "yaml"
    },
    "AWS::IoTSiteWise::Project": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoTSiteWise::Project",
            "  Properties:",
            "    AssetIds:",
            "      AssetIds",
            "    PortalId: \"${3:String}\" # Required",
            "    ProjectDescription: \"${4:String}\"",
            "    ProjectName: \"${5:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-project.html",
            "Attributes: ",
            "  ProjectId",
            "  ProjectArn"
        ],
        "prefix": "iotsitewise-project",
        "scope": "yaml"
    },
    "AWS::IoTThingsGraph::FlowTemplate": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoTThingsGraph::FlowTemplate",
            "  Properties:",
            "    CompatibleNamespaceVersion: ${2:Number}",
            "    Definition:",
            "      Language: \"${3:String}\"",
            "      Text: \"${4:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotthingsgraph-flowtemplate.html"
        ],
        "prefix": "iotthingsgraph-flowtemplate",
        "scope": "yaml"
    },
    "AWS::IoTTwinMaker::ComponentType": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoTTwinMaker::ComponentType",
            "  Properties:",
            "    ComponentTypeId: \"${2:String}\" # Required",
            "    Description: \"${3:String}\"",
            "    ExtendsFrom:",
            "      ExtendsFrom",
            "    Functions:",
            "    IsSingleton: ${6|false,true|}",
            "    PropertyDefinitions:",
            "    Tags:",
            "    WorkspaceId: \"${9:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-componenttype.html",
            "Attributes: ",
            "  Arn",
            "  CreationDateTime",
            "  UpdateDateTime",
            "  IsAbstract",
            "  IsSchemaInitialized"
        ],
        "prefix": "iottwinmaker-componenttype",
        "scope": "yaml"
    },
    "AWS::IoTTwinMaker::Entity": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoTTwinMaker::Entity",
            "  Properties:",
            "    Components:",
            "    Description: \"${3:String}\"",
            "    EntityId: \"${4:String}\"",
            "    EntityName: \"${5:String}\" # Required",
            "    ParentEntityId: \"${6:String}\"",
            "    Tags:",
            "    WorkspaceId: \"${8:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-entity.html",
            "Attributes: ",
            "  HasChildEntities",
            "  Arn",
            "  CreationDateTime",
            "  UpdateDateTime"
        ],
        "prefix": "iottwinmaker-entity",
        "scope": "yaml"
    },
    "AWS::IoTTwinMaker::Scene": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoTTwinMaker::Scene",
            "  Properties:",
            "    Capabilities:",
            "      Capabilities",
            "    ContentLocation: \"${3:String}\" # Required",
            "    Description: \"${4:String}\"",
            "    SceneId: \"${5:String}\" # Required",
            "    Tags:",
            "    WorkspaceId: \"${7:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-scene.html",
            "Attributes: ",
            "  Arn",
            "  CreationDateTime",
            "  UpdateDateTime"
        ],
        "prefix": "iottwinmaker-scene",
        "scope": "yaml"
    },
    "AWS::IoTTwinMaker::Workspace": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoTTwinMaker::Workspace",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    Role: \"${3:String}\" # Required",
            "    S3Location: \"${4:String}\" # Required",
            "    Tags:",
            "    WorkspaceId: \"${6:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-workspace.html",
            "Attributes: ",
            "  Arn",
            "  CreationDateTime",
            "  UpdateDateTime"
        ],
        "prefix": "iottwinmaker-workspace",
        "scope": "yaml"
    },
    "AWS::IoTWireless::Destination": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoTWireless::Destination",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    Expression: \"${3:String}\" # Required",
            "    ExpressionType: \"${4:String}\" # Required",
            "    Name: \"${5:String}\" # Required",
            "    RoleArn: \"${6:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-destination.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "iotwireless-destination",
        "scope": "yaml"
    },
    "AWS::IoTWireless::DeviceProfile": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoTWireless::DeviceProfile",
            "  Properties:",
            "    LoRaWAN:",
            "      ClassBTimeout: ${2:Number}",
            "      ClassCTimeout: ${3:Number}",
            "      MacVersion: \"${4:String}\"",
            "      MaxDutyCycle: ${5:Number}",
            "      MaxEirp: ${6:Number}",
            "      PingSlotDr: ${7:Number}",
            "      PingSlotFreq: ${8:Number}",
            "      PingSlotPeriod: ${9:Number}",
            "      RegParamsRevision: \"${10:String}\"",
            "      RfRegion: \"${11:String}\"",
            "      Supports32BitFCnt: ${12|false,true|}",
            "      SupportsClassB: ${13|false,true|}",
            "      SupportsClassC: ${14|false,true|}",
            "      SupportsJoin: ${15|false,true|}",
            "    Name: \"${3:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-deviceprofile.html",
            "Attributes: ",
            "  Arn",
            "  Id"
        ],
        "prefix": "iotwireless-deviceprofile",
        "scope": "yaml"
    },
    "AWS::IoTWireless::FuotaTask": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoTWireless::FuotaTask",
            "  Properties:",
            "    AssociateMulticastGroup: \"${2:String}\"",
            "    AssociateWirelessDevice: \"${3:String}\"",
            "    Description: \"${4:String}\"",
            "    DisassociateMulticastGroup: \"${5:String}\"",
            "    DisassociateWirelessDevice: \"${6:String}\"",
            "    FirmwareUpdateImage: \"${7:String}\" # Required",
            "    FirmwareUpdateRole: \"${8:String}\" # Required",
            "    LoRaWAN:",
            "      RfRegion: \"${9:String}\"",
            "      StartTime: \"${10:String}\"",
            "    Name: \"${10:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-fuotatask.html",
            "Attributes: ",
            "  LoRaWAN.StartTime",
            "  Arn",
            "  Id",
            "  FuotaTaskStatus"
        ],
        "prefix": "iotwireless-fuotatask",
        "scope": "yaml"
    },
    "AWS::IoTWireless::MulticastGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoTWireless::MulticastGroup",
            "  Properties:",
            "    AssociateWirelessDevice: \"${2:String}\"",
            "    Description: \"${3:String}\"",
            "    DisassociateWirelessDevice: \"${4:String}\"",
            "    LoRaWAN:",
            "      DlClass: \"${5:String}\"",
            "      NumberOfDevicesInGroup: ${6:Number}",
            "      NumberOfDevicesRequested: ${7:Number}",
            "      RfRegion: \"${8:String}\"",
            "    Name: \"${6:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-multicastgroup.html",
            "Attributes: ",
            "  LoRaWAN.NumberOfDevicesRequested",
            "  LoRaWAN.NumberOfDevicesInGroup",
            "  Arn",
            "  Id",
            "  Status"
        ],
        "prefix": "iotwireless-multicastgroup",
        "scope": "yaml"
    },
    "AWS::IoTWireless::PartnerAccount": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoTWireless::PartnerAccount",
            "  Properties:",
            "    AccountLinked: ${2|false,true|}",
            "    Fingerprint: \"${3:String}\"",
            "    PartnerAccountId: \"${4:String}\"",
            "    PartnerType: \"${5:String}\"",
            "    Sidewalk:",
            "      AppServerPrivateKey: \"${6:String}\"",
            "    SidewalkUpdate:",
            "      AppServerPrivateKey: \"${7:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-partneraccount.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "iotwireless-partneraccount",
        "scope": "yaml"
    },
    "AWS::IoTWireless::ServiceProfile": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoTWireless::ServiceProfile",
            "  Properties:",
            "    LoRaWAN:",
            "      AddGwMetadata: ${2|false,true|}",
            "      ChannelMask: \"${3:String}\"",
            "      DevStatusReqFreq: ${4:Number}",
            "      DlBucketSize: ${5:Number}",
            "      DlRate: ${6:Number}",
            "      DlRatePolicy: \"${7:String}\"",
            "      DrMax: ${8:Number}",
            "      DrMin: ${9:Number}",
            "      HrAllowed: ${10|false,true|}",
            "      MinGwDiversity: ${11:Number}",
            "      NwkGeoLoc: ${12|false,true|}",
            "      PrAllowed: ${13|false,true|}",
            "      RaAllowed: ${14|false,true|}",
            "      ReportDevStatusBattery: ${15|false,true|}",
            "      ReportDevStatusMargin: ${16|false,true|}",
            "      TargetPer: ${17:Number}",
            "      UlBucketSize: ${18:Number}",
            "      UlRate: ${19:Number}",
            "      UlRatePolicy: \"${20:String}\"",
            "    Name: \"${3:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-serviceprofile.html",
            "Attributes: ",
            "  LoRaWAN.UlRate",
            "  LoRaWAN.UlBucketSize",
            "  LoRaWAN.UlRatePolicy",
            "  LoRaWAN.DlRate",
            "  LoRaWAN.DlBucketSize",
            "  LoRaWAN.DlRatePolicy",
            "  LoRaWAN.DevStatusReqFreq",
            "  LoRaWAN.ReportDevStatusBattery",
            "  LoRaWAN.ReportDevStatusMargin",
            "  LoRaWAN.DrMin",
            "  LoRaWAN.DrMax",
            "  LoRaWAN.ChannelMask",
            "  LoRaWAN.PrAllowed",
            "  LoRaWAN.HrAllowed",
            "  LoRaWAN.RaAllowed",
            "  LoRaWAN.NwkGeoLoc",
            "  LoRaWAN.TargetPer",
            "  LoRaWAN.MinGwDiversity",
            "  Arn",
            "  Id"
        ],
        "prefix": "iotwireless-serviceprofile",
        "scope": "yaml"
    },
    "AWS::IoTWireless::TaskDefinition": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoTWireless::TaskDefinition",
            "  Properties:",
            "    AutoCreateTasks: ${2|false,true|} # Required",
            "    LoRaWANUpdateGatewayTaskEntry:",
            "    Name: \"${4:String}\"",
            "    Tags:",
            "      Tags",
            "    TaskDefinitionType: \"${6:String}\"",
            "    Update:",
            "      UpdateDataRole: \"${8:String}\"",
            "      UpdateDataSource: \"${9:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-taskdefinition.html",
            "Attributes: ",
            "  Id",
            "  Arn"
        ],
        "prefix": "iotwireless-taskdefinition",
        "scope": "yaml"
    },
    "AWS::IoTWireless::WirelessDevice": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoTWireless::WirelessDevice",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    DestinationName: \"${3:String}\" # Required",
            "    LastUplinkReceivedAt: \"${4:String}\"",
            "    LoRaWAN:",
            "      DevEui: \"${7:String}\"",
            "      DeviceProfileId: \"${8:String}\"",
            "      ServiceProfileId: \"${11:String}\"",
            "    Name: \"${6:String}\"",
            "    Tags:",
            "      Tags",
            "    ThingArn: \"${8:String}\"",
            "    Type: \"${9:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessdevice.html",
            "Attributes: ",
            "  Arn",
            "  Id",
            "  ThingName"
        ],
        "prefix": "iotwireless-wirelessdevice",
        "scope": "yaml"
    },
    "AWS::IoTWireless::WirelessGateway": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::IoTWireless::WirelessGateway",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    LastUplinkReceivedAt: \"${3:String}\"",
            "    LoRaWAN:",
            "      GatewayEui: \"${4:String}\"",
            "      RfRegion: \"${5:String}\"",
            "    Name: \"${5:String}\"",
            "    Tags:",
            "      Tags",
            "    ThingArn: \"${7:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessgateway.html",
            "Attributes: ",
            "  Arn",
            "  Id",
            "  ThingName"
        ],
        "prefix": "iotwireless-wirelessgateway",
        "scope": "yaml"
    },
    "AWS::KMS::Alias": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::KMS::Alias",
            "  Properties:",
            "    AliasName: \"${2:String}\" # Required",
            "    TargetKeyId: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-alias.html"
        ],
        "prefix": "kms-alias",
        "scope": "yaml"
    },
    "AWS::KMS::Key": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::KMS::Key",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    EnableKeyRotation: ${3|false,true|}",
            "    Enabled: ${4|false,true|}",
            "    KeyPolicy: ${5:JSON} # Required",
            "    KeySpec: \"${6:String}\"",
            "    KeyUsage: \"${7:String}\"",
            "    MultiRegion: ${8|false,true|}",
            "    PendingWindowInDays: ${9:Number}",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html",
            "Attributes: ",
            "  Arn",
            "  KeyId"
        ],
        "prefix": "kms-key",
        "scope": "yaml"
    },
    "AWS::KMS::ReplicaKey": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::KMS::ReplicaKey",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    Enabled: ${3|false,true|}",
            "    KeyPolicy: ${4:JSON} # Required",
            "    PendingWindowInDays: ${5:Number}",
            "    PrimaryKeyArn: \"${6:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-replicakey.html",
            "Attributes: ",
            "  Arn",
            "  KeyId"
        ],
        "prefix": "kms-replicakey",
        "scope": "yaml"
    },
    "AWS::KafkaConnect::Connector": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::KafkaConnect::Connector",
            "  Properties:",
            "    Capacity:",
            "    ConnectorConfiguration:",
            "    ConnectorDescription: \"${4:String}\"",
            "    ConnectorName: \"${5:String}\" # Required",
            "    KafkaCluster:",
            "    KafkaClusterClientAuthentication:",
            "      AuthenticationType: \"${7:String}\"",
            "    KafkaClusterEncryptionInTransit:",
            "      EncryptionType: \"${8:String}\"",
            "    KafkaConnectVersion: \"${9:String}\" # Required",
            "    LogDelivery:",
            "    Plugins: # Required",
            "      Plugins",
            "    ServiceExecutionRoleArn: \"${12:String}\" # Required",
            "    WorkerConfiguration:",
            "      Revision: ${13:Number}",
            "      WorkerConfigurationArn: \"${14:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html",
            "Attributes: ",
            "  ConnectorArn"
        ],
        "prefix": "kafkaconnect-connector",
        "scope": "yaml"
    },
    "AWS::Kendra::DataSource": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Kendra::DataSource",
            "  Properties:",
            "    CustomDocumentEnrichmentConfiguration:",
            "      InlineConfigurations:",
            "        -",
            "      RoleArn: \"${5:String}\"",
            "    DataSourceConfiguration:",
            "    Description: \"${4:String}\"",
            "    IndexId: \"${5:String}\" # Required",
            "    Name: \"${6:String}\" # Required",
            "    RoleArn: \"${7:String}\"",
            "    Schedule: \"${8:String}\"",
            "    Tags:",
            "      Tags",
            "    Type: \"${10:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendra-datasource.html",
            "Attributes: ",
            "  Id",
            "  Arn"
        ],
        "prefix": "kendra-datasource",
        "scope": "yaml"
    },
    "AWS::Kendra::Faq": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Kendra::Faq",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    FileFormat: \"${3:String}\"",
            "    IndexId: \"${4:String}\" # Required",
            "    Name: \"${5:String}\" # Required",
            "    RoleArn: \"${6:String}\" # Required",
            "    S3Path:",
            "      Bucket: \"${7:String}\"",
            "      Key: \"${8:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendra-faq.html",
            "Attributes: ",
            "  Id",
            "  Arn"
        ],
        "prefix": "kendra-faq",
        "scope": "yaml"
    },
    "AWS::Kendra::Index": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Kendra::Index",
            "  Properties:",
            "    CapacityUnits:",
            "      QueryCapacityUnits: ${2:Number}",
            "      StorageCapacityUnits: ${3:Number}",
            "    Description: \"${3:String}\"",
            "    DocumentMetadataConfigurations:",
            "      DocumentMetadataConfigurations",
            "    Edition: \"${5:String}\" # Required",
            "    Name: \"${6:String}\" # Required",
            "    RoleArn: \"${7:String}\" # Required",
            "    ServerSideEncryptionConfiguration:",
            "      KmsKeyId: \"${8:String}\"",
            "    Tags:",
            "      Tags",
            "    UserContextPolicy: \"${10:String}\"",
            "    UserTokenConfigurations:",
            "      UserTokenConfigurations"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendra-index.html",
            "Attributes: ",
            "  Id",
            "  Arn"
        ],
        "prefix": "kendra-index",
        "scope": "yaml"
    },
    "AWS::Kinesis::Stream": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Kinesis::Stream",
            "  Properties:",
            "    Name: \"${2:String}\"",
            "    RetentionPeriodHours: ${3:Number}",
            "    ShardCount: ${4:Number}",
            "    StreamEncryption:",
            "      EncryptionType: \"${5:String}\"",
            "      KeyId: \"${6:String}\"",
            "    StreamModeDetails:",
            "      StreamMode: \"${6:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "kinesis-stream",
        "scope": "yaml"
    },
    "AWS::Kinesis::StreamConsumer": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Kinesis::StreamConsumer",
            "  Properties:",
            "    ConsumerName: \"${2:String}\" # Required",
            "    StreamARN: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-streamconsumer.html",
            "Attributes: ",
            "  ConsumerCreationTimestamp",
            "  ConsumerName",
            "  ConsumerARN",
            "  ConsumerStatus",
            "  StreamARN"
        ],
        "prefix": "kinesis-streamconsumer",
        "scope": "yaml"
    },
    "AWS::KinesisAnalytics::Application": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::KinesisAnalytics::Application",
            "  Properties:",
            "    ApplicationCode: \"${2:String}\"",
            "    ApplicationDescription: \"${3:String}\"",
            "    ApplicationName: \"${4:String}\"",
            "    Inputs: # Required",
            "      Inputs"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalytics-application.html"
        ],
        "prefix": "kinesisanalytics-application",
        "scope": "yaml"
    },
    "AWS::KinesisAnalytics::ApplicationOutput": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::KinesisAnalytics::ApplicationOutput",
            "  Properties:",
            "    ApplicationName: \"${2:String}\" # Required",
            "    Output:",
            "      Name: \"${7:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalytics-applicationoutput.html"
        ],
        "prefix": "kinesisanalytics-applicationoutput",
        "scope": "yaml"
    },
    "AWS::KinesisAnalytics::ApplicationReferenceDataSource": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::KinesisAnalytics::ApplicationReferenceDataSource",
            "  Properties:",
            "    ApplicationName: \"${2:String}\" # Required",
            "    ReferenceDataSource:",
            "      TableName: \"${5:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalytics-applicationreferencedatasource.html"
        ],
        "prefix": "kinesisanalytics-applicationreferencedatasource",
        "scope": "yaml"
    },
    "AWS::KinesisAnalyticsV2::Application": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::KinesisAnalyticsV2::Application",
            "  Properties:",
            "    ApplicationConfiguration:",
            "    ApplicationDescription: \"${3:String}\"",
            "    ApplicationMode: \"${4:String}\"",
            "    ApplicationName: \"${5:String}\"",
            "    RuntimeEnvironment: \"${6:String}\" # Required",
            "    ServiceExecutionRole: \"${7:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-application.html"
        ],
        "prefix": "kinesisanalyticsv2-application",
        "scope": "yaml"
    },
    "AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption",
            "  Properties:",
            "    ApplicationName: \"${2:String}\" # Required",
            "    CloudWatchLoggingOption:",
            "      LogStreamARN: \"${3:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-applicationcloudwatchloggingoption.html"
        ],
        "prefix": "kinesisanalyticsv2-applicationcloudwatchloggingoption",
        "scope": "yaml"
    },
    "AWS::KinesisAnalyticsV2::ApplicationOutput": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::KinesisAnalyticsV2::ApplicationOutput",
            "  Properties:",
            "    ApplicationName: \"${2:String}\" # Required",
            "    Output:",
            "      Name: \"${7:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-applicationoutput.html"
        ],
        "prefix": "kinesisanalyticsv2-applicationoutput",
        "scope": "yaml"
    },
    "AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource",
            "  Properties:",
            "    ApplicationName: \"${2:String}\" # Required",
            "    ReferenceDataSource:",
            "      TableName: \"${5:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-applicationreferencedatasource.html"
        ],
        "prefix": "kinesisanalyticsv2-applicationreferencedatasource",
        "scope": "yaml"
    },
    "AWS::KinesisFirehose::DeliveryStream": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::KinesisFirehose::DeliveryStream",
            "  Properties:",
            "    AmazonopensearchserviceDestinationConfiguration:",
            "      ClusterEndpoint: \"${4:String}\"",
            "      DomainARN: \"${5:String}\"",
            "      IndexName: \"${6:String}\"",
            "      IndexRotationPeriod: \"${7:String}\"",
            "      RoleARN: \"${10:String}\"",
            "      S3BackupMode: \"${11:String}\"",
            "      TypeName: \"${13:String}\"",
            "    DeliveryStreamEncryptionConfigurationInput:",
            "      KeyARN: \"${3:String}\"",
            "      KeyType: \"${4:String}\"",
            "    DeliveryStreamName: \"${4:String}\"",
            "    DeliveryStreamType: \"${5:String}\"",
            "    ElasticsearchDestinationConfiguration:",
            "      ClusterEndpoint: \"${8:String}\"",
            "      DomainARN: \"${9:String}\"",
            "      IndexName: \"${10:String}\"",
            "      IndexRotationPeriod: \"${11:String}\"",
            "      RoleARN: \"${14:String}\"",
            "      S3BackupMode: \"${15:String}\"",
            "      TypeName: \"${17:String}\"",
            "    ExtendedS3DestinationConfiguration:",
            "      BucketARN: \"${7:String}\"",
            "      CompressionFormat: \"${10:String}\"",
            "      ErrorOutputPrefix: \"${14:String}\"",
            "      Prefix: \"${15:String}\"",
            "      RoleARN: \"${17:String}\"",
            "      S3BackupMode: \"${19:String}\"",
            "    HttpEndpointDestinationConfiguration:",
            "      RoleARN: \"${14:String}\"",
            "      S3BackupMode: \"${15:String}\"",
            "    KinesisStreamSourceConfiguration:",
            "      KinesisStreamARN: \"${9:String}\"",
            "      RoleARN: \"${10:String}\"",
            "    RedshiftDestinationConfiguration:",
            "      ClusterJDBCURL: \"${11:String}\"",
            "      Password: \"${13:String}\"",
            "      RoleARN: \"${16:String}\"",
            "      S3BackupMode: \"${18:String}\"",
            "      Username: \"${20:String}\"",
            "    S3DestinationConfiguration:",
            "      BucketARN: \"${11:String}\"",
            "      CompressionFormat: \"${14:String}\"",
            "      ErrorOutputPrefix: \"${16:String}\"",
            "      Prefix: \"${17:String}\"",
            "      RoleARN: \"${18:String}\"",
            "    SplunkDestinationConfiguration:",
            "      HECAcknowledgmentTimeoutInSeconds: ${13:Number}",
            "      HECEndpoint: \"${14:String}\"",
            "      HECEndpointType: \"${15:String}\"",
            "      HECToken: \"${16:String}\"",
            "      S3BackupMode: \"${19:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisfirehose-deliverystream.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "kinesisfirehose-deliverystream",
        "scope": "yaml"
    },
    "AWS::KinesisVideo::SignalingChannel": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::KinesisVideo::SignalingChannel",
            "  Properties:",
            "    MessageTtlSeconds: ${2:Number}",
            "    Name: \"${3:String}\"",
            "    Tags:",
            "      Tags",
            "    Type: \"${5:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisvideo-signalingchannel.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "kinesisvideo-signalingchannel",
        "scope": "yaml"
    },
    "AWS::KinesisVideo::Stream": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::KinesisVideo::Stream",
            "  Properties:",
            "    DataRetentionInHours: ${2:Number}",
            "    DeviceName: \"${3:String}\"",
            "    KmsKeyId: \"${4:String}\"",
            "    MediaType: \"${5:String}\"",
            "    Name: \"${6:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisvideo-stream.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "kinesisvideo-stream",
        "scope": "yaml"
    },
    "AWS::LakeFormation::DataLakeSettings": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::LakeFormation::DataLakeSettings",
            "  Properties:",
            "    Admins:",
            "    TrustedResourceOwners:",
            "      TrustedResourceOwners"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datalakesettings.html"
        ],
        "prefix": "lakeformation-datalakesettings",
        "scope": "yaml"
    },
    "AWS::LakeFormation::Permissions": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::LakeFormation::Permissions",
            "  Properties:",
            "    DataLakePrincipal:",
            "      DataLakePrincipalIdentifier: \"${2:String}\"",
            "    Permissions:",
            "      Permissions",
            "    PermissionsWithGrantOption:",
            "      PermissionsWithGrantOption",
            "    Resource:"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-permissions.html"
        ],
        "prefix": "lakeformation-permissions",
        "scope": "yaml"
    },
    "AWS::LakeFormation::Resource": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::LakeFormation::Resource",
            "  Properties:",
            "    ResourceArn: \"${2:String}\" # Required",
            "    RoleArn: \"${3:String}\"",
            "    UseServiceLinkedRole: ${4|false,true|} # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-resource.html"
        ],
        "prefix": "lakeformation-resource",
        "scope": "yaml"
    },
    "AWS::Lambda::Alias": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Lambda::Alias",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    FunctionName: \"${3:String}\" # Required",
            "    FunctionVersion: \"${4:String}\" # Required",
            "    Name: \"${5:String}\" # Required",
            "    ProvisionedConcurrencyConfig:",
            "      ProvisionedConcurrentExecutions: ${6:Number}",
            "    RoutingConfig:",
            "      AdditionalVersionWeights:",
            "        -"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-alias.html"
        ],
        "prefix": "lambda-alias",
        "scope": "yaml"
    },
    "AWS::Lambda::CodeSigningConfig": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Lambda::CodeSigningConfig",
            "  Properties:",
            "    AllowedPublishers:",
            "      SigningProfileVersionArns:",
            "        -",
            "    CodeSigningPolicies:",
            "      UntrustedArtifactOnDeployment: \"${3:String}\"",
            "    Description: \"${4:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-codesigningconfig.html",
            "Attributes: ",
            "  CodeSigningConfigId",
            "  CodeSigningConfigArn"
        ],
        "prefix": "lambda-codesigningconfig",
        "scope": "yaml"
    },
    "AWS::Lambda::EventInvokeConfig": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Lambda::EventInvokeConfig",
            "  Properties:",
            "    DestinationConfig:",
            "    FunctionName: \"${3:String}\" # Required",
            "    MaximumEventAgeInSeconds: ${4:Number}",
            "    MaximumRetryAttempts: ${5:Number}",
            "    Qualifier: \"${6:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventinvokeconfig.html"
        ],
        "prefix": "lambda-eventinvokeconfig",
        "scope": "yaml"
    },
    "AWS::Lambda::EventSourceMapping": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Lambda::EventSourceMapping",
            "  Properties:",
            "    BatchSize: ${2:Number}",
            "    BisectBatchOnFunctionError: ${3|false,true|}",
            "    DestinationConfig:",
            "    Enabled: ${5|false,true|}",
            "    EventSourceArn: \"${6:String}\"",
            "    FilterCriteria:",
            "      Filters:",
            "        -",
            "    FunctionName: \"${8:String}\" # Required",
            "    FunctionResponseTypes:",
            "      FunctionResponseTypes",
            "    MaximumBatchingWindowInSeconds: ${10:Number}",
            "    MaximumRecordAgeInSeconds: ${11:Number}",
            "    MaximumRetryAttempts: ${12:Number}",
            "    ParallelizationFactor: ${13:Number}",
            "    Queues:",
            "      Queues",
            "    SelfManagedEventSource:",
            "    SourceAccessConfigurations:",
            "      SourceAccessConfigurations",
            "    StartingPosition: \"${17:String}\"",
            "    StartingPositionTimestamp: ${18:Number}",
            "    Topics:",
            "      Topics",
            "    TumblingWindowInSeconds: ${20:Number}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html",
            "Attributes: ",
            "  Id"
        ],
        "prefix": "lambda-eventsourcemapping",
        "scope": "yaml"
    },
    "AWS::Lambda::Function": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Lambda::Function",
            "  Properties:",
            "    Architectures:",
            "      Architectures",
            "    Code:",
            "      ImageUri: \"${3:String}\"",
            "      S3Bucket: \"${4:String}\"",
            "      S3Key: \"${5:String}\"",
            "      S3ObjectVersion: \"${6:String}\"",
            "      ZipFile: \"${7:String}\"",
            "    CodeSigningConfigArn: \"${4:String}\"",
            "    DeadLetterConfig:",
            "      TargetArn: \"${5:String}\"",
            "    Description: \"${6:String}\"",
            "    Environment:",
            "    EphemeralStorage:",
            "      Size: ${8:Number}",
            "    FileSystemConfigs:",
            "      FileSystemConfigs",
            "    FunctionName: \"${10:String}\"",
            "    Handler: \"${11:String}\"",
            "    ImageConfig:",
            "      Command:",
            "        -",
            "      EntryPoint:",
            "        -",
            "      WorkingDirectory: \"${14:String}\"",
            "    KmsKeyArn: \"${13:String}\"",
            "    Layers:",
            "      Layers",
            "    MemorySize: ${15:Number}",
            "    PackageType: \"${16:String}\"",
            "    ReservedConcurrentExecutions: ${17:Number}",
            "    Role: \"${18:String}\" # Required",
            "    Runtime: \"${19:String}\"",
            "    Tags:",
            "      Tags",
            "    Timeout: ${21:Number}",
            "    TracingConfig:",
            "      Mode: \"${22:String}\"",
            "    VpcConfig:",
            "      SecurityGroupIds:",
            "        -",
            "      SubnetIds:",
            "        -"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "lambda-function",
        "scope": "yaml"
    },
    "AWS::Lambda::LayerVersion": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Lambda::LayerVersion",
            "  Properties:",
            "    CompatibleArchitectures:",
            "      CompatibleArchitectures",
            "    CompatibleRuntimes:",
            "      CompatibleRuntimes",
            "    Content:",
            "      S3Bucket: \"${4:String}\"",
            "      S3Key: \"${5:String}\"",
            "      S3ObjectVersion: \"${6:String}\"",
            "    Description: \"${5:String}\"",
            "    LayerName: \"${6:String}\"",
            "    LicenseInfo: \"${7:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-layerversion.html"
        ],
        "prefix": "lambda-layerversion",
        "scope": "yaml"
    },
    "AWS::Lambda::LayerVersionPermission": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Lambda::LayerVersionPermission",
            "  Properties:",
            "    Action: \"${2:String}\" # Required",
            "    LayerVersionArn: \"${3:String}\" # Required",
            "    OrganizationId: \"${4:String}\"",
            "    Principal: \"${5:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-layerversionpermission.html"
        ],
        "prefix": "lambda-layerversionpermission",
        "scope": "yaml"
    },
    "AWS::Lambda::Permission": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Lambda::Permission",
            "  Properties:",
            "    Action: \"${2:String}\" # Required",
            "    EventSourceToken: \"${3:String}\"",
            "    FunctionName: \"${4:String}\" # Required",
            "    FunctionUrlAuthType: \"${5:String}\"",
            "    Principal: \"${6:String}\" # Required",
            "    PrincipalOrgID: \"${7:String}\"",
            "    SourceAccount: \"${8:String}\"",
            "    SourceArn: \"${9:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html"
        ],
        "prefix": "lambda-permission",
        "scope": "yaml"
    },
    "AWS::Lambda::Url": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Lambda::Url",
            "  Properties:",
            "    AuthType: \"${2:String}\" # Required",
            "    Cors:",
            "      AllowCredentials: ${3|false,true|}",
            "      AllowHeaders:",
            "        -",
            "      AllowMethods:",
            "        -",
            "      AllowOrigins:",
            "        -",
            "      ExposeHeaders:",
            "        -",
            "      MaxAge: ${8:Number}",
            "    Qualifier: \"${4:String}\"",
            "    TargetFunctionArn: \"${5:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-url.html",
            "Attributes: ",
            "  FunctionArn",
            "  FunctionUrl"
        ],
        "prefix": "lambda-url",
        "scope": "yaml"
    },
    "AWS::Lambda::Version": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Lambda::Version",
            "  Properties:",
            "    CodeSha256: \"${2:String}\"",
            "    Description: \"${3:String}\"",
            "    FunctionName: \"${4:String}\" # Required",
            "    ProvisionedConcurrencyConfig:",
            "      ProvisionedConcurrentExecutions: ${5:Number}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-version.html",
            "Attributes: ",
            "  Version"
        ],
        "prefix": "lambda-version",
        "scope": "yaml"
    },
    "AWS::Lex::Bot": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Lex::Bot",
            "  Properties:",
            "    AutoBuildBotLocales: ${2|false,true|}",
            "    BotFileS3Location:",
            "      S3Bucket: \"${3:String}\"",
            "      S3ObjectKey: \"${4:String}\"",
            "      S3ObjectVersion: \"${5:String}\"",
            "    BotLocales:",
            "      BotLocales",
            "    BotTags:",
            "      BotTags",
            "    DataPrivacy: ${6:JSON} # Required",
            "    Description: \"${7:String}\"",
            "    IdleSessionTTLInSeconds: ${8:Number} # Required",
            "    Name: \"${9:String}\" # Required",
            "    RoleArn: \"${10:String}\" # Required",
            "    TestBotAliasSettings:",
            "      BotAliasLocaleSettings:",
            "        -",
            "      Description: \"${13:String}\"",
            "      SentimentAnalysisSettings: ${14:JSON}",
            "    TestBotAliasTags:",
            "      TestBotAliasTags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-bot.html",
            "Attributes: ",
            "  Id",
            "  Arn"
        ],
        "prefix": "lex-bot",
        "scope": "yaml"
    },
    "AWS::Lex::BotAlias": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Lex::BotAlias",
            "  Properties:",
            "    BotAliasLocaleSettings:",
            "      BotAliasLocaleSettings",
            "    BotAliasName: \"${3:String}\" # Required",
            "    BotAliasTags:",
            "      BotAliasTags",
            "    BotId: \"${5:String}\" # Required",
            "    BotVersion: \"${6:String}\"",
            "    ConversationLogSettings:",
            "      AudioLogSettings:",
            "        -",
            "      TextLogSettings:",
            "        -",
            "    Description: \"${8:String}\"",
            "    SentimentAnalysisSettings: ${9:JSON}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-botalias.html",
            "Attributes: ",
            "  BotAliasId",
            "  Arn",
            "  BotAliasStatus"
        ],
        "prefix": "lex-botalias",
        "scope": "yaml"
    },
    "AWS::Lex::BotVersion": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Lex::BotVersion",
            "  Properties:",
            "    BotId: \"${2:String}\" # Required",
            "    BotVersionLocaleSpecification: # Required",
            "      BotVersionLocaleSpecification",
            "    Description: \"${4:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-botversion.html",
            "Attributes: ",
            "  BotVersion"
        ],
        "prefix": "lex-botversion",
        "scope": "yaml"
    },
    "AWS::Lex::ResourcePolicy": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Lex::ResourcePolicy",
            "  Properties:",
            "    Policy:",
            "    ResourceArn: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-resourcepolicy.html",
            "Attributes: ",
            "  RevisionId",
            "  Id"
        ],
        "prefix": "lex-resourcepolicy",
        "scope": "yaml"
    },
    "AWS::LicenseManager::Grant": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::LicenseManager::Grant",
            "  Properties:",
            "    AllowedOperations:",
            "      AllowedOperations",
            "    GrantName: \"${3:String}\"",
            "    HomeRegion: \"${4:String}\"",
            "    LicenseArn: \"${5:String}\"",
            "    Principals:",
            "      Principals",
            "    Status: \"${7:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html",
            "Attributes: ",
            "  GrantArn",
            "  Version"
        ],
        "prefix": "licensemanager-grant",
        "scope": "yaml"
    },
    "AWS::LicenseManager::License": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::LicenseManager::License",
            "  Properties:",
            "    Beneficiary: \"${2:String}\"",
            "    ConsumptionConfiguration:",
            "      RenewType: \"${5:String}\"",
            "    Entitlements: # Required",
            "      Entitlements",
            "    HomeRegion: \"${5:String}\" # Required",
            "    Issuer:",
            "      Name: \"${6:String}\"",
            "      SignKey: \"${7:String}\"",
            "    LicenseMetadata:",
            "      LicenseMetadata",
            "    LicenseName: \"${8:String}\" # Required",
            "    ProductName: \"${9:String}\" # Required",
            "    ProductSKU: \"${10:String}\"",
            "    Status: \"${11:String}\"",
            "    Validity:",
            "      Begin: \"${12:String}\"",
            "      End: \"${13:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html",
            "Attributes: ",
            "  LicenseArn",
            "  Version"
        ],
        "prefix": "licensemanager-license",
        "scope": "yaml"
    },
    "AWS::Lightsail::Alarm": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Lightsail::Alarm",
            "  Properties:",
            "    AlarmName: \"${2:String}\" # Required",
            "    ComparisonOperator: \"${3:String}\" # Required",
            "    ContactProtocols:",
            "      ContactProtocols",
            "    DatapointsToAlarm: ${5:Number}",
            "    EvaluationPeriods: ${6:Number} # Required",
            "    MetricName: \"${7:String}\" # Required",
            "    MonitoredResourceName: \"${8:String}\" # Required",
            "    NotificationEnabled: ${9|false,true|}",
            "    NotificationTriggers:",
            "      NotificationTriggers",
            "    Threshold: ${11:Number} # Required",
            "    TreatMissingData: \"${12:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-alarm.html",
            "Attributes: ",
            "  AlarmArn",
            "  State"
        ],
        "prefix": "lightsail-alarm",
        "scope": "yaml"
    },
    "AWS::Lightsail::Bucket": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Lightsail::Bucket",
            "  Properties:",
            "    AccessRules:",
            "      AllowPublicOverrides: ${2|false,true|}",
            "      GetObject: \"${3:String}\"",
            "    BucketName: \"${3:String}\" # Required",
            "    BundleId: \"${4:String}\" # Required",
            "    ObjectVersioning: ${5|false,true|}",
            "    ReadOnlyAccessAccounts:",
            "      ReadOnlyAccessAccounts",
            "    ResourcesReceivingAccess:",
            "      ResourcesReceivingAccess",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-bucket.html",
            "Attributes: ",
            "  BucketArn",
            "  Url",
            "  AbleToUpdateBundle"
        ],
        "prefix": "lightsail-bucket",
        "scope": "yaml"
    },
    "AWS::Lightsail::Certificate": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Lightsail::Certificate",
            "  Properties:",
            "    CertificateName: \"${2:String}\" # Required",
            "    DomainName: \"${3:String}\" # Required",
            "    SubjectAlternativeNames:",
            "      SubjectAlternativeNames",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-certificate.html",
            "Attributes: ",
            "  CertificateArn",
            "  Status"
        ],
        "prefix": "lightsail-certificate",
        "scope": "yaml"
    },
    "AWS::Lightsail::Container": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Lightsail::Container",
            "  Properties:",
            "    ContainerServiceDeployment:",
            "      Containers:",
            "        -",
            "    IsDisabled: ${3|false,true|}",
            "    Power: \"${4:String}\" # Required",
            "    PublicDomainNames:",
            "      PublicDomainNames",
            "    Scale: ${6:Number} # Required",
            "    ServiceName: \"${7:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-container.html",
            "Attributes: ",
            "  ContainerArn",
            "  Url"
        ],
        "prefix": "lightsail-container",
        "scope": "yaml"
    },
    "AWS::Lightsail::Database": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Lightsail::Database",
            "  Properties:",
            "    AvailabilityZone: \"${2:String}\"",
            "    BackupRetention: ${3|false,true|}",
            "    CaCertificateIdentifier: \"${4:String}\"",
            "    MasterDatabaseName: \"${5:String}\" # Required",
            "    MasterUserPassword: \"${6:String}\"",
            "    MasterUsername: \"${7:String}\" # Required",
            "    PreferredBackupWindow: \"${8:String}\"",
            "    PreferredMaintenanceWindow: \"${9:String}\"",
            "    PubliclyAccessible: ${10|false,true|}",
            "    RelationalDatabaseBlueprintId: \"${11:String}\" # Required",
            "    RelationalDatabaseBundleId: \"${12:String}\" # Required",
            "    RelationalDatabaseName: \"${13:String}\" # Required",
            "    RelationalDatabaseParameters:",
            "      RelationalDatabaseParameters",
            "    RotateMasterUserPassword: ${15|false,true|}",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-database.html",
            "Attributes: ",
            "  DatabaseArn"
        ],
        "prefix": "lightsail-database",
        "scope": "yaml"
    },
    "AWS::Lightsail::Disk": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Lightsail::Disk",
            "  Properties:",
            "    AddOns:",
            "      AddOns",
            "    AvailabilityZone: \"${3:String}\"",
            "    DiskName: \"${4:String}\" # Required",
            "    SizeInGb: ${5:Number} # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-disk.html",
            "Attributes: ",
            "  DiskArn",
            "  SupportCode",
            "  ResourceType",
            "  State",
            "  AttachmentState",
            "  Iops",
            "  IsAttached",
            "  Path",
            "  AttachedTo"
        ],
        "prefix": "lightsail-disk",
        "scope": "yaml"
    },
    "AWS::Lightsail::Distribution": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Lightsail::Distribution",
            "  Properties:",
            "    BundleId: \"${2:String}\" # Required",
            "    CacheBehaviorSettings:",
            "      AllowedHTTPMethods: \"${3:String}\"",
            "      CachedHTTPMethods: \"${4:String}\"",
            "      DefaultTTL: ${5:Number}",
            "      MaximumTTL: ${9:Number}",
            "      MinimumTTL: ${10:Number}",
            "    CacheBehaviors:",
            "      CacheBehaviors",
            "    CertificateName: \"${5:String}\"",
            "    DefaultCacheBehavior:",
            "      Behavior: \"${6:String}\"",
            "    DistributionName: \"${7:String}\" # Required",
            "    IpAddressType: \"${8:String}\"",
            "    IsEnabled: ${9|false,true|}",
            "    Origin:",
            "      Name: \"${10:String}\"",
            "      ProtocolPolicy: \"${11:String}\"",
            "      RegionName: \"${12:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-distribution.html",
            "Attributes: ",
            "  DistributionArn",
            "  Status",
            "  AbleToUpdateBundle"
        ],
        "prefix": "lightsail-distribution",
        "scope": "yaml"
    },
    "AWS::Lightsail::Instance": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Lightsail::Instance",
            "  Properties:",
            "    AddOns:",
            "      AddOns",
            "    AvailabilityZone: \"${3:String}\"",
            "    BlueprintId: \"${4:String}\" # Required",
            "    BundleId: \"${5:String}\" # Required",
            "    Hardware:",
            "      CpuCount: ${6:Number}",
            "      Disks:",
            "        -",
            "      RamSizeInGb: ${8:Number}",
            "    InstanceName: \"${7:String}\" # Required",
            "    KeyPairName: \"${8:String}\"",
            "    Networking:",
            "      Ports:",
            "        -",
            "    Tags:",
            "      Tags",
            "    UserData: \"${11:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-instance.html",
            "Attributes: ",
            "  SupportCode",
            "  ResourceType",
            "  IsStaticIp",
            "  PrivateIpAddress",
            "  PublicIpAddress",
            "  Location.AvailabilityZone",
            "  Location.RegionName",
            "  Hardware.CpuCount",
            "  Hardware.RamSizeInGb",
            "  State.Code",
            "  State.Name",
            "  Networking.MonthlyTransfer.GbPerMonthAllocated",
            "  UserName",
            "  SshKeyName",
            "  InstanceArn"
        ],
        "prefix": "lightsail-instance",
        "scope": "yaml"
    },
    "AWS::Lightsail::LoadBalancer": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Lightsail::LoadBalancer",
            "  Properties:",
            "    AttachedInstances:",
            "      AttachedInstances",
            "    HealthCheckPath: \"${3:String}\"",
            "    InstancePort: ${4:Number} # Required",
            "    IpAddressType: \"${5:String}\"",
            "    LoadBalancerName: \"${6:String}\" # Required",
            "    SessionStickinessEnabled: ${7|false,true|}",
            "    SessionStickinessLBCookieDurationSeconds: \"${8:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-loadbalancer.html",
            "Attributes: ",
            "  LoadBalancerArn"
        ],
        "prefix": "lightsail-loadbalancer",
        "scope": "yaml"
    },
    "AWS::Lightsail::LoadBalancerTlsCertificate": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Lightsail::LoadBalancerTlsCertificate",
            "  Properties:",
            "    CertificateAlternativeNames:",
            "      CertificateAlternativeNames",
            "    CertificateDomainName: \"${3:String}\" # Required",
            "    CertificateName: \"${4:String}\" # Required",
            "    IsAttached: ${5|false,true|}",
            "    LoadBalancerName: \"${6:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-loadbalancertlscertificate.html",
            "Attributes: ",
            "  LoadBalancerTlsCertificateArn",
            "  Status"
        ],
        "prefix": "lightsail-loadbalancertlscertificate",
        "scope": "yaml"
    },
    "AWS::Lightsail::StaticIp": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Lightsail::StaticIp",
            "  Properties:",
            "    AttachedTo: \"${2:String}\"",
            "    StaticIpName: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-staticip.html",
            "Attributes: ",
            "  IsAttached",
            "  IpAddress",
            "  StaticIpArn"
        ],
        "prefix": "lightsail-staticip",
        "scope": "yaml"
    },
    "AWS::Location::GeofenceCollection": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Location::GeofenceCollection",
            "  Properties:",
            "    CollectionName: \"${2:String}\" # Required",
            "    Description: \"${3:String}\"",
            "    KmsKeyId: \"${4:String}\"",
            "    PricingPlan: \"${5:String}\"",
            "    PricingPlanDataSource: \"${6:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-geofencecollection.html",
            "Attributes: ",
            "  CollectionArn",
            "  Arn",
            "  CreateTime",
            "  UpdateTime"
        ],
        "prefix": "location-geofencecollection",
        "scope": "yaml"
    },
    "AWS::Location::Map": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Location::Map",
            "  Properties:",
            "    Configuration:",
            "      Style: \"${2:String}\"",
            "    Description: \"${3:String}\"",
            "    MapName: \"${4:String}\" # Required",
            "    PricingPlan: \"${5:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-map.html",
            "Attributes: ",
            "  CreateTime",
            "  DataSource",
            "  MapArn",
            "  Arn",
            "  UpdateTime"
        ],
        "prefix": "location-map",
        "scope": "yaml"
    },
    "AWS::Location::PlaceIndex": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Location::PlaceIndex",
            "  Properties:",
            "    DataSource: \"${2:String}\" # Required",
            "    DataSourceConfiguration:",
            "      IntendedUse: \"${3:String}\"",
            "    Description: \"${4:String}\"",
            "    IndexName: \"${5:String}\" # Required",
            "    PricingPlan: \"${6:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-placeindex.html",
            "Attributes: ",
            "  CreateTime",
            "  IndexArn",
            "  Arn",
            "  UpdateTime"
        ],
        "prefix": "location-placeindex",
        "scope": "yaml"
    },
    "AWS::Location::RouteCalculator": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Location::RouteCalculator",
            "  Properties:",
            "    CalculatorName: \"${2:String}\" # Required",
            "    DataSource: \"${3:String}\" # Required",
            "    Description: \"${4:String}\"",
            "    PricingPlan: \"${5:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-routecalculator.html",
            "Attributes: ",
            "  CalculatorArn",
            "  Arn",
            "  CreateTime",
            "  UpdateTime"
        ],
        "prefix": "location-routecalculator",
        "scope": "yaml"
    },
    "AWS::Location::Tracker": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Location::Tracker",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    KmsKeyId: \"${3:String}\"",
            "    PositionFiltering: \"${4:String}\"",
            "    PricingPlan: \"${5:String}\"",
            "    PricingPlanDataSource: \"${6:String}\"",
            "    TrackerName: \"${7:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-tracker.html",
            "Attributes: ",
            "  CreateTime",
            "  TrackerArn",
            "  Arn",
            "  UpdateTime"
        ],
        "prefix": "location-tracker",
        "scope": "yaml"
    },
    "AWS::Location::TrackerConsumer": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Location::TrackerConsumer",
            "  Properties:",
            "    ConsumerArn: \"${2:String}\" # Required",
            "    TrackerName: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-trackerconsumer.html"
        ],
        "prefix": "location-trackerconsumer",
        "scope": "yaml"
    },
    "AWS::Logs::Destination": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Logs::Destination",
            "  Properties:",
            "    DestinationName: \"${2:String}\" # Required",
            "    DestinationPolicy: \"${3:String}\" # Required",
            "    RoleArn: \"${4:String}\" # Required",
            "    TargetArn: \"${5:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-destination.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "logs-destination",
        "scope": "yaml"
    },
    "AWS::Logs::LogGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Logs::LogGroup",
            "  Properties:",
            "    KmsKeyId: \"${2:String}\"",
            "    LogGroupName: \"${3:String}\"",
            "    RetentionInDays: ${4:Number}",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-loggroup.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "logs-loggroup",
        "scope": "yaml"
    },
    "AWS::Logs::LogStream": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Logs::LogStream",
            "  Properties:",
            "    LogGroupName: \"${2:String}\" # Required",
            "    LogStreamName: \"${3:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-logstream.html"
        ],
        "prefix": "logs-logstream",
        "scope": "yaml"
    },
    "AWS::Logs::MetricFilter": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Logs::MetricFilter",
            "  Properties:",
            "    FilterPattern: \"${2:String}\" # Required",
            "    LogGroupName: \"${3:String}\" # Required",
            "    MetricTransformations: # Required",
            "      MetricTransformations"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-metricfilter.html"
        ],
        "prefix": "logs-metricfilter",
        "scope": "yaml"
    },
    "AWS::Logs::QueryDefinition": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Logs::QueryDefinition",
            "  Properties:",
            "    LogGroupNames:",
            "      LogGroupNames",
            "    Name: \"${3:String}\" # Required",
            "    QueryString: \"${4:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-querydefinition.html",
            "Attributes: ",
            "  QueryDefinitionId"
        ],
        "prefix": "logs-querydefinition",
        "scope": "yaml"
    },
    "AWS::Logs::ResourcePolicy": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Logs::ResourcePolicy",
            "  Properties:",
            "    PolicyDocument: \"${2:String}\" # Required",
            "    PolicyName: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-resourcepolicy.html"
        ],
        "prefix": "logs-resourcepolicy",
        "scope": "yaml"
    },
    "AWS::Logs::SubscriptionFilter": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Logs::SubscriptionFilter",
            "  Properties:",
            "    DestinationArn: \"${2:String}\" # Required",
            "    FilterPattern: \"${3:String}\" # Required",
            "    LogGroupName: \"${4:String}\" # Required",
            "    RoleArn: \"${5:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-subscriptionfilter.html"
        ],
        "prefix": "logs-subscriptionfilter",
        "scope": "yaml"
    },
    "AWS::LookoutEquipment::InferenceScheduler": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::LookoutEquipment::InferenceScheduler",
            "  Properties:",
            "    DataDelayOffsetInMinutes: ${2:Number}",
            "    DataInputConfiguration: ${3:JSON} # Required",
            "    DataOutputConfiguration: ${4:JSON} # Required",
            "    DataUploadFrequency: \"${5:String}\" # Required",
            "    InferenceSchedulerName: \"${6:String}\"",
            "    ModelName: \"${7:String}\" # Required",
            "    RoleArn: \"${8:String}\" # Required",
            "    ServerSideKmsKeyId: \"${9:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lookoutequipment-inferencescheduler.html",
            "Attributes: ",
            "  InferenceSchedulerArn"
        ],
        "prefix": "lookoutequipment-inferencescheduler",
        "scope": "yaml"
    },
    "AWS::LookoutMetrics::Alert": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::LookoutMetrics::Alert",
            "  Properties:",
            "    Action:",
            "    AlertDescription: \"${3:String}\"",
            "    AlertName: \"${4:String}\"",
            "    AlertSensitivityThreshold: ${5:Number} # Required",
            "    AnomalyDetectorArn: \"${6:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lookoutmetrics-alert.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "lookoutmetrics-alert",
        "scope": "yaml"
    },
    "AWS::LookoutMetrics::AnomalyDetector": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::LookoutMetrics::AnomalyDetector",
            "  Properties:",
            "    AnomalyDetectorConfig:",
            "      AnomalyDetectorFrequency: \"${2:String}\"",
            "    AnomalyDetectorDescription: \"${3:String}\"",
            "    AnomalyDetectorName: \"${4:String}\"",
            "    KmsKeyArn: \"${5:String}\"",
            "    MetricSetList: # Required",
            "      MetricSetList"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lookoutmetrics-anomalydetector.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "lookoutmetrics-anomalydetector",
        "scope": "yaml"
    },
    "AWS::LookoutVision::Project": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::LookoutVision::Project",
            "  Properties:",
            "    ProjectName: \"${2:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lookoutvision-project.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "lookoutvision-project",
        "scope": "yaml"
    },
    "AWS::MSK::BatchScramSecret": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::MSK::BatchScramSecret",
            "  Properties:",
            "    ClusterArn: \"${2:String}\" # Required",
            "    SecretArnList:",
            "      SecretArnList"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-batchscramsecret.html"
        ],
        "prefix": "msk-batchscramsecret",
        "scope": "yaml"
    },
    "AWS::MSK::Cluster": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::MSK::Cluster",
            "  Properties:",
            "    BrokerNodeGroupInfo:",
            "      BrokerAZDistribution: \"${2:String}\"",
            "      ClientSubnets:",
            "        -",
            "      InstanceType: \"${5:String}\"",
            "      SecurityGroups:",
            "        -",
            "    ClientAuthentication:",
            "    ClusterName: \"${4:String}\" # Required",
            "    ConfigurationInfo:",
            "      Arn: \"${5:String}\"",
            "      Revision: ${6:Number}",
            "    CurrentVersion: \"${6:String}\"",
            "    EncryptionInfo:",
            "    EnhancedMonitoring: \"${8:String}\"",
            "    KafkaVersion: \"${9:String}\" # Required",
            "    LoggingInfo:",
            "    NumberOfBrokerNodes: ${11:Number} # Required",
            "    OpenMonitoring:",
            "    Tags:"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-cluster.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "msk-cluster",
        "scope": "yaml"
    },
    "AWS::MSK::Configuration": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::MSK::Configuration",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    KafkaVersionsList:",
            "      KafkaVersionsList",
            "    Name: \"${4:String}\" # Required",
            "    ServerProperties: \"${5:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-configuration.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "msk-configuration",
        "scope": "yaml"
    },
    "AWS::MWAA::Environment": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::MWAA::Environment",
            "  Properties:",
            "    AirflowConfigurationOptions: ${2:JSON}",
            "    AirflowVersion: \"${3:String}\"",
            "    DagS3Path: \"${4:String}\"",
            "    EnvironmentClass: \"${5:String}\"",
            "    ExecutionRoleArn: \"${6:String}\"",
            "    KmsKey: \"${7:String}\"",
            "    LoggingConfiguration:",
            "    MaxWorkers: ${9:Number}",
            "    MinWorkers: ${10:Number}",
            "    Name: \"${11:String}\" # Required",
            "    NetworkConfiguration:",
            "      SecurityGroupIds:",
            "        -",
            "      SubnetIds:",
            "        -",
            "    PluginsS3ObjectVersion: \"${13:String}\"",
            "    PluginsS3Path: \"${14:String}\"",
            "    RequirementsS3ObjectVersion: \"${15:String}\"",
            "    RequirementsS3Path: \"${16:String}\"",
            "    Schedulers: ${17:Number}",
            "    SourceBucketArn: \"${18:String}\"",
            "    Tags: ${19:JSON}",
            "    WebserverAccessMode: \"${20:String}\"",
            "    WeeklyMaintenanceWindowStart: \"${21:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html",
            "Attributes: ",
            "  Arn",
            "  WebserverUrl",
            "  LoggingConfiguration.DagProcessingLogs.CloudWatchLogGroupArn",
            "  LoggingConfiguration.SchedulerLogs.CloudWatchLogGroupArn",
            "  LoggingConfiguration.WebserverLogs.CloudWatchLogGroupArn",
            "  LoggingConfiguration.WorkerLogs.CloudWatchLogGroupArn",
            "  LoggingConfiguration.TaskLogs.CloudWatchLogGroupArn"
        ],
        "prefix": "mwaa-environment",
        "scope": "yaml"
    },
    "AWS::Macie::CustomDataIdentifier": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Macie::CustomDataIdentifier",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    IgnoreWords:",
            "      IgnoreWords",
            "    Keywords:",
            "      Keywords",
            "    MaximumMatchDistance: ${5:Number}",
            "    Name: \"${6:String}\" # Required",
            "    Regex: \"${7:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-macie-customdataidentifier.html",
            "Attributes: ",
            "  Id",
            "  Arn"
        ],
        "prefix": "macie-customdataidentifier",
        "scope": "yaml"
    },
    "AWS::Macie::FindingsFilter": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Macie::FindingsFilter",
            "  Properties:",
            "    Action: \"${2:String}\"",
            "    Description: \"${3:String}\"",
            "    FindingCriteria:",
            "    Name: \"${5:String}\" # Required",
            "    Position: ${6:Number}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-macie-findingsfilter.html",
            "Attributes: ",
            "  Id",
            "  Arn",
            "  FindingsFilterListItems"
        ],
        "prefix": "macie-findingsfilter",
        "scope": "yaml"
    },
    "AWS::Macie::Session": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Macie::Session",
            "  Properties:",
            "    FindingPublishingFrequency: \"${2:String}\"",
            "    Status: \"${3:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-macie-session.html",
            "Attributes: ",
            "  AwsAccountId",
            "  ServiceRole"
        ],
        "prefix": "macie-session",
        "scope": "yaml"
    },
    "AWS::ManagedBlockchain::Member": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ManagedBlockchain::Member",
            "  Properties:",
            "    InvitationId: \"${2:String}\"",
            "    MemberConfiguration:",
            "      Description: \"${3:String}\"",
            "      Name: \"${5:String}\"",
            "    NetworkConfiguration:",
            "      Description: \"${4:String}\"",
            "      Framework: \"${5:String}\"",
            "      FrameworkVersion: \"${6:String}\"",
            "      Name: \"${7:String}\"",
            "    NetworkId: \"${5:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-managedblockchain-member.html",
            "Attributes: ",
            "  MemberId",
            "  NetworkId"
        ],
        "prefix": "managedblockchain-member",
        "scope": "yaml"
    },
    "AWS::ManagedBlockchain::Node": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ManagedBlockchain::Node",
            "  Properties:",
            "    MemberId: \"${2:String}\"",
            "    NetworkId: \"${3:String}\" # Required",
            "    NodeConfiguration:",
            "      AvailabilityZone: \"${4:String}\"",
            "      InstanceType: \"${5:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-managedblockchain-node.html",
            "Attributes: ",
            "  MemberId",
            "  NodeId",
            "  Arn",
            "  NetworkId"
        ],
        "prefix": "managedblockchain-node",
        "scope": "yaml"
    },
    "AWS::MediaConnect::Flow": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::MediaConnect::Flow",
            "  Properties:",
            "    AvailabilityZone: \"${2:String}\"",
            "    Name: \"${3:String}\" # Required",
            "    Source:",
            "      Description: \"${5:String}\"",
            "      EntitlementArn: \"${6:String}\"",
            "      IngestIp: \"${7:String}\"",
            "      IngestPort: ${8:Number}",
            "      MaxBitrate: ${9:Number}",
            "      MaxLatency: ${10:Number}",
            "      MinLatency: ${11:Number}",
            "      Name: \"${12:String}\"",
            "      Protocol: \"${13:String}\"",
            "      SourceArn: \"${14:String}\"",
            "      SourceIngestPort: \"${15:String}\"",
            "      StreamId: \"${16:String}\"",
            "      VpcInterfaceName: \"${17:String}\"",
            "      WhitelistCidr: \"${18:String}\"",
            "    SourceFailoverConfig:",
            "      RecoveryWindow: ${5:Number}",
            "      State: \"${6:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flow.html",
            "Attributes: ",
            "  FlowArn",
            "  FlowAvailabilityZone",
            "  Source.SourceArn",
            "  Source.IngestIp",
            "  Source.SourceIngestPort"
        ],
        "prefix": "mediaconnect-flow",
        "scope": "yaml"
    },
    "AWS::MediaConnect::FlowEntitlement": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::MediaConnect::FlowEntitlement",
            "  Properties:",
            "    DataTransferSubscriberFeePercent: ${2:Number}",
            "    Description: \"${3:String}\" # Required",
            "    Encryption:",
            "      Algorithm: \"${4:String}\"",
            "      ConstantInitializationVector: \"${5:String}\"",
            "      DeviceId: \"${6:String}\"",
            "      KeyType: \"${7:String}\"",
            "      Region: \"${8:String}\"",
            "      ResourceId: \"${9:String}\"",
            "      RoleArn: \"${10:String}\"",
            "      SecretArn: \"${11:String}\"",
            "      Url: \"${12:String}\"",
            "    EntitlementStatus: \"${5:String}\"",
            "    FlowArn: \"${6:String}\" # Required",
            "    Name: \"${7:String}\" # Required",
            "    Subscribers: # Required",
            "      Subscribers"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowentitlement.html",
            "Attributes: ",
            "  EntitlementArn"
        ],
        "prefix": "mediaconnect-flowentitlement",
        "scope": "yaml"
    },
    "AWS::MediaConnect::FlowOutput": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::MediaConnect::FlowOutput",
            "  Properties:",
            "    CidrAllowList:",
            "      CidrAllowList",
            "    Description: \"${3:String}\"",
            "    Destination: \"${4:String}\"",
            "    Encryption:",
            "      Algorithm: \"${5:String}\"",
            "      KeyType: \"${6:String}\"",
            "      RoleArn: \"${7:String}\"",
            "      SecretArn: \"${8:String}\"",
            "    FlowArn: \"${6:String}\" # Required",
            "    MaxLatency: ${7:Number}",
            "    MinLatency: ${8:Number}",
            "    Name: \"${9:String}\"",
            "    Port: ${10:Number}",
            "    Protocol: \"${11:String}\" # Required",
            "    RemoteId: \"${12:String}\"",
            "    SmoothingLatency: ${13:Number}",
            "    StreamId: \"${14:String}\"",
            "    VpcInterfaceAttachment:",
            "      VpcInterfaceName: \"${15:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowoutput.html",
            "Attributes: ",
            "  OutputArn"
        ],
        "prefix": "mediaconnect-flowoutput",
        "scope": "yaml"
    },
    "AWS::MediaConnect::FlowSource": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::MediaConnect::FlowSource",
            "  Properties:",
            "    Decryption:",
            "      Algorithm: \"${2:String}\"",
            "      ConstantInitializationVector: \"${3:String}\"",
            "      DeviceId: \"${4:String}\"",
            "      KeyType: \"${5:String}\"",
            "      Region: \"${6:String}\"",
            "      ResourceId: \"${7:String}\"",
            "      RoleArn: \"${8:String}\"",
            "      SecretArn: \"${9:String}\"",
            "      Url: \"${10:String}\"",
            "    Description: \"${3:String}\" # Required",
            "    EntitlementArn: \"${4:String}\"",
            "    FlowArn: \"${5:String}\"",
            "    IngestPort: ${6:Number}",
            "    MaxBitrate: ${7:Number}",
            "    MaxLatency: ${8:Number}",
            "    Name: \"${9:String}\" # Required",
            "    Protocol: \"${10:String}\"",
            "    StreamId: \"${11:String}\"",
            "    VpcInterfaceName: \"${12:String}\"",
            "    WhitelistCidr: \"${13:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowsource.html",
            "Attributes: ",
            "  SourceArn",
            "  IngestIp",
            "  SourceIngestPort"
        ],
        "prefix": "mediaconnect-flowsource",
        "scope": "yaml"
    },
    "AWS::MediaConnect::FlowVpcInterface": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::MediaConnect::FlowVpcInterface",
            "  Properties:",
            "    FlowArn: \"${2:String}\" # Required",
            "    Name: \"${3:String}\" # Required",
            "    RoleArn: \"${4:String}\" # Required",
            "    SecurityGroupIds: # Required",
            "      SecurityGroupIds",
            "    SubnetId: \"${6:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowvpcinterface.html",
            "Attributes: ",
            "  NetworkInterfaceIds"
        ],
        "prefix": "mediaconnect-flowvpcinterface",
        "scope": "yaml"
    },
    "AWS::MediaConvert::JobTemplate": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::MediaConvert::JobTemplate",
            "  Properties:",
            "    AccelerationSettings:",
            "      Mode: \"${2:String}\"",
            "    Category: \"${3:String}\"",
            "    Description: \"${4:String}\"",
            "    HopDestinations:",
            "      HopDestinations",
            "    Name: \"${6:String}\"",
            "    Priority: ${7:Number}",
            "    Queue: \"${8:String}\"",
            "    SettingsJson: ${9:JSON} # Required",
            "    StatusUpdateInterval: \"${10:String}\"",
            "    Tags: ${11:JSON}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconvert-jobtemplate.html",
            "Attributes: ",
            "  Arn",
            "  Name"
        ],
        "prefix": "mediaconvert-jobtemplate",
        "scope": "yaml"
    },
    "AWS::MediaConvert::Preset": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::MediaConvert::Preset",
            "  Properties:",
            "    Category: \"${2:String}\"",
            "    Description: \"${3:String}\"",
            "    Name: \"${4:String}\"",
            "    SettingsJson: ${5:JSON} # Required",
            "    Tags: ${6:JSON}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconvert-preset.html",
            "Attributes: ",
            "  Arn",
            "  Name"
        ],
        "prefix": "mediaconvert-preset",
        "scope": "yaml"
    },
    "AWS::MediaConvert::Queue": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::MediaConvert::Queue",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    Name: \"${3:String}\"",
            "    PricingPlan: \"${4:String}\"",
            "    Status: \"${5:String}\"",
            "    Tags: ${6:JSON}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconvert-queue.html",
            "Attributes: ",
            "  Arn",
            "  Name"
        ],
        "prefix": "mediaconvert-queue",
        "scope": "yaml"
    },
    "AWS::MediaLive::Channel": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::MediaLive::Channel",
            "  Properties:",
            "    CdiInputSpecification:",
            "      Resolution: \"${2:String}\"",
            "    ChannelClass: \"${3:String}\"",
            "    Destinations:",
            "      Destinations",
            "    EncoderSettings:",
            "      AudioDescriptions:",
            "        -",
            "      CaptionDescriptions:",
            "        -",
            "      OutputGroups:",
            "        -",
            "      VideoDescriptions:",
            "        -",
            "    InputAttachments:",
            "      InputAttachments",
            "    InputSpecification:",
            "      Codec: \"${7:String}\"",
            "      MaximumBitrate: \"${8:String}\"",
            "      Resolution: \"${9:String}\"",
            "    LogLevel: \"${8:String}\"",
            "    Name: \"${9:String}\"",
            "    RoleArn: \"${10:String}\"",
            "    Tags: ${11:JSON}",
            "    Vpc:",
            "      PublicAddressAllocationIds:",
            "        -",
            "      SecurityGroupIds:",
            "        -",
            "      SubnetIds:",
            "        -"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-channel.html",
            "Attributes: ",
            "  Arn",
            "  Inputs"
        ],
        "prefix": "medialive-channel",
        "scope": "yaml"
    },
    "AWS::MediaLive::Input": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::MediaLive::Input",
            "  Properties:",
            "    Destinations:",
            "      Destinations",
            "    InputDevices:",
            "      InputDevices",
            "    InputSecurityGroups:",
            "      InputSecurityGroups",
            "    MediaConnectFlows:",
            "      MediaConnectFlows",
            "    Name: \"${6:String}\"",
            "    RoleArn: \"${7:String}\"",
            "    Sources:",
            "      Sources",
            "    Tags: ${9:JSON}",
            "    Type: \"${10:String}\"",
            "    Vpc:",
            "      SecurityGroupIds:",
            "        -",
            "      SubnetIds:",
            "        -"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-input.html",
            "Attributes: ",
            "  Destinations",
            "  Arn",
            "  Sources"
        ],
        "prefix": "medialive-input",
        "scope": "yaml"
    },
    "AWS::MediaLive::InputSecurityGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::MediaLive::InputSecurityGroup",
            "  Properties:",
            "    Tags: ${2:JSON}",
            "    WhitelistRules:",
            "      WhitelistRules"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-inputsecuritygroup.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "medialive-inputsecuritygroup",
        "scope": "yaml"
    },
    "AWS::MediaPackage::Asset": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::MediaPackage::Asset",
            "  Properties:",
            "    Id: \"${2:String}\" # Required",
            "    PackagingGroupId: \"${3:String}\" # Required",
            "    ResourceId: \"${4:String}\"",
            "    SourceArn: \"${5:String}\" # Required",
            "    SourceRoleArn: \"${6:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-asset.html",
            "Attributes: ",
            "  Arn",
            "  CreatedAt",
            "  EgressEndpoints"
        ],
        "prefix": "mediapackage-asset",
        "scope": "yaml"
    },
    "AWS::MediaPackage::Channel": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::MediaPackage::Channel",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    EgressAccessLogs:",
            "      LogGroupName: \"${3:String}\"",
            "    Id: \"${4:String}\" # Required",
            "    IngressAccessLogs:",
            "      LogGroupName: \"${5:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-channel.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "mediapackage-channel",
        "scope": "yaml"
    },
    "AWS::MediaPackage::OriginEndpoint": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::MediaPackage::OriginEndpoint",
            "  Properties:",
            "    Authorization:",
            "      CdnIdentifierSecret: \"${2:String}\"",
            "      SecretsRoleArn: \"${3:String}\"",
            "    ChannelId: \"${3:String}\" # Required",
            "    CmafPackage:",
            "      HlsManifests:",
            "        -",
            "      SegmentDurationSeconds: ${6:Number}",
            "      SegmentPrefix: \"${7:String}\"",
            "    DashPackage:",
            "      AdTriggers:",
            "        -",
            "      AdsOnDeliveryRestrictions: \"${6:String}\"",
            "      ManifestLayout: \"${8:String}\"",
            "      ManifestWindowSeconds: ${9:Number}",
            "      MinBufferTimeSeconds: ${10:Number}",
            "      MinUpdatePeriodSeconds: ${11:Number}",
            "      PeriodTriggers:",
            "        -",
            "      Profile: \"${13:String}\"",
            "      SegmentDurationSeconds: ${14:Number}",
            "      SegmentTemplateFormat: \"${15:String}\"",
            "      SuggestedPresentationDelaySeconds: ${17:Number}",
            "      UtcTiming: \"${18:String}\"",
            "      UtcTimingUri: \"${19:String}\"",
            "    Description: \"${6:String}\"",
            "    HlsPackage:",
            "      AdMarkers: \"${7:String}\"",
            "      AdTriggers:",
            "        -",
            "      AdsOnDeliveryRestrictions: \"${9:String}\"",
            "      IncludeIframeOnlyStream: ${11|false,true|}",
            "      PlaylistType: \"${12:String}\"",
            "      PlaylistWindowSeconds: ${13:Number}",
            "      ProgramDateTimeIntervalSeconds: ${14:Number}",
            "      SegmentDurationSeconds: ${15:Number}",
            "      UseAudioRenditionGroup: ${17|false,true|}",
            "    Id: \"${8:String}\" # Required",
            "    ManifestName: \"${9:String}\"",
            "    MssPackage:",
            "      ManifestWindowSeconds: ${11:Number}",
            "      SegmentDurationSeconds: ${12:Number}",
            "    Origination: \"${11:String}\"",
            "    StartoverWindowSeconds: ${12:Number}",
            "    Tags:",
            "      Tags",
            "    TimeDelaySeconds: ${14:Number}",
            "    Whitelist:",
            "      Whitelist"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-originendpoint.html",
            "Attributes: ",
            "  Arn",
            "  Url"
        ],
        "prefix": "mediapackage-originendpoint",
        "scope": "yaml"
    },
    "AWS::MediaPackage::PackagingConfiguration": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::MediaPackage::PackagingConfiguration",
            "  Properties:",
            "    CmafPackage:",
            "      HlsManifests:",
            "        -",
            "      IncludeEncoderConfigurationInSegments: ${4|false,true|}",
            "      SegmentDurationSeconds: ${5:Number}",
            "    DashPackage:",
            "      DashManifests:",
            "        -",
            "      IncludeEncoderConfigurationInSegments: ${5|false,true|}",
            "      PeriodTriggers:",
            "        -",
            "      SegmentDurationSeconds: ${7:Number}",
            "      SegmentTemplateFormat: \"${8:String}\"",
            "    HlsPackage:",
            "      HlsManifests:",
            "        -",
            "      SegmentDurationSeconds: ${6:Number}",
            "      UseAudioRenditionGroup: ${7|false,true|}",
            "    Id: \"${5:String}\" # Required",
            "    MssPackage:",
            "      MssManifests:",
            "        -",
            "      SegmentDurationSeconds: ${8:Number}",
            "    PackagingGroupId: \"${7:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-packagingconfiguration.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "mediapackage-packagingconfiguration",
        "scope": "yaml"
    },
    "AWS::MediaPackage::PackagingGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::MediaPackage::PackagingGroup",
            "  Properties:",
            "    Authorization:",
            "      CdnIdentifierSecret: \"${2:String}\"",
            "      SecretsRoleArn: \"${3:String}\"",
            "    EgressAccessLogs:",
            "      LogGroupName: \"${3:String}\"",
            "    Id: \"${4:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-packaginggroup.html",
            "Attributes: ",
            "  Arn",
            "  DomainName"
        ],
        "prefix": "mediapackage-packaginggroup",
        "scope": "yaml"
    },
    "AWS::MediaStore::Container": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::MediaStore::Container",
            "  Properties:",
            "    AccessLoggingEnabled: ${2|false,true|}",
            "    ContainerName: \"${3:String}\" # Required",
            "    CorsPolicy:",
            "      CorsPolicy",
            "    LifecyclePolicy: \"${5:String}\"",
            "    MetricPolicy:",
            "      ContainerLevelMetrics: \"${6:String}\"",
            "      MetricPolicyRules:",
            "        -",
            "    Policy: \"${7:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediastore-container.html",
            "Attributes: ",
            "  Endpoint"
        ],
        "prefix": "mediastore-container",
        "scope": "yaml"
    },
    "AWS::MediaTailor::PlaybackConfiguration": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::MediaTailor::PlaybackConfiguration",
            "  Properties:",
            "    AdDecisionServerUrl: \"${2:String}\" # Required",
            "    AvailSuppression:",
            "      Mode: \"${3:String}\"",
            "      Value: \"${4:String}\"",
            "    Bumper:",
            "      EndUrl: \"${4:String}\"",
            "      StartUrl: \"${5:String}\"",
            "    CdnConfiguration:",
            "      AdSegmentUrlPrefix: \"${5:String}\"",
            "      ContentSegmentUrlPrefix: \"${6:String}\"",
            "    ConfigurationAliases:",
            "    DashConfiguration:",
            "      MpdLocation: \"${7:String}\"",
            "      OriginManifestType: \"${8:String}\"",
            "    LivePreRollConfiguration:",
            "      AdDecisionServerUrl: \"${8:String}\"",
            "      MaxDurationSeconds: ${9:Number}",
            "    ManifestProcessingRules:",
            "    Name: \"${10:String}\" # Required",
            "    PersonalizationThresholdSeconds: ${11:Number}",
            "    SessionInitializationEndpointPrefix: \"${12:String}\"",
            "    SlateAdUrl: \"${13:String}\"",
            "    Tags:",
            "      Tags",
            "    TranscodeProfileName: \"${15:String}\"",
            "    VideoContentSourceUrl: \"${16:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-playbackconfiguration.html"
        ],
        "prefix": "mediatailor-playbackconfiguration",
        "scope": "yaml"
    },
    "AWS::MemoryDB::ACL": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::MemoryDB::ACL",
            "  Properties:",
            "    ACLName: \"${2:String}\" # Required",
            "    Tags:",
            "      Tags",
            "    UserNames:",
            "      UserNames"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-acl.html",
            "Attributes: ",
            "  Status",
            "  Arn"
        ],
        "prefix": "memorydb-acl",
        "scope": "yaml"
    },
    "AWS::MemoryDB::Cluster": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::MemoryDB::Cluster",
            "  Properties:",
            "    ACLName: \"${2:String}\" # Required",
            "    AutoMinorVersionUpgrade: ${3|false,true|}",
            "    ClusterName: \"${4:String}\" # Required",
            "    Description: \"${5:String}\"",
            "    EngineVersion: \"${6:String}\"",
            "    FinalSnapshotName: \"${7:String}\"",
            "    KmsKeyId: \"${8:String}\"",
            "    MaintenanceWindow: \"${9:String}\"",
            "    NodeType: \"${10:String}\" # Required",
            "    NumReplicasPerShard: ${11:Number}",
            "    NumShards: ${12:Number}",
            "    ParameterGroupName: \"${13:String}\"",
            "    Port: ${14:Number}",
            "    SecurityGroupIds:",
            "      SecurityGroupIds",
            "    SnapshotArns:",
            "      SnapshotArns",
            "    SnapshotName: \"${17:String}\"",
            "    SnapshotRetentionLimit: ${18:Number}",
            "    SnapshotWindow: \"${19:String}\"",
            "    SnsTopicArn: \"${20:String}\"",
            "    SnsTopicStatus: \"${21:String}\"",
            "    SubnetGroupName: \"${22:String}\"",
            "    TLSEnabled: ${23|false,true|}",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-cluster.html",
            "Attributes: ",
            "  Status",
            "  ParameterGroupStatus",
            "  ARN",
            "  ClusterEndpoint.Address",
            "  ClusterEndpoint.Port"
        ],
        "prefix": "memorydb-cluster",
        "scope": "yaml"
    },
    "AWS::MemoryDB::ParameterGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::MemoryDB::ParameterGroup",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    Family: \"${3:String}\" # Required",
            "    ParameterGroupName: \"${4:String}\" # Required",
            "    Parameters: ${5:JSON}",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-parametergroup.html",
            "Attributes: ",
            "  ARN"
        ],
        "prefix": "memorydb-parametergroup",
        "scope": "yaml"
    },
    "AWS::MemoryDB::SubnetGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::MemoryDB::SubnetGroup",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    SubnetGroupName: \"${3:String}\" # Required",
            "    SubnetIds: # Required",
            "      SubnetIds",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-subnetgroup.html",
            "Attributes: ",
            "  ARN"
        ],
        "prefix": "memorydb-subnetgroup",
        "scope": "yaml"
    },
    "AWS::MemoryDB::User": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::MemoryDB::User",
            "  Properties:",
            "    AccessString: \"${2:String}\" # Required",
            "    AuthenticationMode: ${3:JSON} # Required",
            "    Tags:",
            "      Tags",
            "    UserName: \"${5:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-user.html",
            "Attributes: ",
            "  Status",
            "  Arn"
        ],
        "prefix": "memorydb-user",
        "scope": "yaml"
    },
    "AWS::Neptune::DBCluster": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Neptune::DBCluster",
            "  Properties:",
            "    AssociatedRoles:",
            "      AssociatedRoles",
            "    AvailabilityZones:",
            "      AvailabilityZones",
            "    BackupRetentionPeriod: ${4:Number}",
            "    DBClusterIdentifier: \"${5:String}\"",
            "    DBClusterParameterGroupName: \"${6:String}\"",
            "    DBSubnetGroupName: \"${7:String}\"",
            "    DeletionProtection: ${8|false,true|}",
            "    EnableCloudwatchLogsExports:",
            "      EnableCloudwatchLogsExports",
            "    EngineVersion: \"${10:String}\"",
            "    IamAuthEnabled: ${11|false,true|}",
            "    KmsKeyId: \"${12:String}\"",
            "    Port: ${13:Number}",
            "    PreferredBackupWindow: \"${14:String}\"",
            "    PreferredMaintenanceWindow: \"${15:String}\"",
            "    RestoreToTime: \"${16:String}\"",
            "    RestoreType: \"${17:String}\"",
            "    SnapshotIdentifier: \"${18:String}\"",
            "    SourceDBClusterIdentifier: \"${19:String}\"",
            "    StorageEncrypted: ${20|false,true|}",
            "    Tags:",
            "      Tags",
            "    UseLatestRestorableTime: ${22|false,true|}",
            "    VpcSecurityGroupIds:",
            "      VpcSecurityGroupIds"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbcluster.html",
            "Attributes: ",
            "  ClusterResourceId",
            "  Endpoint",
            "  Port",
            "  ReadEndpoint"
        ],
        "prefix": "neptune-dbcluster",
        "scope": "yaml"
    },
    "AWS::Neptune::DBClusterParameterGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Neptune::DBClusterParameterGroup",
            "  Properties:",
            "    Description: \"${2:String}\" # Required",
            "    Family: \"${3:String}\" # Required",
            "    Name: \"${4:String}\"",
            "    Parameters: ${5:JSON} # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbclusterparametergroup.html"
        ],
        "prefix": "neptune-dbclusterparametergroup",
        "scope": "yaml"
    },
    "AWS::Neptune::DBInstance": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Neptune::DBInstance",
            "  Properties:",
            "    AllowMajorVersionUpgrade: ${2|false,true|}",
            "    AutoMinorVersionUpgrade: ${3|false,true|}",
            "    AvailabilityZone: \"${4:String}\"",
            "    DBClusterIdentifier: \"${5:String}\"",
            "    DBInstanceClass: \"${6:String}\" # Required",
            "    DBInstanceIdentifier: \"${7:String}\"",
            "    DBParameterGroupName: \"${8:String}\"",
            "    DBSnapshotIdentifier: \"${9:String}\"",
            "    DBSubnetGroupName: \"${10:String}\"",
            "    PreferredMaintenanceWindow: \"${11:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbinstance.html",
            "Attributes: ",
            "  Endpoint",
            "  Port"
        ],
        "prefix": "neptune-dbinstance",
        "scope": "yaml"
    },
    "AWS::Neptune::DBParameterGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Neptune::DBParameterGroup",
            "  Properties:",
            "    Description: \"${2:String}\" # Required",
            "    Family: \"${3:String}\" # Required",
            "    Name: \"${4:String}\"",
            "    Parameters: ${5:JSON} # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbparametergroup.html"
        ],
        "prefix": "neptune-dbparametergroup",
        "scope": "yaml"
    },
    "AWS::Neptune::DBSubnetGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Neptune::DBSubnetGroup",
            "  Properties:",
            "    DBSubnetGroupDescription: \"${2:String}\" # Required",
            "    DBSubnetGroupName: \"${3:String}\"",
            "    SubnetIds: # Required",
            "      SubnetIds",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbsubnetgroup.html"
        ],
        "prefix": "neptune-dbsubnetgroup",
        "scope": "yaml"
    },
    "AWS::NetworkFirewall::Firewall": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::NetworkFirewall::Firewall",
            "  Properties:",
            "    DeleteProtection: ${2|false,true|}",
            "    Description: \"${3:String}\"",
            "    FirewallName: \"${4:String}\" # Required",
            "    FirewallPolicyArn: \"${5:String}\" # Required",
            "    FirewallPolicyChangeProtection: ${6|false,true|}",
            "    SubnetChangeProtection: ${7|false,true|}",
            "    SubnetMappings: # Required",
            "      SubnetMappings",
            "    Tags:",
            "      Tags",
            "    VpcId: \"${10:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-firewall.html",
            "Attributes: ",
            "  FirewallArn",
            "  FirewallId",
            "  EndpointIds"
        ],
        "prefix": "networkfirewall-firewall",
        "scope": "yaml"
    },
    "AWS::NetworkFirewall::FirewallPolicy": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::NetworkFirewall::FirewallPolicy",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    FirewallPolicy:",
            "      StatefulDefaultActions:",
            "        -",
            "      StatefulRuleGroupReferences:",
            "        -",
            "      StatelessCustomActions:",
            "        -",
            "      StatelessDefaultActions:",
            "        -",
            "      StatelessFragmentDefaultActions:",
            "        -",
            "      StatelessRuleGroupReferences:",
            "        -",
            "    FirewallPolicyName: \"${4:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-firewallpolicy.html",
            "Attributes: ",
            "  FirewallPolicyArn",
            "  FirewallPolicyId"
        ],
        "prefix": "networkfirewall-firewallpolicy",
        "scope": "yaml"
    },
    "AWS::NetworkFirewall::LoggingConfiguration": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::NetworkFirewall::LoggingConfiguration",
            "  Properties:",
            "    FirewallArn: \"${2:String}\" # Required",
            "    FirewallName: \"${3:String}\"",
            "    LoggingConfiguration:",
            "      LogDestinationConfigs:",
            "        -"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-loggingconfiguration.html"
        ],
        "prefix": "networkfirewall-loggingconfiguration",
        "scope": "yaml"
    },
    "AWS::NetworkFirewall::RuleGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::NetworkFirewall::RuleGroup",
            "  Properties:",
            "    Capacity: ${2:Number} # Required",
            "    Description: \"${3:String}\"",
            "    RuleGroup:",
            "    RuleGroupName: \"${5:String}\" # Required",
            "    Tags:",
            "      Tags",
            "    Type: \"${7:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-rulegroup.html",
            "Attributes: ",
            "  RuleGroupArn",
            "  RuleGroupId"
        ],
        "prefix": "networkfirewall-rulegroup",
        "scope": "yaml"
    },
    "AWS::NetworkManager::CustomerGatewayAssociation": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::NetworkManager::CustomerGatewayAssociation",
            "  Properties:",
            "    CustomerGatewayArn: \"${2:String}\" # Required",
            "    DeviceId: \"${3:String}\" # Required",
            "    GlobalNetworkId: \"${4:String}\" # Required",
            "    LinkId: \"${5:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-customergatewayassociation.html"
        ],
        "prefix": "networkmanager-customergatewayassociation",
        "scope": "yaml"
    },
    "AWS::NetworkManager::Device": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::NetworkManager::Device",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    GlobalNetworkId: \"${3:String}\" # Required",
            "    Location:",
            "      Address: \"${4:String}\"",
            "      Latitude: \"${5:String}\"",
            "      Longitude: \"${6:String}\"",
            "    Model: \"${5:String}\"",
            "    SerialNumber: \"${6:String}\"",
            "    SiteId: \"${7:String}\"",
            "    Tags:",
            "      Tags",
            "    Type: \"${9:String}\"",
            "    Vendor: \"${10:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-device.html",
            "Attributes: ",
            "  DeviceArn",
            "  DeviceId"
        ],
        "prefix": "networkmanager-device",
        "scope": "yaml"
    },
    "AWS::NetworkManager::GlobalNetwork": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::NetworkManager::GlobalNetwork",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-globalnetwork.html",
            "Attributes: ",
            "  Arn",
            "  Id"
        ],
        "prefix": "networkmanager-globalnetwork",
        "scope": "yaml"
    },
    "AWS::NetworkManager::Link": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::NetworkManager::Link",
            "  Properties:",
            "    Bandwidth:",
            "      DownloadSpeed: ${2:Number}",
            "      UploadSpeed: ${3:Number}",
            "    Description: \"${3:String}\"",
            "    GlobalNetworkId: \"${4:String}\" # Required",
            "    Provider: \"${5:String}\"",
            "    SiteId: \"${6:String}\" # Required",
            "    Tags:",
            "      Tags",
            "    Type: \"${8:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-link.html",
            "Attributes: ",
            "  LinkArn",
            "  LinkId"
        ],
        "prefix": "networkmanager-link",
        "scope": "yaml"
    },
    "AWS::NetworkManager::LinkAssociation": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::NetworkManager::LinkAssociation",
            "  Properties:",
            "    DeviceId: \"${2:String}\" # Required",
            "    GlobalNetworkId: \"${3:String}\" # Required",
            "    LinkId: \"${4:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-linkassociation.html"
        ],
        "prefix": "networkmanager-linkassociation",
        "scope": "yaml"
    },
    "AWS::NetworkManager::Site": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::NetworkManager::Site",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    GlobalNetworkId: \"${3:String}\" # Required",
            "    Location:",
            "      Address: \"${4:String}\"",
            "      Latitude: \"${5:String}\"",
            "      Longitude: \"${6:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-site.html",
            "Attributes: ",
            "  SiteArn",
            "  SiteId"
        ],
        "prefix": "networkmanager-site",
        "scope": "yaml"
    },
    "AWS::NetworkManager::TransitGatewayRegistration": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::NetworkManager::TransitGatewayRegistration",
            "  Properties:",
            "    GlobalNetworkId: \"${2:String}\" # Required",
            "    TransitGatewayArn: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-transitgatewayregistration.html"
        ],
        "prefix": "networkmanager-transitgatewayregistration",
        "scope": "yaml"
    },
    "AWS::NimbleStudio::LaunchProfile": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::NimbleStudio::LaunchProfile",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    Ec2SubnetIds: # Required",
            "      Ec2SubnetIds",
            "    LaunchProfileProtocolVersions: # Required",
            "      LaunchProfileProtocolVersions",
            "    Name: \"${5:String}\" # Required",
            "    StreamConfiguration:",
            "      ClipboardMode: \"${6:String}\"",
            "      Ec2InstanceTypes:",
            "        -",
            "      MaxSessionLengthInMinutes: ${8:Number}",
            "      MaxStoppedSessionLengthInMinutes: ${9:Number}",
            "      StreamingImageIds:",
            "        -",
            "    StudioComponentIds: # Required",
            "      StudioComponentIds",
            "    StudioId: \"${8:String}\" # Required",
            "    Tags:"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-launchprofile.html",
            "Attributes: ",
            "  LaunchProfileId"
        ],
        "prefix": "nimblestudio-launchprofile",
        "scope": "yaml"
    },
    "AWS::NimbleStudio::StreamingImage": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::NimbleStudio::StreamingImage",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    Ec2ImageId: \"${3:String}\" # Required",
            "    Name: \"${4:String}\" # Required",
            "    StudioId: \"${5:String}\" # Required",
            "    Tags:"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-streamingimage.html",
            "Attributes: ",
            "  EulaIds",
            "  Owner",
            "  Platform",
            "  StreamingImageId"
        ],
        "prefix": "nimblestudio-streamingimage",
        "scope": "yaml"
    },
    "AWS::NimbleStudio::Studio": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::NimbleStudio::Studio",
            "  Properties:",
            "    AdminRoleArn: \"${2:String}\" # Required",
            "    DisplayName: \"${3:String}\" # Required",
            "    StudioEncryptionConfiguration:",
            "      KeyArn: \"${4:String}\"",
            "      KeyType: \"${5:String}\"",
            "    StudioName: \"${5:String}\" # Required",
            "    Tags:",
            "    UserRoleArn: \"${7:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-studio.html",
            "Attributes: ",
            "  HomeRegion",
            "  SsoClientId",
            "  StudioId",
            "  StudioUrl"
        ],
        "prefix": "nimblestudio-studio",
        "scope": "yaml"
    },
    "AWS::NimbleStudio::StudioComponent": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::NimbleStudio::StudioComponent",
            "  Properties:",
            "    Configuration:",
            "    Description: \"${3:String}\"",
            "    Ec2SecurityGroupIds:",
            "      Ec2SecurityGroupIds",
            "    InitializationScripts:",
            "      InitializationScripts",
            "    Name: \"${6:String}\" # Required",
            "    ScriptParameters:",
            "      ScriptParameters",
            "    StudioId: \"${8:String}\" # Required",
            "    Subtype: \"${9:String}\"",
            "    Tags:",
            "    Type: \"${11:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-studiocomponent.html",
            "Attributes: ",
            "  StudioComponentId"
        ],
        "prefix": "nimblestudio-studiocomponent",
        "scope": "yaml"
    },
    "AWS::OpenSearchService::Domain": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::OpenSearchService::Domain",
            "  Properties:",
            "    AccessPolicies: ${2:JSON}",
            "    AdvancedOptions:",
            "    AdvancedSecurityOptions:",
            "      Enabled: ${4|false,true|}",
            "      InternalUserDatabaseEnabled: ${5|false,true|}",
            "    ClusterConfig:",
            "      DedicatedMasterCount: ${5:Number}",
            "      DedicatedMasterEnabled: ${6|false,true|}",
            "      DedicatedMasterType: \"${7:String}\"",
            "      InstanceCount: ${8:Number}",
            "      InstanceType: \"${9:String}\"",
            "      WarmCount: ${10:Number}",
            "      WarmEnabled: ${11|false,true|}",
            "      WarmType: \"${12:String}\"",
            "      ZoneAwarenessEnabled: ${14|false,true|}",
            "    CognitoOptions:",
            "      Enabled: ${6|false,true|}",
            "      IdentityPoolId: \"${7:String}\"",
            "      RoleArn: \"${8:String}\"",
            "      UserPoolId: \"${9:String}\"",
            "    DomainEndpointOptions:",
            "      CustomEndpoint: \"${7:String}\"",
            "      CustomEndpointCertificateArn: \"${8:String}\"",
            "      CustomEndpointEnabled: ${9|false,true|}",
            "      EnforceHTTPS: ${10|false,true|}",
            "      TLSSecurityPolicy: \"${11:String}\"",
            "    DomainName: \"${8:String}\"",
            "    EBSOptions:",
            "      EBSEnabled: ${9|false,true|}",
            "      Iops: ${10:Number}",
            "      VolumeSize: ${11:Number}",
            "      VolumeType: \"${12:String}\"",
            "    EncryptionAtRestOptions:",
            "      Enabled: ${10|false,true|}",
            "      KmsKeyId: \"${11:String}\"",
            "    EngineVersion: \"${11:String}\"",
            "    LogPublishingOptions:",
            "    NodeToNodeEncryptionOptions:",
            "      Enabled: ${13|false,true|}",
            "    SnapshotOptions:",
            "      AutomatedSnapshotStartHour: ${14:Number}",
            "    Tags:",
            "      Tags",
            "    VPCOptions:",
            "      SecurityGroupIds:",
            "        -",
            "      SubnetIds:",
            "        -"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchservice-domain.html",
            "Attributes: ",
            "  DomainEndpoint",
            "  Id",
            "  Arn",
            "  DomainArn"
        ],
        "prefix": "opensearchservice-domain",
        "scope": "yaml"
    },
    "AWS::OpsWorks::App": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::OpsWorks::App",
            "  Properties:",
            "    AppSource:",
            "      Password: \"${2:String}\"",
            "      Revision: \"${3:String}\"",
            "      SshKey: \"${4:String}\"",
            "      Type: \"${5:String}\"",
            "      Url: \"${6:String}\"",
            "      Username: \"${7:String}\"",
            "    Attributes:",
            "    DataSources:",
            "      DataSources",
            "    Description: \"${5:String}\"",
            "    Domains:",
            "      Domains",
            "    EnableSsl: ${7|false,true|}",
            "    Environment:",
            "      Environment",
            "    Name: \"${9:String}\" # Required",
            "    Shortname: \"${10:String}\"",
            "    SslConfiguration:",
            "      Certificate: \"${11:String}\"",
            "      Chain: \"${12:String}\"",
            "      PrivateKey: \"${13:String}\"",
            "    StackId: \"${12:String}\" # Required",
            "    Type: \"${13:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-app.html"
        ],
        "prefix": "opsworks-app",
        "scope": "yaml"
    },
    "AWS::OpsWorks::ElasticLoadBalancerAttachment": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::OpsWorks::ElasticLoadBalancerAttachment",
            "  Properties:",
            "    ElasticLoadBalancerName: \"${2:String}\" # Required",
            "    LayerId: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-elbattachment.html"
        ],
        "prefix": "opsworks-elasticloadbalancerattachment",
        "scope": "yaml"
    },
    "AWS::OpsWorks::Instance": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::OpsWorks::Instance",
            "  Properties:",
            "    AgentVersion: \"${2:String}\"",
            "    AmiId: \"${3:String}\"",
            "    Architecture: \"${4:String}\"",
            "    AutoScalingType: \"${5:String}\"",
            "    AvailabilityZone: \"${6:String}\"",
            "    BlockDeviceMappings:",
            "      BlockDeviceMappings",
            "    EbsOptimized: ${8|false,true|}",
            "    ElasticIps:",
            "      ElasticIps",
            "    Hostname: \"${10:String}\"",
            "    InstallUpdatesOnBoot: ${11|false,true|}",
            "    InstanceType: \"${12:String}\" # Required",
            "    LayerIds: # Required",
            "      LayerIds",
            "    Os: \"${14:String}\"",
            "    RootDeviceType: \"${15:String}\"",
            "    SshKeyName: \"${16:String}\"",
            "    StackId: \"${17:String}\" # Required",
            "    SubnetId: \"${18:String}\"",
            "    Tenancy: \"${19:String}\"",
            "    TimeBasedAutoScaling:",
            "    VirtualizationType: \"${21:String}\"",
            "    Volumes:",
            "      Volumes"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-instance.html",
            "Attributes: ",
            "  AvailabilityZone",
            "  PrivateDnsName",
            "  PrivateIp",
            "  PublicDnsName",
            "  PublicIp"
        ],
        "prefix": "opsworks-instance",
        "scope": "yaml"
    },
    "AWS::OpsWorks::Layer": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::OpsWorks::Layer",
            "  Properties:",
            "    Attributes:",
            "    AutoAssignElasticIps: ${3|false,true|} # Required",
            "    AutoAssignPublicIps: ${4|false,true|} # Required",
            "    CustomInstanceProfileArn: \"${5:String}\"",
            "    CustomJson: ${6:JSON}",
            "    CustomRecipes:",
            "      Configure:",
            "        -",
            "      Deploy:",
            "        -",
            "      Setup:",
            "        -",
            "      Shutdown:",
            "        -",
            "      Undeploy:",
            "        -",
            "    CustomSecurityGroupIds:",
            "      CustomSecurityGroupIds",
            "    EnableAutoHealing: ${9|false,true|} # Required",
            "    InstallUpdatesOnBoot: ${10|false,true|}",
            "    LifecycleEventConfiguration:",
            "    LoadBasedAutoScaling:",
            "      Enable: ${13|false,true|}",
            "    Name: \"${13:String}\" # Required",
            "    Packages:",
            "      Packages",
            "    Shortname: \"${15:String}\" # Required",
            "    StackId: \"${16:String}\" # Required",
            "    Tags:",
            "      Tags",
            "    Type: \"${18:String}\" # Required",
            "    UseEbsOptimizedInstances: ${19|false,true|}",
            "    VolumeConfigurations:",
            "      VolumeConfigurations"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-layer.html"
        ],
        "prefix": "opsworks-layer",
        "scope": "yaml"
    },
    "AWS::OpsWorks::Stack": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::OpsWorks::Stack",
            "  Properties:",
            "    AgentVersion: \"${2:String}\"",
            "    Attributes:",
            "    ChefConfiguration:",
            "      BerkshelfVersion: \"${4:String}\"",
            "      ManageBerkshelf: ${5|false,true|}",
            "    CloneAppIds:",
            "      CloneAppIds",
            "    ClonePermissions: ${6|false,true|}",
            "    ConfigurationManager:",
            "      Name: \"${7:String}\"",
            "      Version: \"${8:String}\"",
            "    CustomCookbooksSource:",
            "      Password: \"${8:String}\"",
            "      Revision: \"${9:String}\"",
            "      SshKey: \"${10:String}\"",
            "      Type: \"${11:String}\"",
            "      Url: \"${12:String}\"",
            "      Username: \"${13:String}\"",
            "    CustomJson: ${9:JSON}",
            "    DefaultAvailabilityZone: \"${10:String}\"",
            "    DefaultInstanceProfileArn: \"${11:String}\" # Required",
            "    DefaultOs: \"${12:String}\"",
            "    DefaultRootDeviceType: \"${13:String}\"",
            "    DefaultSshKeyName: \"${14:String}\"",
            "    DefaultSubnetId: \"${15:String}\"",
            "    EcsClusterArn: \"${16:String}\"",
            "    ElasticIps:",
            "      ElasticIps",
            "    HostnameTheme: \"${18:String}\"",
            "    Name: \"${19:String}\" # Required",
            "    RdsDbInstances:",
            "      RdsDbInstances",
            "    ServiceRoleArn: \"${21:String}\" # Required",
            "    SourceStackId: \"${22:String}\"",
            "    Tags:",
            "      Tags",
            "    UseCustomCookbooks: ${24|false,true|}",
            "    UseOpsworksSecurityGroups: ${25|false,true|}",
            "    VpcId: \"${26:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-stack.html"
        ],
        "prefix": "opsworks-stack",
        "scope": "yaml"
    },
    "AWS::OpsWorks::UserProfile": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::OpsWorks::UserProfile",
            "  Properties:",
            "    AllowSelfManagement: ${2|false,true|}",
            "    IamUserArn: \"${3:String}\" # Required",
            "    SshPublicKey: \"${4:String}\"",
            "    SshUsername: \"${5:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-userprofile.html",
            "Attributes: ",
            "  SshUsername"
        ],
        "prefix": "opsworks-userprofile",
        "scope": "yaml"
    },
    "AWS::OpsWorks::Volume": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::OpsWorks::Volume",
            "  Properties:",
            "    Ec2VolumeId: \"${2:String}\" # Required",
            "    MountPoint: \"${3:String}\"",
            "    Name: \"${4:String}\"",
            "    StackId: \"${5:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-volume.html"
        ],
        "prefix": "opsworks-volume",
        "scope": "yaml"
    },
    "AWS::OpsWorksCM::Server": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::OpsWorksCM::Server",
            "  Properties:",
            "    AssociatePublicIpAddress: ${2|false,true|}",
            "    BackupId: \"${3:String}\"",
            "    BackupRetentionCount: ${4:Number}",
            "    CustomCertificate: \"${5:String}\"",
            "    CustomDomain: \"${6:String}\"",
            "    CustomPrivateKey: \"${7:String}\"",
            "    DisableAutomatedBackup: ${8|false,true|}",
            "    Engine: \"${9:String}\"",
            "    EngineAttributes:",
            "      EngineAttributes",
            "    EngineModel: \"${11:String}\"",
            "    EngineVersion: \"${12:String}\"",
            "    InstanceProfileArn: \"${13:String}\" # Required",
            "    InstanceType: \"${14:String}\" # Required",
            "    KeyPair: \"${15:String}\"",
            "    PreferredBackupWindow: \"${16:String}\"",
            "    PreferredMaintenanceWindow: \"${17:String}\"",
            "    SecurityGroupIds:",
            "      SecurityGroupIds",
            "    ServerName: \"${19:String}\"",
            "    ServiceRoleArn: \"${20:String}\" # Required",
            "    SubnetIds:",
            "      SubnetIds",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworkscm-server.html",
            "Attributes: ",
            "  Endpoint",
            "  Id",
            "  Arn"
        ],
        "prefix": "opsworkscm-server",
        "scope": "yaml"
    },
    "AWS::Panorama::ApplicationInstance": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Panorama::ApplicationInstance",
            "  Properties:",
            "    ApplicationInstanceIdToReplace: \"${2:String}\"",
            "    DefaultRuntimeContextDevice: \"${3:String}\" # Required",
            "    Description: \"${4:String}\"",
            "    DeviceId: \"${5:String}\"",
            "    ManifestOverridesPayload:",
            "      PayloadData: \"${6:String}\"",
            "    ManifestPayload:",
            "      PayloadData: \"${7:String}\"",
            "    Name: \"${8:String}\"",
            "    RuntimeRoleArn: \"${9:String}\"",
            "    StatusFilter: \"${10:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-applicationinstance.html",
            "Attributes: ",
            "  DefaultRuntimeContextDeviceName",
            "  ApplicationInstanceId",
            "  Status",
            "  HealthStatus",
            "  StatusDescription",
            "  CreatedTime",
            "  LastUpdatedTime",
            "  Arn"
        ],
        "prefix": "panorama-applicationinstance",
        "scope": "yaml"
    },
    "AWS::Panorama::Package": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Panorama::Package",
            "  Properties:",
            "    PackageName: \"${2:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-package.html",
            "Attributes: ",
            "  PackageId",
            "  Arn",
            "  CreatedTime"
        ],
        "prefix": "panorama-package",
        "scope": "yaml"
    },
    "AWS::Panorama::PackageVersion": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Panorama::PackageVersion",
            "  Properties:",
            "    MarkLatest: ${2|false,true|}",
            "    OwnerAccount: \"${3:String}\"",
            "    PackageId: \"${4:String}\" # Required",
            "    PackageVersion: \"${5:String}\" # Required",
            "    PatchVersion: \"${6:String}\" # Required",
            "    UpdatedLatestPatchVersion: \"${7:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-packageversion.html",
            "Attributes: ",
            "  PackageArn",
            "  IsLatestPatch",
            "  PackageName",
            "  Status",
            "  StatusDescription",
            "  RegisteredTime"
        ],
        "prefix": "panorama-packageversion",
        "scope": "yaml"
    },
    "AWS::Personalize::Dataset": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Personalize::Dataset",
            "  Properties:",
            "    DatasetGroupArn: \"${2:String}\" # Required",
            "    DatasetImportJob:",
            "      DataSource: ${3:JSON}",
            "      DatasetArn: \"${4:String}\"",
            "      DatasetImportJobArn: \"${5:String}\"",
            "      JobName: \"${6:String}\"",
            "      RoleArn: \"${7:String}\"",
            "    DatasetType: \"${4:String}\" # Required",
            "    Name: \"${5:String}\" # Required",
            "    SchemaArn: \"${6:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-personalize-dataset.html",
            "Attributes: ",
            "  DatasetArn"
        ],
        "prefix": "personalize-dataset",
        "scope": "yaml"
    },
    "AWS::Personalize::DatasetGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Personalize::DatasetGroup",
            "  Properties:",
            "    Domain: \"${2:String}\"",
            "    KmsKeyArn: \"${3:String}\"",
            "    Name: \"${4:String}\" # Required",
            "    RoleArn: \"${5:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-personalize-datasetgroup.html",
            "Attributes: ",
            "  DatasetGroupArn"
        ],
        "prefix": "personalize-datasetgroup",
        "scope": "yaml"
    },
    "AWS::Personalize::Schema": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Personalize::Schema",
            "  Properties:",
            "    Domain: \"${2:String}\"",
            "    Name: \"${3:String}\" # Required",
            "    Schema: \"${4:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-personalize-schema.html",
            "Attributes: ",
            "  SchemaArn"
        ],
        "prefix": "personalize-schema",
        "scope": "yaml"
    },
    "AWS::Personalize::Solution": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Personalize::Solution",
            "  Properties:",
            "    DatasetGroupArn: \"${2:String}\" # Required",
            "    EventType: \"${3:String}\"",
            "    Name: \"${4:String}\" # Required",
            "    PerformAutoML: ${5|false,true|}",
            "    PerformHPO: ${6|false,true|}",
            "    RecipeArn: \"${7:String}\"",
            "    SolutionConfig:",
            "      AutoMLConfig: ${9:JSON}",
            "      EventValueThreshold: \"${10:String}\"",
            "      HpoConfig: ${12:JSON}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-personalize-solution.html",
            "Attributes: ",
            "  SolutionArn"
        ],
        "prefix": "personalize-solution",
        "scope": "yaml"
    },
    "AWS::Pinpoint::ADMChannel": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Pinpoint::ADMChannel",
            "  Properties:",
            "    ApplicationId: \"${2:String}\" # Required",
            "    ClientId: \"${3:String}\" # Required",
            "    ClientSecret: \"${4:String}\" # Required",
            "    Enabled: ${5|false,true|}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-admchannel.html"
        ],
        "prefix": "pinpoint-admchannel",
        "scope": "yaml"
    },
    "AWS::Pinpoint::APNSChannel": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Pinpoint::APNSChannel",
            "  Properties:",
            "    ApplicationId: \"${2:String}\" # Required",
            "    BundleId: \"${3:String}\"",
            "    Certificate: \"${4:String}\"",
            "    DefaultAuthenticationMethod: \"${5:String}\"",
            "    Enabled: ${6|false,true|}",
            "    PrivateKey: \"${7:String}\"",
            "    TeamId: \"${8:String}\"",
            "    TokenKey: \"${9:String}\"",
            "    TokenKeyId: \"${10:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnschannel.html"
        ],
        "prefix": "pinpoint-apnschannel",
        "scope": "yaml"
    },
    "AWS::Pinpoint::APNSSandboxChannel": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Pinpoint::APNSSandboxChannel",
            "  Properties:",
            "    ApplicationId: \"${2:String}\" # Required",
            "    BundleId: \"${3:String}\"",
            "    Certificate: \"${4:String}\"",
            "    DefaultAuthenticationMethod: \"${5:String}\"",
            "    Enabled: ${6|false,true|}",
            "    PrivateKey: \"${7:String}\"",
            "    TeamId: \"${8:String}\"",
            "    TokenKey: \"${9:String}\"",
            "    TokenKeyId: \"${10:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnssandboxchannel.html"
        ],
        "prefix": "pinpoint-apnssandboxchannel",
        "scope": "yaml"
    },
    "AWS::Pinpoint::APNSVoipChannel": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Pinpoint::APNSVoipChannel",
            "  Properties:",
            "    ApplicationId: \"${2:String}\" # Required",
            "    BundleId: \"${3:String}\"",
            "    Certificate: \"${4:String}\"",
            "    DefaultAuthenticationMethod: \"${5:String}\"",
            "    Enabled: ${6|false,true|}",
            "    PrivateKey: \"${7:String}\"",
            "    TeamId: \"${8:String}\"",
            "    TokenKey: \"${9:String}\"",
            "    TokenKeyId: \"${10:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnsvoipchannel.html"
        ],
        "prefix": "pinpoint-apnsvoipchannel",
        "scope": "yaml"
    },
    "AWS::Pinpoint::APNSVoipSandboxChannel": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Pinpoint::APNSVoipSandboxChannel",
            "  Properties:",
            "    ApplicationId: \"${2:String}\" # Required",
            "    BundleId: \"${3:String}\"",
            "    Certificate: \"${4:String}\"",
            "    DefaultAuthenticationMethod: \"${5:String}\"",
            "    Enabled: ${6|false,true|}",
            "    PrivateKey: \"${7:String}\"",
            "    TeamId: \"${8:String}\"",
            "    TokenKey: \"${9:String}\"",
            "    TokenKeyId: \"${10:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnsvoipsandboxchannel.html"
        ],
        "prefix": "pinpoint-apnsvoipsandboxchannel",
        "scope": "yaml"
    },
    "AWS::Pinpoint::App": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Pinpoint::App",
            "  Properties:",
            "    Name: \"${2:String}\" # Required",
            "    Tags: ${3:JSON}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-app.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "pinpoint-app",
        "scope": "yaml"
    },
    "AWS::Pinpoint::ApplicationSettings": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Pinpoint::ApplicationSettings",
            "  Properties:",
            "    ApplicationId: \"${2:String}\" # Required",
            "    CampaignHook:",
            "      LambdaFunctionName: \"${3:String}\"",
            "      Mode: \"${4:String}\"",
            "      WebUrl: \"${5:String}\"",
            "    CloudWatchMetricsEnabled: ${4|false,true|}",
            "    Limits:",
            "      Daily: ${5:Number}",
            "      MaximumDuration: ${6:Number}",
            "      MessagesPerSecond: ${7:Number}",
            "      Total: ${8:Number}",
            "    QuietTime:",
            "      End: \"${6:String}\"",
            "      Start: \"${7:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-applicationsettings.html"
        ],
        "prefix": "pinpoint-applicationsettings",
        "scope": "yaml"
    },
    "AWS::Pinpoint::BaiduChannel": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Pinpoint::BaiduChannel",
            "  Properties:",
            "    ApiKey: \"${2:String}\" # Required",
            "    ApplicationId: \"${3:String}\" # Required",
            "    Enabled: ${4|false,true|}",
            "    SecretKey: \"${5:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-baiduchannel.html"
        ],
        "prefix": "pinpoint-baiduchannel",
        "scope": "yaml"
    },
    "AWS::Pinpoint::Campaign": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Pinpoint::Campaign",
            "  Properties:",
            "    AdditionalTreatments:",
            "      AdditionalTreatments",
            "    ApplicationId: \"${3:String}\" # Required",
            "    CampaignHook:",
            "      LambdaFunctionName: \"${4:String}\"",
            "      Mode: \"${5:String}\"",
            "      WebUrl: \"${6:String}\"",
            "    Description: \"${5:String}\"",
            "    HoldoutPercent: ${6:Number}",
            "    IsPaused: ${7|false,true|}",
            "    Limits:",
            "      Daily: ${8:Number}",
            "      MaximumDuration: ${9:Number}",
            "      MessagesPerSecond: ${10:Number}",
            "      Session: ${11:Number}",
            "      Total: ${12:Number}",
            "    MessageConfiguration:",
            "    Name: \"${10:String}\" # Required",
            "    Priority: ${11:Number}",
            "    Schedule:",
            "      EndTime: \"${12:String}\"",
            "      Frequency: \"${14:String}\"",
            "      IsLocalTime: ${15|false,true|}",
            "      StartTime: \"${17:String}\"",
            "      TimeZone: \"${18:String}\"",
            "    SegmentId: \"${13:String}\" # Required",
            "    SegmentVersion: ${14:Number}",
            "    Tags: ${15:JSON}",
            "    TreatmentDescription: \"${16:String}\"",
            "    TreatmentName: \"${17:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-campaign.html",
            "Attributes: ",
            "  CampaignId",
            "  Arn"
        ],
        "prefix": "pinpoint-campaign",
        "scope": "yaml"
    },
    "AWS::Pinpoint::EmailChannel": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Pinpoint::EmailChannel",
            "  Properties:",
            "    ApplicationId: \"${2:String}\" # Required",
            "    ConfigurationSet: \"${3:String}\"",
            "    Enabled: ${4|false,true|}",
            "    FromAddress: \"${5:String}\" # Required",
            "    Identity: \"${6:String}\" # Required",
            "    RoleArn: \"${7:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-emailchannel.html"
        ],
        "prefix": "pinpoint-emailchannel",
        "scope": "yaml"
    },
    "AWS::Pinpoint::EmailTemplate": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Pinpoint::EmailTemplate",
            "  Properties:",
            "    DefaultSubstitutions: \"${2:String}\"",
            "    HtmlPart: \"${3:String}\"",
            "    Subject: \"${4:String}\" # Required",
            "    Tags: ${5:JSON}",
            "    TemplateDescription: \"${6:String}\"",
            "    TemplateName: \"${7:String}\" # Required",
            "    TextPart: \"${8:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-emailtemplate.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "pinpoint-emailtemplate",
        "scope": "yaml"
    },
    "AWS::Pinpoint::EventStream": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Pinpoint::EventStream",
            "  Properties:",
            "    ApplicationId: \"${2:String}\" # Required",
            "    DestinationStreamArn: \"${3:String}\" # Required",
            "    RoleArn: \"${4:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-eventstream.html"
        ],
        "prefix": "pinpoint-eventstream",
        "scope": "yaml"
    },
    "AWS::Pinpoint::GCMChannel": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Pinpoint::GCMChannel",
            "  Properties:",
            "    ApiKey: \"${2:String}\" # Required",
            "    ApplicationId: \"${3:String}\" # Required",
            "    Enabled: ${4|false,true|}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-gcmchannel.html"
        ],
        "prefix": "pinpoint-gcmchannel",
        "scope": "yaml"
    },
    "AWS::Pinpoint::InAppTemplate": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Pinpoint::InAppTemplate",
            "  Properties:",
            "    Content:",
            "      Content",
            "    CustomConfig: ${3:JSON}",
            "    Layout: \"${4:String}\"",
            "    Tags: ${5:JSON}",
            "    TemplateDescription: \"${6:String}\"",
            "    TemplateName: \"${7:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-inapptemplate.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "pinpoint-inapptemplate",
        "scope": "yaml"
    },
    "AWS::Pinpoint::PushTemplate": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Pinpoint::PushTemplate",
            "  Properties:",
            "    ADM:",
            "      Action: \"${2:String}\"",
            "      Body: \"${3:String}\"",
            "      ImageIconUrl: \"${4:String}\"",
            "      ImageUrl: \"${5:String}\"",
            "      SmallImageIconUrl: \"${6:String}\"",
            "      Sound: \"${7:String}\"",
            "      Title: \"${8:String}\"",
            "      Url: \"${9:String}\"",
            "    APNS:",
            "      Action: \"${3:String}\"",
            "      Body: \"${4:String}\"",
            "      MediaUrl: \"${5:String}\"",
            "      Sound: \"${6:String}\"",
            "      Title: \"${7:String}\"",
            "      Url: \"${8:String}\"",
            "    Baidu:",
            "      Action: \"${4:String}\"",
            "      Body: \"${5:String}\"",
            "      ImageIconUrl: \"${6:String}\"",
            "      ImageUrl: \"${7:String}\"",
            "      SmallImageIconUrl: \"${8:String}\"",
            "      Sound: \"${9:String}\"",
            "      Title: \"${10:String}\"",
            "      Url: \"${11:String}\"",
            "    Default:",
            "      Action: \"${5:String}\"",
            "      Body: \"${6:String}\"",
            "      Sound: \"${7:String}\"",
            "      Title: \"${8:String}\"",
            "      Url: \"${9:String}\"",
            "    DefaultSubstitutions: \"${6:String}\"",
            "    GCM:",
            "      Action: \"${7:String}\"",
            "      Body: \"${8:String}\"",
            "      ImageIconUrl: \"${9:String}\"",
            "      ImageUrl: \"${10:String}\"",
            "      SmallImageIconUrl: \"${11:String}\"",
            "      Sound: \"${12:String}\"",
            "      Title: \"${13:String}\"",
            "      Url: \"${14:String}\"",
            "    Tags: ${8:JSON}",
            "    TemplateDescription: \"${9:String}\"",
            "    TemplateName: \"${10:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-pushtemplate.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "pinpoint-pushtemplate",
        "scope": "yaml"
    },
    "AWS::Pinpoint::SMSChannel": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Pinpoint::SMSChannel",
            "  Properties:",
            "    ApplicationId: \"${2:String}\" # Required",
            "    Enabled: ${3|false,true|}",
            "    SenderId: \"${4:String}\"",
            "    ShortCode: \"${5:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-smschannel.html"
        ],
        "prefix": "pinpoint-smschannel",
        "scope": "yaml"
    },
    "AWS::Pinpoint::Segment": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Pinpoint::Segment",
            "  Properties:",
            "    ApplicationId: \"${2:String}\" # Required",
            "    Dimensions:",
            "      Attributes: ${3:JSON}",
            "      Metrics: ${7:JSON}",
            "      UserAttributes: ${8:JSON}",
            "    Name: \"${4:String}\" # Required",
            "    SegmentGroups:",
            "      Groups:",
            "        -",
            "      Include: \"${6:String}\"",
            "    Tags: ${6:JSON}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-segment.html",
            "Attributes: ",
            "  SegmentId",
            "  Arn"
        ],
        "prefix": "pinpoint-segment",
        "scope": "yaml"
    },
    "AWS::Pinpoint::SmsTemplate": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Pinpoint::SmsTemplate",
            "  Properties:",
            "    Body: \"${2:String}\" # Required",
            "    DefaultSubstitutions: \"${3:String}\"",
            "    Tags: ${4:JSON}",
            "    TemplateDescription: \"${5:String}\"",
            "    TemplateName: \"${6:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-smstemplate.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "pinpoint-smstemplate",
        "scope": "yaml"
    },
    "AWS::Pinpoint::VoiceChannel": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Pinpoint::VoiceChannel",
            "  Properties:",
            "    ApplicationId: \"${2:String}\" # Required",
            "    Enabled: ${3|false,true|}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-voicechannel.html"
        ],
        "prefix": "pinpoint-voicechannel",
        "scope": "yaml"
    },
    "AWS::PinpointEmail::ConfigurationSet": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::PinpointEmail::ConfigurationSet",
            "  Properties:",
            "    DeliveryOptions:",
            "      SendingPoolName: \"${2:String}\"",
            "    Name: \"${3:String}\" # Required",
            "    ReputationOptions:",
            "      ReputationMetricsEnabled: ${4|false,true|}",
            "    SendingOptions:",
            "      SendingEnabled: ${5|false,true|}",
            "    Tags:",
            "      Tags",
            "    TrackingOptions:",
            "      CustomRedirectDomain: \"${7:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpointemail-configurationset.html"
        ],
        "prefix": "pinpointemail-configurationset",
        "scope": "yaml"
    },
    "AWS::PinpointEmail::ConfigurationSetEventDestination": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::PinpointEmail::ConfigurationSetEventDestination",
            "  Properties:",
            "    ConfigurationSetName: \"${2:String}\" # Required",
            "    EventDestination:",
            "      Enabled: ${4|false,true|}",
            "      MatchingEventTypes:",
            "        -",
            "    EventDestinationName: \"${4:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpointemail-configurationseteventdestination.html"
        ],
        "prefix": "pinpointemail-configurationseteventdestination",
        "scope": "yaml"
    },
    "AWS::PinpointEmail::DedicatedIpPool": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::PinpointEmail::DedicatedIpPool",
            "  Properties:",
            "    PoolName: \"${2:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpointemail-dedicatedippool.html"
        ],
        "prefix": "pinpointemail-dedicatedippool",
        "scope": "yaml"
    },
    "AWS::PinpointEmail::Identity": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::PinpointEmail::Identity",
            "  Properties:",
            "    DkimSigningEnabled: ${2|false,true|}",
            "    FeedbackForwardingEnabled: ${3|false,true|}",
            "    MailFromAttributes:",
            "      BehaviorOnMxFailure: \"${4:String}\"",
            "      MailFromDomain: \"${5:String}\"",
            "    Name: \"${5:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpointemail-identity.html",
            "Attributes: ",
            "  IdentityDNSRecordName3",
            "  IdentityDNSRecordName1",
            "  IdentityDNSRecordName2",
            "  IdentityDNSRecordValue3",
            "  IdentityDNSRecordValue2",
            "  IdentityDNSRecordValue1"
        ],
        "prefix": "pinpointemail-identity",
        "scope": "yaml"
    },
    "AWS::QLDB::Ledger": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::QLDB::Ledger",
            "  Properties:",
            "    DeletionProtection: ${2|false,true|}",
            "    KmsKey: \"${3:String}\"",
            "    Name: \"${4:String}\"",
            "    PermissionsMode: \"${5:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qldb-ledger.html"
        ],
        "prefix": "qldb-ledger",
        "scope": "yaml"
    },
    "AWS::QLDB::Stream": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::QLDB::Stream",
            "  Properties:",
            "    ExclusiveEndTime: \"${2:String}\"",
            "    InclusiveStartTime: \"${3:String}\" # Required",
            "    KinesisConfiguration:",
            "      AggregationEnabled: ${4|false,true|}",
            "      StreamArn: \"${5:String}\"",
            "    LedgerName: \"${5:String}\" # Required",
            "    RoleArn: \"${6:String}\" # Required",
            "    StreamName: \"${7:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qldb-stream.html",
            "Attributes: ",
            "  Arn",
            "  Id"
        ],
        "prefix": "qldb-stream",
        "scope": "yaml"
    },
    "AWS::QuickSight::Analysis": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::QuickSight::Analysis",
            "  Properties:",
            "    AnalysisId: \"${2:String}\" # Required",
            "    AwsAccountId: \"${3:String}\" # Required",
            "    Errors:",
            "      Errors",
            "    Name: \"${5:String}\"",
            "    Parameters:",
            "      DateTimeParameters:",
            "        -",
            "      DecimalParameters:",
            "        -",
            "      IntegerParameters:",
            "        -",
            "      StringParameters:",
            "        -",
            "    Permissions:",
            "      Permissions",
            "    SourceEntity:",
            "    Tags:",
            "      Tags",
            "    ThemeArn: \"${10:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-analysis.html",
            "Attributes: ",
            "  Arn",
            "  CreatedTime",
            "  DataSetArns",
            "  LastUpdatedTime",
            "  Sheets",
            "  Status"
        ],
        "prefix": "quicksight-analysis",
        "scope": "yaml"
    },
    "AWS::QuickSight::Dashboard": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::QuickSight::Dashboard",
            "  Properties:",
            "    AwsAccountId: \"${2:String}\" # Required",
            "    DashboardId: \"${3:String}\" # Required",
            "    DashboardPublishOptions:",
            "    Name: \"${5:String}\"",
            "    Parameters:",
            "      DateTimeParameters:",
            "        -",
            "      DecimalParameters:",
            "        -",
            "      IntegerParameters:",
            "        -",
            "      StringParameters:",
            "        -",
            "    Permissions:",
            "      Permissions",
            "    SourceEntity:",
            "    Tags:",
            "      Tags",
            "    ThemeArn: \"${10:String}\"",
            "    VersionDescription: \"${11:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-dashboard.html",
            "Attributes: ",
            "  Arn",
            "  CreatedTime",
            "  LastPublishedTime",
            "  LastUpdatedTime"
        ],
        "prefix": "quicksight-dashboard",
        "scope": "yaml"
    },
    "AWS::QuickSight::DataSet": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::QuickSight::DataSet",
            "  Properties:",
            "    AwsAccountId: \"${2:String}\"",
            "    ColumnGroups:",
            "      ColumnGroups",
            "    ColumnLevelPermissionRules:",
            "      ColumnLevelPermissionRules",
            "    DataSetId: \"${5:String}\"",
            "    FieldFolders:",
            "    ImportMode: \"${7:String}\"",
            "    IngestionWaitPolicy:",
            "      IngestionWaitTimeInHours: ${8:Number}",
            "      WaitForSpiceIngestion: ${9|false,true|}",
            "    LogicalTableMap:",
            "    Name: \"${10:String}\"",
            "    Permissions:",
            "      Permissions",
            "    PhysicalTableMap:",
            "    RowLevelPermissionDataSet:",
            "      Arn: \"${13:String}\"",
            "      FormatVersion: \"${14:String}\"",
            "      Namespace: \"${15:String}\"",
            "      PermissionPolicy: \"${16:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-dataset.html",
            "Attributes: ",
            "  Arn",
            "  ConsumedSpiceCapacityInBytes",
            "  CreatedTime",
            "  LastUpdatedTime",
            "  OutputColumns"
        ],
        "prefix": "quicksight-dataset",
        "scope": "yaml"
    },
    "AWS::QuickSight::DataSource": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::QuickSight::DataSource",
            "  Properties:",
            "    AlternateDataSourceParameters:",
            "      AlternateDataSourceParameters",
            "    AwsAccountId: \"${3:String}\"",
            "    Credentials:",
            "      CopySourceArn: \"${4:String}\"",
            "    DataSourceId: \"${5:String}\"",
            "    DataSourceParameters:",
            "    ErrorInfo:",
            "      Message: \"${7:String}\"",
            "      Type: \"${8:String}\"",
            "    Name: \"${8:String}\"",
            "    Permissions:",
            "      Permissions",
            "    SslProperties:",
            "      DisableSsl: ${10|false,true|}",
            "    Tags:",
            "      Tags",
            "    Type: \"${12:String}\"",
            "    VpcConnectionProperties:",
            "      VpcConnectionArn: \"${13:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-datasource.html",
            "Attributes: ",
            "  Arn",
            "  CreatedTime",
            "  LastUpdatedTime",
            "  Status"
        ],
        "prefix": "quicksight-datasource",
        "scope": "yaml"
    },
    "AWS::QuickSight::Template": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::QuickSight::Template",
            "  Properties:",
            "    AwsAccountId: \"${2:String}\" # Required",
            "    Name: \"${3:String}\"",
            "    Permissions:",
            "      Permissions",
            "    SourceEntity:",
            "    Tags:",
            "      Tags",
            "    TemplateId: \"${7:String}\" # Required",
            "    VersionDescription: \"${8:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-template.html",
            "Attributes: ",
            "  Arn",
            "  CreatedTime",
            "  LastUpdatedTime"
        ],
        "prefix": "quicksight-template",
        "scope": "yaml"
    },
    "AWS::QuickSight::Theme": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::QuickSight::Theme",
            "  Properties:",
            "    AwsAccountId: \"${2:String}\" # Required",
            "    BaseThemeId: \"${3:String}\"",
            "    Configuration:",
            "    Name: \"${5:String}\"",
            "    Permissions:",
            "      Permissions",
            "    Tags:",
            "      Tags",
            "    ThemeId: \"${8:String}\" # Required",
            "    VersionDescription: \"${9:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-theme.html",
            "Attributes: ",
            "  Arn",
            "  CreatedTime",
            "  LastUpdatedTime",
            "  Type"
        ],
        "prefix": "quicksight-theme",
        "scope": "yaml"
    },
    "AWS::RAM::ResourceShare": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::RAM::ResourceShare",
            "  Properties:",
            "    AllowExternalPrincipals: ${2|false,true|}",
            "    Name: \"${3:String}\" # Required",
            "    PermissionArns:",
            "      PermissionArns",
            "    Principals:",
            "      Principals",
            "    ResourceArns:",
            "      ResourceArns",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ram-resourceshare.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "ram-resourceshare",
        "scope": "yaml"
    },
    "AWS::RDS::DBCluster": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::RDS::DBCluster",
            "  Properties:",
            "    AssociatedRoles:",
            "      AssociatedRoles",
            "    AvailabilityZones:",
            "      AvailabilityZones",
            "    BacktrackWindow: ${4:Number}",
            "    BackupRetentionPeriod: ${5:Number}",
            "    CopyTagsToSnapshot: ${6|false,true|}",
            "    DBClusterIdentifier: \"${7:String}\"",
            "    DBClusterParameterGroupName: \"${8:String}\"",
            "    DBSubnetGroupName: \"${9:String}\"",
            "    DatabaseName: \"${10:String}\"",
            "    DeletionProtection: ${11|false,true|}",
            "    EnableCloudwatchLogsExports:",
            "      EnableCloudwatchLogsExports",
            "    EnableHttpEndpoint: ${13|false,true|}",
            "    EnableIAMDatabaseAuthentication: ${14|false,true|}",
            "    Engine: \"${15:String}\" # Required",
            "    EngineMode: \"${16:String}\"",
            "    EngineVersion: \"${17:String}\"",
            "    GlobalClusterIdentifier: \"${18:String}\"",
            "    KmsKeyId: \"${19:String}\"",
            "    MasterUserPassword: \"${20:String}\"",
            "    MasterUsername: \"${21:String}\"",
            "    Port: ${22:Number}",
            "    PreferredBackupWindow: \"${23:String}\"",
            "    PreferredMaintenanceWindow: \"${24:String}\"",
            "    ReplicationSourceIdentifier: \"${25:String}\"",
            "    RestoreType: \"${26:String}\"",
            "    ScalingConfiguration:",
            "      AutoPause: ${27|false,true|}",
            "      MaxCapacity: ${28:Number}",
            "      MinCapacity: ${29:Number}",
            "      SecondsUntilAutoPause: ${30:Number}",
            "    SnapshotIdentifier: \"${28:String}\"",
            "    SourceDBClusterIdentifier: \"${29:String}\"",
            "    SourceRegion: \"${30:String}\"",
            "    StorageEncrypted: ${31|false,true|}",
            "    Tags:",
            "      Tags",
            "    UseLatestRestorableTime: ${33|false,true|}",
            "    VpcSecurityGroupIds:",
            "      VpcSecurityGroupIds"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html",
            "Attributes: ",
            "  Endpoint.Address",
            "  Endpoint.Port",
            "  ReadEndpoint.Address"
        ],
        "prefix": "rds-dbcluster",
        "scope": "yaml"
    },
    "AWS::RDS::DBClusterParameterGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::RDS::DBClusterParameterGroup",
            "  Properties:",
            "    Description: \"${2:String}\" # Required",
            "    Family: \"${3:String}\" # Required",
            "    Parameters: ${4:JSON} # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbclusterparametergroup.html"
        ],
        "prefix": "rds-dbclusterparametergroup",
        "scope": "yaml"
    },
    "AWS::RDS::DBInstance": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::RDS::DBInstance",
            "  Properties:",
            "    AllocatedStorage: \"${2:String}\"",
            "    AllowMajorVersionUpgrade: ${3|false,true|}",
            "    AssociatedRoles:",
            "      AssociatedRoles",
            "    AutoMinorVersionUpgrade: ${5|false,true|}",
            "    AvailabilityZone: \"${6:String}\"",
            "    BackupRetentionPeriod: ${7:Number}",
            "    CACertificateIdentifier: \"${8:String}\"",
            "    CharacterSetName: \"${9:String}\"",
            "    CopyTagsToSnapshot: ${10|false,true|}",
            "    DBClusterIdentifier: \"${11:String}\"",
            "    DBInstanceClass: \"${12:String}\" # Required",
            "    DBInstanceIdentifier: \"${13:String}\"",
            "    DBName: \"${14:String}\"",
            "    DBParameterGroupName: \"${15:String}\"",
            "    DBSecurityGroups:",
            "      DBSecurityGroups",
            "    DBSnapshotIdentifier: \"${17:String}\"",
            "    DBSubnetGroupName: \"${18:String}\"",
            "    DeleteAutomatedBackups: ${19|false,true|}",
            "    DeletionProtection: ${20|false,true|}",
            "    Domain: \"${21:String}\"",
            "    DomainIAMRoleName: \"${22:String}\"",
            "    EnableCloudwatchLogsExports:",
            "      EnableCloudwatchLogsExports",
            "    EnableIAMDatabaseAuthentication: ${24|false,true|}",
            "    EnablePerformanceInsights: ${25|false,true|}",
            "    Engine: \"${26:String}\"",
            "    EngineVersion: \"${27:String}\"",
            "    Iops: ${28:Number}",
            "    KmsKeyId: \"${29:String}\"",
            "    LicenseModel: \"${30:String}\"",
            "    MasterUserPassword: \"${31:String}\"",
            "    MasterUsername: \"${32:String}\"",
            "    MaxAllocatedStorage: ${33:Number}",
            "    MonitoringInterval: ${34:Number}",
            "    MonitoringRoleArn: \"${35:String}\"",
            "    MultiAZ: ${36|false,true|}",
            "    OptionGroupName: \"${37:String}\"",
            "    PerformanceInsightsKMSKeyId: \"${38:String}\"",
            "    PerformanceInsightsRetentionPeriod: ${39:Number}",
            "    Port: \"${40:String}\"",
            "    PreferredBackupWindow: \"${41:String}\"",
            "    PreferredMaintenanceWindow: \"${42:String}\"",
            "    ProcessorFeatures:",
            "      ProcessorFeatures",
            "    PromotionTier: ${44:Number}",
            "    PubliclyAccessible: ${45|false,true|}",
            "    SourceDBInstanceIdentifier: \"${46:String}\"",
            "    SourceRegion: \"${47:String}\"",
            "    StorageEncrypted: ${48|false,true|}",
            "    StorageType: \"${49:String}\"",
            "    Tags:",
            "      Tags",
            "    Timezone: \"${51:String}\"",
            "    UseDefaultProcessorFeatures: ${52|false,true|}",
            "    VPCSecurityGroups:",
            "      VPCSecurityGroups"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html",
            "Attributes: ",
            "  Endpoint.Address",
            "  Endpoint.Port"
        ],
        "prefix": "rds-dbinstance",
        "scope": "yaml"
    },
    "AWS::RDS::DBParameterGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::RDS::DBParameterGroup",
            "  Properties:",
            "    Description: \"${2:String}\" # Required",
            "    Family: \"${3:String}\" # Required",
            "    Parameters:",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbparametergroup.html"
        ],
        "prefix": "rds-dbparametergroup",
        "scope": "yaml"
    },
    "AWS::RDS::DBProxy": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::RDS::DBProxy",
            "  Properties:",
            "    Auth: # Required",
            "      Auth",
            "    DBProxyName: \"${3:String}\" # Required",
            "    DebugLogging: ${4|false,true|}",
            "    EngineFamily: \"${5:String}\" # Required",
            "    IdleClientTimeout: ${6:Number}",
            "    RequireTLS: ${7|false,true|}",
            "    RoleArn: \"${8:String}\" # Required",
            "    Tags:",
            "      Tags",
            "    VpcSecurityGroupIds:",
            "      VpcSecurityGroupIds",
            "    VpcSubnetIds: # Required",
            "      VpcSubnetIds"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbproxy.html",
            "Attributes: ",
            "  DBProxyArn",
            "  Endpoint"
        ],
        "prefix": "rds-dbproxy",
        "scope": "yaml"
    },
    "AWS::RDS::DBProxyEndpoint": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::RDS::DBProxyEndpoint",
            "  Properties:",
            "    DBProxyEndpointName: \"${2:String}\" # Required",
            "    DBProxyName: \"${3:String}\" # Required",
            "    Tags:",
            "      Tags",
            "    TargetRole: \"${5:String}\"",
            "    VpcSecurityGroupIds:",
            "      VpcSecurityGroupIds",
            "    VpcSubnetIds: # Required",
            "      VpcSubnetIds"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbproxyendpoint.html",
            "Attributes: ",
            "  DBProxyEndpointArn",
            "  VpcId",
            "  Endpoint",
            "  IsDefault"
        ],
        "prefix": "rds-dbproxyendpoint",
        "scope": "yaml"
    },
    "AWS::RDS::DBProxyTargetGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::RDS::DBProxyTargetGroup",
            "  Properties:",
            "    ConnectionPoolConfigurationInfo:",
            "      ConnectionBorrowTimeout: ${2:Number}",
            "      InitQuery: \"${3:String}\"",
            "      MaxConnectionsPercent: ${4:Number}",
            "      MaxIdleConnectionsPercent: ${5:Number}",
            "      SessionPinningFilters:",
            "        -",
            "    DBClusterIdentifiers:",
            "      DBClusterIdentifiers",
            "    DBInstanceIdentifiers:",
            "      DBInstanceIdentifiers",
            "    DBProxyName: \"${5:String}\" # Required",
            "    TargetGroupName: \"${6:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbproxytargetgroup.html",
            "Attributes: ",
            "  TargetGroupArn"
        ],
        "prefix": "rds-dbproxytargetgroup",
        "scope": "yaml"
    },
    "AWS::RDS::DBSecurityGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::RDS::DBSecurityGroup",
            "  Properties:",
            "    DBSecurityGroupIngress: # Required",
            "      DBSecurityGroupIngress",
            "    EC2VpcId: \"${3:String}\"",
            "    GroupDescription: \"${4:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-security-group.html"
        ],
        "prefix": "rds-dbsecuritygroup",
        "scope": "yaml"
    },
    "AWS::RDS::DBSecurityGroupIngress": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::RDS::DBSecurityGroupIngress",
            "  Properties:",
            "    CIDRIP: \"${2:String}\"",
            "    DBSecurityGroupName: \"${3:String}\" # Required",
            "    EC2SecurityGroupId: \"${4:String}\"",
            "    EC2SecurityGroupName: \"${5:String}\"",
            "    EC2SecurityGroupOwnerId: \"${6:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-security-group-ingress.html"
        ],
        "prefix": "rds-dbsecuritygroupingress",
        "scope": "yaml"
    },
    "AWS::RDS::DBSubnetGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::RDS::DBSubnetGroup",
            "  Properties:",
            "    DBSubnetGroupDescription: \"${2:String}\" # Required",
            "    DBSubnetGroupName: \"${3:String}\"",
            "    SubnetIds: # Required",
            "      SubnetIds",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbsubnet-group.html"
        ],
        "prefix": "rds-dbsubnetgroup",
        "scope": "yaml"
    },
    "AWS::RDS::EventSubscription": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::RDS::EventSubscription",
            "  Properties:",
            "    Enabled: ${2|false,true|}",
            "    EventCategories:",
            "      EventCategories",
            "    SnsTopicArn: \"${4:String}\" # Required",
            "    SourceIds:",
            "      SourceIds",
            "    SourceType: \"${6:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-eventsubscription.html"
        ],
        "prefix": "rds-eventsubscription",
        "scope": "yaml"
    },
    "AWS::RDS::GlobalCluster": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::RDS::GlobalCluster",
            "  Properties:",
            "    DeletionProtection: ${2|false,true|}",
            "    Engine: \"${3:String}\"",
            "    EngineVersion: \"${4:String}\"",
            "    GlobalClusterIdentifier: \"${5:String}\"",
            "    SourceDBClusterIdentifier: \"${6:String}\"",
            "    StorageEncrypted: ${7|false,true|}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-globalcluster.html"
        ],
        "prefix": "rds-globalcluster",
        "scope": "yaml"
    },
    "AWS::RDS::OptionGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::RDS::OptionGroup",
            "  Properties:",
            "    EngineName: \"${2:String}\" # Required",
            "    MajorEngineVersion: \"${3:String}\" # Required",
            "    OptionConfigurations: # Required",
            "      OptionConfigurations",
            "    OptionGroupDescription: \"${5:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-optiongroup.html"
        ],
        "prefix": "rds-optiongroup",
        "scope": "yaml"
    },
    "AWS::RUM::AppMonitor": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::RUM::AppMonitor",
            "  Properties:",
            "    AppMonitorConfiguration:",
            "      AllowCookies: ${2|false,true|}",
            "      EnableXRay: ${3|false,true|}",
            "      ExcludedPages:",
            "        -",
            "      FavoritePages:",
            "        -",
            "      GuestRoleArn: \"${6:String}\"",
            "      IdentityPoolId: \"${7:String}\"",
            "      IncludedPages:",
            "        -",
            "      SessionSampleRate: ${9:Number}",
            "      Telemetries:",
            "        -",
            "    CwLogEnabled: ${3|false,true|}",
            "    Domain: \"${4:String}\" # Required",
            "    Name: \"${5:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rum-appmonitor.html"
        ],
        "prefix": "rum-appmonitor",
        "scope": "yaml"
    },
    "AWS::Redshift::Cluster": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Redshift::Cluster",
            "  Properties:",
            "    AllowVersionUpgrade: ${2|false,true|}",
            "    AquaConfigurationStatus: \"${3:String}\"",
            "    AutomatedSnapshotRetentionPeriod: ${4:Number}",
            "    AvailabilityZone: \"${5:String}\"",
            "    AvailabilityZoneRelocation: ${6|false,true|}",
            "    AvailabilityZoneRelocationStatus: \"${7:String}\"",
            "    Classic: ${8|false,true|}",
            "    ClusterIdentifier: \"${9:String}\"",
            "    ClusterParameterGroupName: \"${10:String}\"",
            "    ClusterSecurityGroups:",
            "      ClusterSecurityGroups",
            "    ClusterSubnetGroupName: \"${12:String}\"",
            "    ClusterType: \"${13:String}\" # Required",
            "    ClusterVersion: \"${14:String}\"",
            "    DBName: \"${15:String}\" # Required",
            "    DeferMaintenance: ${16|false,true|}",
            "    DeferMaintenanceDuration: ${17:Number}",
            "    DeferMaintenanceEndTime: \"${18:String}\"",
            "    DeferMaintenanceStartTime: \"${19:String}\"",
            "    DestinationRegion: \"${20:String}\"",
            "    ElasticIp: \"${21:String}\"",
            "    Encrypted: ${22|false,true|}",
            "    EnhancedVpcRouting: ${23|false,true|}",
            "    HsmClientCertificateIdentifier: \"${24:String}\"",
            "    HsmConfigurationIdentifier: \"${25:String}\"",
            "    IamRoles:",
            "      IamRoles",
            "    KmsKeyId: \"${27:String}\"",
            "    LoggingProperties:",
            "      BucketName: \"${28:String}\"",
            "      S3KeyPrefix: \"${29:String}\"",
            "    MaintenanceTrackName: \"${29:String}\"",
            "    ManualSnapshotRetentionPeriod: ${30:Number}",
            "    MasterUserPassword: \"${31:String}\" # Required",
            "    MasterUsername: \"${32:String}\" # Required",
            "    NodeType: \"${33:String}\" # Required",
            "    NumberOfNodes: ${34:Number}",
            "    OwnerAccount: \"${35:String}\"",
            "    Port: ${36:Number}",
            "    PreferredMaintenanceWindow: \"${37:String}\"",
            "    PubliclyAccessible: ${38|false,true|}",
            "    ResourceAction: \"${39:String}\"",
            "    RevisionTarget: \"${40:String}\"",
            "    RotateEncryptionKey: ${41|false,true|}",
            "    SnapshotClusterIdentifier: \"${42:String}\"",
            "    SnapshotCopyGrantName: \"${43:String}\"",
            "    SnapshotCopyManual: ${44|false,true|}",
            "    SnapshotCopyRetentionPeriod: ${45:Number}",
            "    SnapshotIdentifier: \"${46:String}\"",
            "    Tags:",
            "      Tags",
            "    VpcSecurityGroupIds:",
            "      VpcSecurityGroupIds"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html",
            "Attributes: ",
            "  Id",
            "  Endpoint.Port",
            "  Endpoint.Address",
            "  DeferMaintenanceIdentifier"
        ],
        "prefix": "redshift-cluster",
        "scope": "yaml"
    },
    "AWS::Redshift::ClusterParameterGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Redshift::ClusterParameterGroup",
            "  Properties:",
            "    Description: \"${2:String}\" # Required",
            "    ParameterGroupFamily: \"${3:String}\" # Required",
            "    Parameters:",
            "      Parameters",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clusterparametergroup.html"
        ],
        "prefix": "redshift-clusterparametergroup",
        "scope": "yaml"
    },
    "AWS::Redshift::ClusterSecurityGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Redshift::ClusterSecurityGroup",
            "  Properties:",
            "    Description: \"${2:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersecuritygroup.html"
        ],
        "prefix": "redshift-clustersecuritygroup",
        "scope": "yaml"
    },
    "AWS::Redshift::ClusterSecurityGroupIngress": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Redshift::ClusterSecurityGroupIngress",
            "  Properties:",
            "    CIDRIP: \"${2:String}\"",
            "    ClusterSecurityGroupName: \"${3:String}\" # Required",
            "    EC2SecurityGroupName: \"${4:String}\"",
            "    EC2SecurityGroupOwnerId: \"${5:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersecuritygroupingress.html"
        ],
        "prefix": "redshift-clustersecuritygroupingress",
        "scope": "yaml"
    },
    "AWS::Redshift::ClusterSubnetGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Redshift::ClusterSubnetGroup",
            "  Properties:",
            "    Description: \"${2:String}\" # Required",
            "    SubnetIds: # Required",
            "      SubnetIds",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersubnetgroup.html"
        ],
        "prefix": "redshift-clustersubnetgroup",
        "scope": "yaml"
    },
    "AWS::Redshift::EndpointAccess": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Redshift::EndpointAccess",
            "  Properties:",
            "    ClusterIdentifier: \"${2:String}\"",
            "    EndpointName: \"${3:String}\" # Required",
            "    ResourceOwner: \"${4:String}\"",
            "    SubnetGroupName: \"${5:String}\"",
            "    VpcSecurityGroupIds: # Required",
            "      VpcSecurityGroupIds"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointaccess.html",
            "Attributes: ",
            "  Address",
            "  VpcSecurityGroups",
            "  EndpointStatus",
            "  EndpointCreateTime",
            "  Port"
        ],
        "prefix": "redshift-endpointaccess",
        "scope": "yaml"
    },
    "AWS::Redshift::EndpointAuthorization": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Redshift::EndpointAuthorization",
            "  Properties:",
            "    Account: \"${2:String}\" # Required",
            "    ClusterIdentifier: \"${3:String}\" # Required",
            "    Force: ${4|false,true|}",
            "    VpcIds:",
            "      VpcIds"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointauthorization.html",
            "Attributes: ",
            "  Grantor",
            "  Grantee",
            "  AuthorizeTime",
            "  ClusterStatus",
            "  Status",
            "  AllowedAllVPCs",
            "  AllowedVPCs",
            "  EndpointCount"
        ],
        "prefix": "redshift-endpointauthorization",
        "scope": "yaml"
    },
    "AWS::Redshift::EventSubscription": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Redshift::EventSubscription",
            "  Properties:",
            "    Enabled: ${2|false,true|}",
            "    EventCategories:",
            "      EventCategories",
            "    Severity: \"${4:String}\"",
            "    SnsTopicArn: \"${5:String}\"",
            "    SourceIds:",
            "      SourceIds",
            "    SourceType: \"${7:String}\"",
            "    SubscriptionName: \"${8:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-eventsubscription.html",
            "Attributes: ",
            "  CustomerAwsId",
            "  CustSubscriptionId",
            "  Status",
            "  SubscriptionCreationTime",
            "  SourceIdsList",
            "  EventCategoriesList"
        ],
        "prefix": "redshift-eventsubscription",
        "scope": "yaml"
    },
    "AWS::Redshift::ScheduledAction": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Redshift::ScheduledAction",
            "  Properties:",
            "    Enable: ${2|false,true|}",
            "    EndTime: \"${3:String}\"",
            "    IamRole: \"${4:String}\"",
            "    Schedule: \"${5:String}\"",
            "    ScheduledActionDescription: \"${6:String}\"",
            "    ScheduledActionName: \"${7:String}\" # Required",
            "    StartTime: \"${8:String}\"",
            "    TargetAction:"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-scheduledaction.html",
            "Attributes: ",
            "  State",
            "  NextInvocations"
        ],
        "prefix": "redshift-scheduledaction",
        "scope": "yaml"
    },
    "AWS::RefactorSpaces::Application": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::RefactorSpaces::Application",
            "  Properties:",
            "    ApiGatewayProxy:",
            "      EndpointType: \"${2:String}\"",
            "      StageName: \"${3:String}\"",
            "    EnvironmentIdentifier: \"${3:String}\"",
            "    Name: \"${4:String}\"",
            "    ProxyType: \"${5:String}\"",
            "    Tags:",
            "      Tags",
            "    VpcId: \"${7:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-application.html",
            "Attributes: ",
            "  Arn",
            "  ApiGatewayId",
            "  VpcLinkId",
            "  NlbArn",
            "  NlbName",
            "  ApplicationIdentifier",
            "  StageName",
            "  ProxyUrl"
        ],
        "prefix": "refactorspaces-application",
        "scope": "yaml"
    },
    "AWS::RefactorSpaces::Environment": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::RefactorSpaces::Environment",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    Name: \"${3:String}\"",
            "    NetworkFabricType: \"${4:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-environment.html",
            "Attributes: ",
            "  EnvironmentIdentifier",
            "  Arn",
            "  TransitGatewayId"
        ],
        "prefix": "refactorspaces-environment",
        "scope": "yaml"
    },
    "AWS::RefactorSpaces::Route": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::RefactorSpaces::Route",
            "  Properties:",
            "    ApplicationIdentifier: \"${2:String}\" # Required",
            "    EnvironmentIdentifier: \"${3:String}\" # Required",
            "    RouteType: \"${4:String}\"",
            "    ServiceIdentifier: \"${5:String}\" # Required",
            "    Tags:",
            "      Tags",
            "    UriPathRoute:",
            "      ActivationState: \"${7:String}\"",
            "      IncludeChildPaths: ${8|false,true|}",
            "      Methods:",
            "        -",
            "      SourcePath: \"${10:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-route.html",
            "Attributes: ",
            "  PathResourceToId",
            "  Arn",
            "  RouteIdentifier"
        ],
        "prefix": "refactorspaces-route",
        "scope": "yaml"
    },
    "AWS::RefactorSpaces::Service": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::RefactorSpaces::Service",
            "  Properties:",
            "    ApplicationIdentifier: \"${2:String}\" # Required",
            "    Description: \"${3:String}\"",
            "    EndpointType: \"${4:String}\"",
            "    EnvironmentIdentifier: \"${5:String}\" # Required",
            "    LambdaEndpoint:",
            "      Arn: \"${6:String}\"",
            "    Name: \"${7:String}\"",
            "    Tags:",
            "      Tags",
            "    UrlEndpoint:",
            "      HealthUrl: \"${9:String}\"",
            "      Url: \"${10:String}\"",
            "    VpcId: \"${10:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-service.html",
            "Attributes: ",
            "  Arn",
            "  ServiceIdentifier"
        ],
        "prefix": "refactorspaces-service",
        "scope": "yaml"
    },
    "AWS::Rekognition::Collection": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Rekognition::Collection",
            "  Properties:",
            "    CollectionId: \"${2:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rekognition-collection.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "rekognition-collection",
        "scope": "yaml"
    },
    "AWS::Rekognition::Project": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Rekognition::Project",
            "  Properties:",
            "    ProjectName: \"${2:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rekognition-project.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "rekognition-project",
        "scope": "yaml"
    },
    "AWS::Rekognition::StreamProcessor": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Rekognition::StreamProcessor",
            "  Properties:",
            "    BoundingBoxRegionsOfInterest:",
            "      BoundingBoxRegionsOfInterest",
            "    ConnectedHomeSettings:",
            "      Labels:",
            "        -",
            "      MinConfidence: ${4:Number}",
            "    DataSharingPreference:",
            "      OptIn: ${4|false,true|}",
            "    FaceSearchSettings:",
            "      CollectionId: \"${5:String}\"",
            "      FaceMatchThreshold: ${6:Number}",
            "    KinesisDataStream:",
            "      Arn: \"${6:String}\"",
            "    KinesisVideoStream:",
            "      Arn: \"${7:String}\"",
            "    KmsKeyId: \"${8:String}\"",
            "    Name: \"${9:String}\"",
            "    NotificationChannel:",
            "      Arn: \"${10:String}\"",
            "    PolygonRegionsOfInterest:",
            "      PolygonRegionsOfInterest",
            "    RoleArn: \"${12:String}\" # Required",
            "    S3Destination:",
            "      BucketName: \"${13:String}\"",
            "      ObjectKeyPrefix: \"${14:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rekognition-streamprocessor.html",
            "Attributes: ",
            "  Arn",
            "  Status",
            "  StatusMessage"
        ],
        "prefix": "rekognition-streamprocessor",
        "scope": "yaml"
    },
    "AWS::ResilienceHub::App": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ResilienceHub::App",
            "  Properties:",
            "    AppTemplateBody: \"${2:String}\" # Required",
            "    Description: \"${3:String}\"",
            "    Name: \"${4:String}\" # Required",
            "    ResiliencyPolicyArn: \"${5:String}\"",
            "    ResourceMappings: # Required",
            "      ResourceMappings",
            "    Tags:"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resiliencehub-app.html",
            "Attributes: ",
            "  AppArn"
        ],
        "prefix": "resiliencehub-app",
        "scope": "yaml"
    },
    "AWS::ResilienceHub::ResiliencyPolicy": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ResilienceHub::ResiliencyPolicy",
            "  Properties:",
            "    DataLocationConstraint: \"${2:String}\"",
            "    Policy:",
            "    PolicyDescription: \"${4:String}\"",
            "    PolicyName: \"${5:String}\" # Required",
            "    Tags:",
            "    Tier: \"${7:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resiliencehub-resiliencypolicy.html",
            "Attributes: ",
            "  PolicyArn"
        ],
        "prefix": "resiliencehub-resiliencypolicy",
        "scope": "yaml"
    },
    "AWS::ResourceGroups::Group": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ResourceGroups::Group",
            "  Properties:",
            "    Configuration:",
            "      Configuration",
            "    Description: \"${3:String}\"",
            "    Name: \"${4:String}\" # Required",
            "    ResourceQuery:",
            "      Type: \"${6:String}\"",
            "    Resources:",
            "      Resources",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resourcegroups-group.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "resourcegroups-group",
        "scope": "yaml"
    },
    "AWS::RoboMaker::Fleet": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::RoboMaker::Fleet",
            "  Properties:",
            "    Name: \"${2:String}\"",
            "    Tags:"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-fleet.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "robomaker-fleet",
        "scope": "yaml"
    },
    "AWS::RoboMaker::Robot": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::RoboMaker::Robot",
            "  Properties:",
            "    Architecture: \"${2:String}\" # Required",
            "    Fleet: \"${3:String}\"",
            "    GreengrassGroupId: \"${4:String}\" # Required",
            "    Name: \"${5:String}\"",
            "    Tags:"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robot.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "robomaker-robot",
        "scope": "yaml"
    },
    "AWS::RoboMaker::RobotApplication": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::RoboMaker::RobotApplication",
            "  Properties:",
            "    CurrentRevisionId: \"${2:String}\"",
            "    Environment: \"${3:String}\"",
            "    Name: \"${4:String}\"",
            "    RobotSoftwareSuite:",
            "      Name: \"${5:String}\"",
            "      Version: \"${6:String}\"",
            "    Sources:",
            "      Sources",
            "    Tags:"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robotapplication.html",
            "Attributes: ",
            "  CurrentRevisionId",
            "  Arn"
        ],
        "prefix": "robomaker-robotapplication",
        "scope": "yaml"
    },
    "AWS::RoboMaker::RobotApplicationVersion": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::RoboMaker::RobotApplicationVersion",
            "  Properties:",
            "    Application: \"${2:String}\" # Required",
            "    CurrentRevisionId: \"${3:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robotapplicationversion.html",
            "Attributes: ",
            "  ApplicationVersion",
            "  Arn"
        ],
        "prefix": "robomaker-robotapplicationversion",
        "scope": "yaml"
    },
    "AWS::RoboMaker::SimulationApplication": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::RoboMaker::SimulationApplication",
            "  Properties:",
            "    CurrentRevisionId: \"${2:String}\"",
            "    Environment: \"${3:String}\"",
            "    Name: \"${4:String}\"",
            "    RenderingEngine:",
            "      Name: \"${5:String}\"",
            "      Version: \"${6:String}\"",
            "    RobotSoftwareSuite:",
            "      Name: \"${6:String}\"",
            "      Version: \"${7:String}\"",
            "    SimulationSoftwareSuite:",
            "      Name: \"${7:String}\"",
            "      Version: \"${8:String}\"",
            "    Sources:",
            "      Sources",
            "    Tags:"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-simulationapplication.html",
            "Attributes: ",
            "  Arn",
            "  CurrentRevisionId"
        ],
        "prefix": "robomaker-simulationapplication",
        "scope": "yaml"
    },
    "AWS::RoboMaker::SimulationApplicationVersion": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::RoboMaker::SimulationApplicationVersion",
            "  Properties:",
            "    Application: \"${2:String}\" # Required",
            "    CurrentRevisionId: \"${3:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-simulationapplicationversion.html",
            "Attributes: ",
            "  ApplicationVersion",
            "  Arn"
        ],
        "prefix": "robomaker-simulationapplicationversion",
        "scope": "yaml"
    },
    "AWS::Route53::DNSSEC": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Route53::DNSSEC",
            "  Properties:",
            "    HostedZoneId: \"${2:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-dnssec.html"
        ],
        "prefix": "route53-dnssec",
        "scope": "yaml"
    },
    "AWS::Route53::HealthCheck": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Route53::HealthCheck",
            "  Properties:",
            "    HealthCheckConfig: ${2:JSON} # Required",
            "    HealthCheckTags:",
            "      HealthCheckTags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-healthcheck.html",
            "Attributes: ",
            "  HealthCheckId"
        ],
        "prefix": "route53-healthcheck",
        "scope": "yaml"
    },
    "AWS::Route53::HostedZone": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Route53::HostedZone",
            "  Properties:",
            "    HostedZoneConfig:",
            "      Comment: \"${2:String}\"",
            "    HostedZoneTags:",
            "      HostedZoneTags",
            "    Name: \"${4:String}\"",
            "    QueryLoggingConfig:",
            "      CloudWatchLogsLogGroupArn: \"${5:String}\"",
            "    VPCs:",
            "      VPCs"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-hostedzone.html",
            "Attributes: ",
            "  Id",
            "  NameServers"
        ],
        "prefix": "route53-hostedzone",
        "scope": "yaml"
    },
    "AWS::Route53::KeySigningKey": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Route53::KeySigningKey",
            "  Properties:",
            "    HostedZoneId: \"${2:String}\" # Required",
            "    KeyManagementServiceArn: \"${3:String}\" # Required",
            "    Name: \"${4:String}\" # Required",
            "    Status: \"${5:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-keysigningkey.html"
        ],
        "prefix": "route53-keysigningkey",
        "scope": "yaml"
    },
    "AWS::Route53::RecordSet": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Route53::RecordSet",
            "  Properties:",
            "    AliasTarget:",
            "      DNSName: \"${2:String}\"",
            "      EvaluateTargetHealth: ${3|false,true|}",
            "      HostedZoneId: \"${4:String}\"",
            "    Comment: \"${3:String}\"",
            "    Failover: \"${4:String}\"",
            "    GeoLocation:",
            "      ContinentCode: \"${5:String}\"",
            "      CountryCode: \"${6:String}\"",
            "      SubdivisionCode: \"${7:String}\"",
            "    HealthCheckId: \"${6:String}\"",
            "    HostedZoneId: \"${7:String}\"",
            "    HostedZoneName: \"${8:String}\"",
            "    MultiValueAnswer: ${9|false,true|}",
            "    Name: \"${10:String}\" # Required",
            "    Region: \"${11:String}\"",
            "    ResourceRecords:",
            "      ResourceRecords",
            "    SetIdentifier: \"${13:String}\"",
            "    TTL: \"${14:String}\"",
            "    Type: \"${15:String}\" # Required",
            "    Weight: ${16:Number}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html"
        ],
        "prefix": "route53-recordset",
        "scope": "yaml"
    },
    "AWS::Route53::RecordSetGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Route53::RecordSetGroup",
            "  Properties:",
            "    Comment: \"${2:String}\"",
            "    HostedZoneId: \"${3:String}\"",
            "    HostedZoneName: \"${4:String}\"",
            "    RecordSets:",
            "      RecordSets"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-recordsetgroup.html"
        ],
        "prefix": "route53-recordsetgroup",
        "scope": "yaml"
    },
    "AWS::Route53RecoveryControl::Cluster": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Route53RecoveryControl::Cluster",
            "  Properties:",
            "    Name: \"${2:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoverycontrol-cluster.html",
            "Attributes: ",
            "  ClusterArn",
            "  Status",
            "  ClusterEndpoints"
        ],
        "prefix": "route53recoverycontrol-cluster",
        "scope": "yaml"
    },
    "AWS::Route53RecoveryControl::ControlPanel": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Route53RecoveryControl::ControlPanel",
            "  Properties:",
            "    ClusterArn: \"${2:String}\"",
            "    Name: \"${3:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoverycontrol-controlpanel.html",
            "Attributes: ",
            "  ControlPanelArn",
            "  Status",
            "  DefaultControlPanel",
            "  RoutingControlCount"
        ],
        "prefix": "route53recoverycontrol-controlpanel",
        "scope": "yaml"
    },
    "AWS::Route53RecoveryControl::RoutingControl": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Route53RecoveryControl::RoutingControl",
            "  Properties:",
            "    ClusterArn: \"${2:String}\"",
            "    ControlPanelArn: \"${3:String}\"",
            "    Name: \"${4:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoverycontrol-routingcontrol.html",
            "Attributes: ",
            "  RoutingControlArn",
            "  Status"
        ],
        "prefix": "route53recoverycontrol-routingcontrol",
        "scope": "yaml"
    },
    "AWS::Route53RecoveryControl::SafetyRule": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Route53RecoveryControl::SafetyRule",
            "  Properties:",
            "    AssertionRule:",
            "      AssertedControls:",
            "        -",
            "      WaitPeriodMs: ${3:Number}",
            "    ControlPanelArn: \"${3:String}\" # Required",
            "    GatingRule:",
            "      GatingControls:",
            "        -",
            "      TargetControls:",
            "        -",
            "      WaitPeriodMs: ${6:Number}",
            "    Name: \"${5:String}\" # Required",
            "    RuleConfig:",
            "      Inverted: ${6|false,true|}",
            "      Threshold: ${7:Number}",
            "      Type: \"${8:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoverycontrol-safetyrule.html",
            "Attributes: ",
            "  SafetyRuleArn",
            "  Status"
        ],
        "prefix": "route53recoverycontrol-safetyrule",
        "scope": "yaml"
    },
    "AWS::Route53RecoveryReadiness::Cell": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Route53RecoveryReadiness::Cell",
            "  Properties:",
            "    CellName: \"${2:String}\" # Required",
            "    Cells:",
            "      Cells",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-cell.html",
            "Attributes: ",
            "  CellArn",
            "  ParentReadinessScopes"
        ],
        "prefix": "route53recoveryreadiness-cell",
        "scope": "yaml"
    },
    "AWS::Route53RecoveryReadiness::ReadinessCheck": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Route53RecoveryReadiness::ReadinessCheck",
            "  Properties:",
            "    ReadinessCheckName: \"${2:String}\" # Required",
            "    ResourceSetName: \"${3:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-readinesscheck.html",
            "Attributes: ",
            "  ReadinessCheckArn"
        ],
        "prefix": "route53recoveryreadiness-readinesscheck",
        "scope": "yaml"
    },
    "AWS::Route53RecoveryReadiness::RecoveryGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Route53RecoveryReadiness::RecoveryGroup",
            "  Properties:",
            "    Cells:",
            "      Cells",
            "    RecoveryGroupName: \"${3:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-recoverygroup.html",
            "Attributes: ",
            "  RecoveryGroupArn"
        ],
        "prefix": "route53recoveryreadiness-recoverygroup",
        "scope": "yaml"
    },
    "AWS::Route53RecoveryReadiness::ResourceSet": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Route53RecoveryReadiness::ResourceSet",
            "  Properties:",
            "    ResourceSetName: \"${2:String}\" # Required",
            "    ResourceSetType: \"${3:String}\" # Required",
            "    Resources: # Required",
            "      Resources",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-resourceset.html",
            "Attributes: ",
            "  ResourceSetArn"
        ],
        "prefix": "route53recoveryreadiness-resourceset",
        "scope": "yaml"
    },
    "AWS::Route53Resolver::FirewallDomainList": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Route53Resolver::FirewallDomainList",
            "  Properties:",
            "    DomainFileUrl: \"${2:String}\"",
            "    Domains:",
            "      Domains",
            "    Name: \"${4:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewalldomainlist.html",
            "Attributes: ",
            "  Id",
            "  Arn",
            "  DomainCount",
            "  Status",
            "  StatusMessage",
            "  ManagedOwnerName",
            "  CreatorRequestId",
            "  CreationTime",
            "  ModificationTime"
        ],
        "prefix": "route53resolver-firewalldomainlist",
        "scope": "yaml"
    },
    "AWS::Route53Resolver::FirewallRuleGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Route53Resolver::FirewallRuleGroup",
            "  Properties:",
            "    FirewallRules:",
            "      FirewallRules",
            "    Name: \"${3:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewallrulegroup.html",
            "Attributes: ",
            "  Id",
            "  Arn",
            "  RuleCount",
            "  Status",
            "  StatusMessage",
            "  OwnerId",
            "  ShareStatus",
            "  CreatorRequestId",
            "  CreationTime",
            "  ModificationTime"
        ],
        "prefix": "route53resolver-firewallrulegroup",
        "scope": "yaml"
    },
    "AWS::Route53Resolver::FirewallRuleGroupAssociation": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Route53Resolver::FirewallRuleGroupAssociation",
            "  Properties:",
            "    FirewallRuleGroupId: \"${2:String}\" # Required",
            "    MutationProtection: \"${3:String}\"",
            "    Name: \"${4:String}\"",
            "    Priority: ${5:Number} # Required",
            "    Tags:",
            "      Tags",
            "    VpcId: \"${7:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewallrulegroupassociation.html",
            "Attributes: ",
            "  Id",
            "  Arn",
            "  ManagedOwnerName",
            "  Status",
            "  StatusMessage",
            "  CreatorRequestId",
            "  CreationTime",
            "  ModificationTime"
        ],
        "prefix": "route53resolver-firewallrulegroupassociation",
        "scope": "yaml"
    },
    "AWS::Route53Resolver::ResolverConfig": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Route53Resolver::ResolverConfig",
            "  Properties:",
            "    AutodefinedReverseFlag: \"${2:String}\" # Required",
            "    ResourceId: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverconfig.html",
            "Attributes: ",
            "  Id",
            "  OwnerId",
            "  AutodefinedReverse"
        ],
        "prefix": "route53resolver-resolverconfig",
        "scope": "yaml"
    },
    "AWS::Route53Resolver::ResolverDNSSECConfig": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Route53Resolver::ResolverDNSSECConfig",
            "  Properties:",
            "    ResourceId: \"${2:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverdnssecconfig.html",
            "Attributes: ",
            "  Id",
            "  OwnerId",
            "  ValidationStatus"
        ],
        "prefix": "route53resolver-resolverdnssecconfig",
        "scope": "yaml"
    },
    "AWS::Route53Resolver::ResolverEndpoint": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Route53Resolver::ResolverEndpoint",
            "  Properties:",
            "    Direction: \"${2:String}\" # Required",
            "    IpAddresses: # Required",
            "      IpAddresses",
            "    Name: \"${4:String}\"",
            "    SecurityGroupIds: # Required",
            "      SecurityGroupIds",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html",
            "Attributes: ",
            "  ResolverEndpointId",
            "  IpAddressCount",
            "  Arn",
            "  Direction",
            "  HostVPCId",
            "  Name"
        ],
        "prefix": "route53resolver-resolverendpoint",
        "scope": "yaml"
    },
    "AWS::Route53Resolver::ResolverQueryLoggingConfig": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Route53Resolver::ResolverQueryLoggingConfig",
            "  Properties:",
            "    DestinationArn: \"${2:String}\"",
            "    Name: \"${3:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfig.html",
            "Attributes: ",
            "  Id",
            "  OwnerId",
            "  Status",
            "  ShareStatus",
            "  AssociationCount",
            "  Arn",
            "  CreatorRequestId",
            "  CreationTime"
        ],
        "prefix": "route53resolver-resolverqueryloggingconfig",
        "scope": "yaml"
    },
    "AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation",
            "  Properties:",
            "    ResolverQueryLogConfigId: \"${2:String}\"",
            "    ResourceId: \"${3:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfigassociation.html",
            "Attributes: ",
            "  Id",
            "  Status",
            "  Error",
            "  ErrorMessage",
            "  CreationTime"
        ],
        "prefix": "route53resolver-resolverqueryloggingconfigassociation",
        "scope": "yaml"
    },
    "AWS::Route53Resolver::ResolverRule": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Route53Resolver::ResolverRule",
            "  Properties:",
            "    DomainName: \"${2:String}\" # Required",
            "    Name: \"${3:String}\"",
            "    ResolverEndpointId: \"${4:String}\"",
            "    RuleType: \"${5:String}\" # Required",
            "    Tags:",
            "      Tags",
            "    TargetIps:",
            "      TargetIps"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html",
            "Attributes: ",
            "  ResolverEndpointId",
            "  DomainName",
            "  Name",
            "  TargetIps",
            "  Arn",
            "  ResolverRuleId"
        ],
        "prefix": "route53resolver-resolverrule",
        "scope": "yaml"
    },
    "AWS::Route53Resolver::ResolverRuleAssociation": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Route53Resolver::ResolverRuleAssociation",
            "  Properties:",
            "    Name: \"${2:String}\"",
            "    ResolverRuleId: \"${3:String}\" # Required",
            "    VPCId: \"${4:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverruleassociation.html",
            "Attributes: ",
            "  VPCId",
            "  ResolverRuleId",
            "  ResolverRuleAssociationId",
            "  Name"
        ],
        "prefix": "route53resolver-resolverruleassociation",
        "scope": "yaml"
    },
    "AWS::S3::AccessPoint": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::S3::AccessPoint",
            "  Properties:",
            "    Bucket: \"${2:String}\" # Required",
            "    Name: \"${3:String}\"",
            "    Policy: ${4:JSON}",
            "    PolicyStatus: ${5:JSON}",
            "    PublicAccessBlockConfiguration:",
            "      BlockPublicAcls: ${6|false,true|}",
            "      BlockPublicPolicy: ${7|false,true|}",
            "      IgnorePublicAcls: ${8|false,true|}",
            "      RestrictPublicBuckets: ${9|false,true|}",
            "    VpcConfiguration:",
            "      VpcId: \"${7:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html",
            "Attributes: ",
            "  Name",
            "  Alias",
            "  NetworkOrigin",
            "  Arn"
        ],
        "prefix": "s3-accesspoint",
        "scope": "yaml"
    },
    "AWS::S3::Bucket": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::S3::Bucket",
            "  Properties:",
            "    AccelerateConfiguration:",
            "      AccelerationStatus: \"${2:String}\"",
            "    AccessControl: \"${3:String}\"",
            "    AnalyticsConfigurations:",
            "      AnalyticsConfigurations",
            "    BucketEncryption:",
            "      ServerSideEncryptionConfiguration:",
            "        -",
            "    BucketName: \"${6:String}\"",
            "    CorsConfiguration:",
            "      CorsRules:",
            "        -",
            "    IntelligentTieringConfigurations:",
            "      IntelligentTieringConfigurations",
            "    InventoryConfigurations:",
            "      InventoryConfigurations",
            "    LifecycleConfiguration:",
            "      Rules:",
            "        -",
            "    LoggingConfiguration:",
            "      DestinationBucketName: \"${11:String}\"",
            "      LogFilePrefix: \"${12:String}\"",
            "    MetricsConfigurations:",
            "      MetricsConfigurations",
            "    NotificationConfiguration:",
            "      LambdaConfigurations:",
            "        -",
            "      QueueConfigurations:",
            "        -",
            "      TopicConfigurations:",
            "        -",
            "    ObjectLockConfiguration:",
            "      ObjectLockEnabled: \"${14:String}\"",
            "    ObjectLockEnabled: ${15|false,true|}",
            "    OwnershipControls:",
            "      Rules:",
            "        -",
            "    PublicAccessBlockConfiguration:",
            "      BlockPublicAcls: ${17|false,true|}",
            "      BlockPublicPolicy: ${18|false,true|}",
            "      IgnorePublicAcls: ${19|false,true|}",
            "      RestrictPublicBuckets: ${20|false,true|}",
            "    ReplicationConfiguration:",
            "      Role: \"${18:String}\"",
            "      Rules:",
            "        -",
            "    Tags:",
            "      Tags",
            "    VersioningConfiguration:",
            "      Status: \"${20:String}\"",
            "    WebsiteConfiguration:",
            "      ErrorDocument: \"${21:String}\"",
            "      IndexDocument: \"${22:String}\"",
            "      RoutingRules:",
            "        -"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html",
            "Attributes: ",
            "  Arn",
            "  DomainName",
            "  DualStackDomainName",
            "  RegionalDomainName",
            "  WebsiteURL"
        ],
        "prefix": "s3-bucket",
        "scope": "yaml"
    },
    "AWS::S3::BucketPolicy": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::S3::BucketPolicy",
            "  Properties:",
            "    Bucket: \"${2:String}\" # Required",
            "    PolicyDocument: ${3:JSON} # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html"
        ],
        "prefix": "s3-bucketpolicy",
        "scope": "yaml"
    },
    "AWS::S3::MultiRegionAccessPoint": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::S3::MultiRegionAccessPoint",
            "  Properties:",
            "    Name: \"${2:String}\"",
            "    PublicAccessBlockConfiguration:",
            "      BlockPublicAcls: ${3|false,true|}",
            "      BlockPublicPolicy: ${4|false,true|}",
            "      IgnorePublicAcls: ${5|false,true|}",
            "      RestrictPublicBuckets: ${6|false,true|}",
            "    Regions: # Required",
            "      Regions"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-multiregionaccesspoint.html",
            "Attributes: ",
            "  Alias",
            "  CreatedAt"
        ],
        "prefix": "s3-multiregionaccesspoint",
        "scope": "yaml"
    },
    "AWS::S3::MultiRegionAccessPointPolicy": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::S3::MultiRegionAccessPointPolicy",
            "  Properties:",
            "    MrapName: \"${2:String}\" # Required",
            "    Policy: ${3:JSON} # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-multiregionaccesspointpolicy.html"
        ],
        "prefix": "s3-multiregionaccesspointpolicy",
        "scope": "yaml"
    },
    "AWS::S3::StorageLens": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::S3::StorageLens",
            "  Properties:",
            "    StorageLensConfiguration:",
            "      Id: \"${6:String}\"",
            "      IsEnabled: ${8|false,true|}",
            "      StorageLensArn: \"${9:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-storagelens.html",
            "Attributes: ",
            "  StorageLensConfiguration.StorageLensArn"
        ],
        "prefix": "s3-storagelens",
        "scope": "yaml"
    },
    "AWS::S3ObjectLambda::AccessPoint": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::S3ObjectLambda::AccessPoint",
            "  Properties:",
            "    Name: \"${2:String}\"",
            "    ObjectLambdaConfiguration:",
            "      AllowedFeatures:",
            "        -",
            "      CloudWatchMetricsEnabled: ${4|false,true|}",
            "      SupportingAccessPoint: \"${5:String}\"",
            "      TransformationConfigurations:",
            "        -"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3objectlambda-accesspoint.html",
            "Attributes: ",
            "  Arn",
            "  CreationDate"
        ],
        "prefix": "s3objectlambda-accesspoint",
        "scope": "yaml"
    },
    "AWS::S3ObjectLambda::AccessPointPolicy": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::S3ObjectLambda::AccessPointPolicy",
            "  Properties:",
            "    ObjectLambdaAccessPoint: \"${2:String}\" # Required",
            "    PolicyDocument: ${3:JSON} # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3objectlambda-accesspointpolicy.html"
        ],
        "prefix": "s3objectlambda-accesspointpolicy",
        "scope": "yaml"
    },
    "AWS::S3Outposts::AccessPoint": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::S3Outposts::AccessPoint",
            "  Properties:",
            "    Bucket: \"${2:String}\" # Required",
            "    Name: \"${3:String}\" # Required",
            "    Policy: ${4:JSON}",
            "    VpcConfiguration:",
            "      VpcId: \"${5:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3outposts-accesspoint.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "s3outposts-accesspoint",
        "scope": "yaml"
    },
    "AWS::S3Outposts::Bucket": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::S3Outposts::Bucket",
            "  Properties:",
            "    BucketName: \"${2:String}\" # Required",
            "    LifecycleConfiguration:",
            "      Rules:",
            "        -",
            "    OutpostId: \"${4:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3outposts-bucket.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "s3outposts-bucket",
        "scope": "yaml"
    },
    "AWS::S3Outposts::BucketPolicy": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::S3Outposts::BucketPolicy",
            "  Properties:",
            "    Bucket: \"${2:String}\" # Required",
            "    PolicyDocument: ${3:JSON} # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3outposts-bucketpolicy.html"
        ],
        "prefix": "s3outposts-bucketpolicy",
        "scope": "yaml"
    },
    "AWS::S3Outposts::Endpoint": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::S3Outposts::Endpoint",
            "  Properties:",
            "    AccessType: \"${2:String}\"",
            "    CustomerOwnedIpv4Pool: \"${3:String}\"",
            "    OutpostId: \"${4:String}\" # Required",
            "    SecurityGroupId: \"${5:String}\" # Required",
            "    SubnetId: \"${6:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3outposts-endpoint.html",
            "Attributes: ",
            "  Arn",
            "  CidrBlock",
            "  CreationTime",
            "  Id",
            "  NetworkInterfaces",
            "  Status"
        ],
        "prefix": "s3outposts-endpoint",
        "scope": "yaml"
    },
    "AWS::SDB::Domain": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SDB::Domain",
            "  Properties:",
            "    Description: \"${2:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-simpledb.html"
        ],
        "prefix": "sdb-domain",
        "scope": "yaml"
    },
    "AWS::SES::ConfigurationSet": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SES::ConfigurationSet",
            "  Properties:",
            "    Name: \"${2:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-configurationset.html"
        ],
        "prefix": "ses-configurationset",
        "scope": "yaml"
    },
    "AWS::SES::ConfigurationSetEventDestination": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SES::ConfigurationSetEventDestination",
            "  Properties:",
            "    ConfigurationSetName: \"${2:String}\" # Required",
            "    EventDestination:",
            "      Enabled: ${4|false,true|}",
            "      MatchingEventTypes:",
            "        -",
            "      Name: \"${7:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-configurationseteventdestination.html",
            "Attributes: ",
            "  Id"
        ],
        "prefix": "ses-configurationseteventdestination",
        "scope": "yaml"
    },
    "AWS::SES::ContactList": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SES::ContactList",
            "  Properties:",
            "    ContactListName: \"${2:String}\"",
            "    Description: \"${3:String}\"",
            "    Tags:",
            "      Tags",
            "    Topics:",
            "      Topics"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-contactlist.html"
        ],
        "prefix": "ses-contactlist",
        "scope": "yaml"
    },
    "AWS::SES::ReceiptFilter": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SES::ReceiptFilter",
            "  Properties:",
            "    Filter:",
            "      Name: \"${3:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-receiptfilter.html"
        ],
        "prefix": "ses-receiptfilter",
        "scope": "yaml"
    },
    "AWS::SES::ReceiptRule": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SES::ReceiptRule",
            "  Properties:",
            "    After: \"${2:String}\"",
            "    Rule:",
            "      Actions:",
            "        -",
            "      Enabled: ${4|false,true|}",
            "      Name: \"${5:String}\"",
            "      Recipients:",
            "        -",
            "      ScanEnabled: ${7|false,true|}",
            "      TlsPolicy: \"${8:String}\"",
            "    RuleSetName: \"${4:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-receiptrule.html"
        ],
        "prefix": "ses-receiptrule",
        "scope": "yaml"
    },
    "AWS::SES::ReceiptRuleSet": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SES::ReceiptRuleSet",
            "  Properties:",
            "    RuleSetName: \"${2:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-receiptruleset.html"
        ],
        "prefix": "ses-receiptruleset",
        "scope": "yaml"
    },
    "AWS::SES::Template": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SES::Template",
            "  Properties:",
            "    Template:",
            "      HtmlPart: \"${2:String}\"",
            "      SubjectPart: \"${3:String}\"",
            "      TemplateName: \"${4:String}\"",
            "      TextPart: \"${5:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-template.html",
            "Attributes: ",
            "  Id"
        ],
        "prefix": "ses-template",
        "scope": "yaml"
    },
    "AWS::SNS::Subscription": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SNS::Subscription",
            "  Properties:",
            "    DeliveryPolicy: ${2:JSON}",
            "    Endpoint: \"${3:String}\"",
            "    FilterPolicy: ${4:JSON}",
            "    Protocol: \"${5:String}\" # Required",
            "    RawMessageDelivery: ${6|false,true|}",
            "    RedrivePolicy: ${7:JSON}",
            "    Region: \"${8:String}\"",
            "    SubscriptionRoleArn: \"${9:String}\"",
            "    TopicArn: \"${10:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-subscription.html"
        ],
        "prefix": "sns-subscription",
        "scope": "yaml"
    },
    "AWS::SNS::Topic": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SNS::Topic",
            "  Properties:",
            "    ContentBasedDeduplication: ${2|false,true|}",
            "    DisplayName: \"${3:String}\"",
            "    FifoTopic: ${4|false,true|}",
            "    KmsMasterKeyId: \"${5:String}\"",
            "    Subscription:",
            "      Subscription",
            "    Tags:",
            "      Tags",
            "    TopicName: \"${8:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-topic.html",
            "Attributes: ",
            "  TopicName"
        ],
        "prefix": "sns-topic",
        "scope": "yaml"
    },
    "AWS::SNS::TopicPolicy": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SNS::TopicPolicy",
            "  Properties:",
            "    PolicyDocument: ${2:JSON} # Required",
            "    Topics: # Required",
            "      Topics"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-policy.html"
        ],
        "prefix": "sns-topicpolicy",
        "scope": "yaml"
    },
    "AWS::SQS::Queue": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SQS::Queue",
            "  Properties:",
            "    ContentBasedDeduplication: ${2|false,true|}",
            "    DeduplicationScope: \"${3:String}\"",
            "    DelaySeconds: ${4:Number}",
            "    FifoQueue: ${5|false,true|}",
            "    FifoThroughputLimit: \"${6:String}\"",
            "    KmsDataKeyReusePeriodSeconds: ${7:Number}",
            "    KmsMasterKeyId: \"${8:String}\"",
            "    MaximumMessageSize: ${9:Number}",
            "    MessageRetentionPeriod: ${10:Number}",
            "    QueueName: \"${11:String}\"",
            "    ReceiveMessageWaitTimeSeconds: ${12:Number}",
            "    RedriveAllowPolicy: ${13:JSON}",
            "    RedrivePolicy: ${14:JSON}",
            "    SqsManagedSseEnabled: ${15|false,true|}",
            "    Tags:",
            "      Tags",
            "    VisibilityTimeout: ${17:Number}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html",
            "Attributes: ",
            "  QueueUrl",
            "  Arn",
            "  QueueName"
        ],
        "prefix": "sqs-queue",
        "scope": "yaml"
    },
    "AWS::SQS::QueuePolicy": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SQS::QueuePolicy",
            "  Properties:",
            "    PolicyDocument: ${2:JSON} # Required",
            "    Queues: # Required",
            "      Queues"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-policy.html"
        ],
        "prefix": "sqs-queuepolicy",
        "scope": "yaml"
    },
    "AWS::SSM::Association": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SSM::Association",
            "  Properties:",
            "    ApplyOnlyAtCronInterval: ${2|false,true|}",
            "    AssociationName: \"${3:String}\"",
            "    AutomationTargetParameterName: \"${4:String}\"",
            "    CalendarNames:",
            "      CalendarNames",
            "    ComplianceSeverity: \"${6:String}\"",
            "    DocumentVersion: \"${7:String}\"",
            "    InstanceId: \"${8:String}\"",
            "    MaxConcurrency: \"${9:String}\"",
            "    MaxErrors: \"${10:String}\"",
            "    Name: \"${11:String}\" # Required",
            "    OutputLocation:",
            "    Parameters:",
            "    ScheduleExpression: \"${14:String}\"",
            "    ScheduleOffset: ${15:Number}",
            "    SyncCompliance: \"${16:String}\"",
            "    Targets:",
            "      Targets",
            "    WaitForSuccessTimeoutSeconds: ${18:Number}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-association.html",
            "Attributes: ",
            "  AssociationId"
        ],
        "prefix": "ssm-association",
        "scope": "yaml"
    },
    "AWS::SSM::Document": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SSM::Document",
            "  Properties:",
            "    Attachments:",
            "      Attachments",
            "    Content: ${3:JSON} # Required",
            "    DocumentFormat: \"${4:String}\"",
            "    DocumentType: \"${5:String}\"",
            "    Name: \"${6:String}\"",
            "    Requires:",
            "      Requires",
            "    Tags:",
            "      Tags",
            "    TargetType: \"${9:String}\"",
            "    UpdateMethod: \"${10:String}\"",
            "    VersionName: \"${11:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-document.html"
        ],
        "prefix": "ssm-document",
        "scope": "yaml"
    },
    "AWS::SSM::MaintenanceWindow": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SSM::MaintenanceWindow",
            "  Properties:",
            "    AllowUnassociatedTargets: ${2|false,true|} # Required",
            "    Cutoff: ${3:Number} # Required",
            "    Description: \"${4:String}\"",
            "    Duration: ${5:Number} # Required",
            "    EndDate: \"${6:String}\"",
            "    Name: \"${7:String}\" # Required",
            "    Schedule: \"${8:String}\" # Required",
            "    ScheduleOffset: ${9:Number}",
            "    ScheduleTimezone: \"${10:String}\"",
            "    StartDate: \"${11:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindow.html"
        ],
        "prefix": "ssm-maintenancewindow",
        "scope": "yaml"
    },
    "AWS::SSM::MaintenanceWindowTarget": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SSM::MaintenanceWindowTarget",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    Name: \"${3:String}\"",
            "    OwnerInformation: \"${4:String}\"",
            "    ResourceType: \"${5:String}\" # Required",
            "    Targets: # Required",
            "      Targets",
            "    WindowId: \"${7:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindowtarget.html"
        ],
        "prefix": "ssm-maintenancewindowtarget",
        "scope": "yaml"
    },
    "AWS::SSM::MaintenanceWindowTask": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SSM::MaintenanceWindowTask",
            "  Properties:",
            "    CutoffBehavior: \"${2:String}\"",
            "    Description: \"${3:String}\"",
            "    LoggingInfo:",
            "      Region: \"${4:String}\"",
            "      S3Bucket: \"${5:String}\"",
            "      S3Prefix: \"${6:String}\"",
            "    MaxConcurrency: \"${5:String}\"",
            "    MaxErrors: \"${6:String}\"",
            "    Name: \"${7:String}\"",
            "    Priority: ${8:Number} # Required",
            "    ServiceRoleArn: \"${9:String}\"",
            "    Targets:",
            "      Targets",
            "    TaskArn: \"${11:String}\" # Required",
            "    TaskInvocationParameters:",
            "    TaskParameters: ${13:JSON}",
            "    TaskType: \"${14:String}\" # Required",
            "    WindowId: \"${15:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindowtask.html"
        ],
        "prefix": "ssm-maintenancewindowtask",
        "scope": "yaml"
    },
    "AWS::SSM::Parameter": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SSM::Parameter",
            "  Properties:",
            "    AllowedPattern: \"${2:String}\"",
            "    DataType: \"${3:String}\"",
            "    Description: \"${4:String}\"",
            "    Name: \"${5:String}\"",
            "    Policies: \"${6:String}\"",
            "    Tags: ${7:JSON}",
            "    Tier: \"${8:String}\"",
            "    Type: \"${9:String}\" # Required",
            "    Value: \"${10:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-parameter.html",
            "Attributes: ",
            "  Type",
            "  Value"
        ],
        "prefix": "ssm-parameter",
        "scope": "yaml"
    },
    "AWS::SSM::PatchBaseline": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SSM::PatchBaseline",
            "  Properties:",
            "    ApprovalRules:",
            "      PatchRules:",
            "        -",
            "    ApprovedPatches:",
            "      ApprovedPatches",
            "    ApprovedPatchesComplianceLevel: \"${4:String}\"",
            "    ApprovedPatchesEnableNonSecurity: ${5|false,true|}",
            "    Description: \"${6:String}\"",
            "    GlobalFilters:",
            "      PatchFilters:",
            "        -",
            "    Name: \"${8:String}\" # Required",
            "    OperatingSystem: \"${9:String}\"",
            "    PatchGroups:",
            "      PatchGroups",
            "    RejectedPatches:",
            "      RejectedPatches",
            "    RejectedPatchesAction: \"${12:String}\"",
            "    Sources:",
            "      Sources",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-patchbaseline.html"
        ],
        "prefix": "ssm-patchbaseline",
        "scope": "yaml"
    },
    "AWS::SSM::ResourceDataSync": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SSM::ResourceDataSync",
            "  Properties:",
            "    BucketName: \"${2:String}\"",
            "    BucketPrefix: \"${3:String}\"",
            "    BucketRegion: \"${4:String}\"",
            "    KMSKeyArn: \"${5:String}\"",
            "    S3Destination:",
            "      BucketName: \"${6:String}\"",
            "      BucketPrefix: \"${7:String}\"",
            "      BucketRegion: \"${8:String}\"",
            "      KMSKeyArn: \"${9:String}\"",
            "      SyncFormat: \"${10:String}\"",
            "    SyncFormat: \"${7:String}\"",
            "    SyncName: \"${8:String}\" # Required",
            "    SyncSource:",
            "      IncludeFutureRegions: ${10|false,true|}",
            "      SourceRegions:",
            "        -",
            "      SourceType: \"${12:String}\"",
            "    SyncType: \"${10:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-resourcedatasync.html",
            "Attributes: ",
            "  SyncName"
        ],
        "prefix": "ssm-resourcedatasync",
        "scope": "yaml"
    },
    "AWS::SSMContacts::Contact": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SSMContacts::Contact",
            "  Properties:",
            "    Alias: \"${2:String}\" # Required",
            "    DisplayName: \"${3:String}\" # Required",
            "    Plan: # Required",
            "      Plan",
            "    Type: \"${5:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contact.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "ssmcontacts-contact",
        "scope": "yaml"
    },
    "AWS::SSMContacts::ContactChannel": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SSMContacts::ContactChannel",
            "  Properties:",
            "    ChannelAddress: \"${2:String}\" # Required",
            "    ChannelName: \"${3:String}\" # Required",
            "    ChannelType: \"${4:String}\" # Required",
            "    ContactId: \"${5:String}\" # Required",
            "    DeferActivation: ${6|false,true|}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contactchannel.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "ssmcontacts-contactchannel",
        "scope": "yaml"
    },
    "AWS::SSMIncidents::ReplicationSet": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SSMIncidents::ReplicationSet",
            "  Properties:",
            "    DeletionProtected: ${2|false,true|}",
            "    Regions: # Required",
            "      Regions"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmincidents-replicationset.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "ssmincidents-replicationset",
        "scope": "yaml"
    },
    "AWS::SSMIncidents::ResponsePlan": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SSMIncidents::ResponsePlan",
            "  Properties:",
            "    Actions:",
            "      Actions",
            "    ChatChannel:",
            "      ChatbotSns:",
            "        -",
            "    DisplayName: \"${4:String}\"",
            "    Engagements:",
            "      Engagements",
            "    IncidentTemplate:",
            "      DedupeString: \"${6:String}\"",
            "      Impact: ${7:Number}",
            "      NotificationTargets:",
            "        -",
            "      Summary: \"${9:String}\"",
            "      Title: \"${10:String}\"",
            "    Name: \"${7:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmincidents-responseplan.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "ssmincidents-responseplan",
        "scope": "yaml"
    },
    "AWS::SSO::Assignment": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SSO::Assignment",
            "  Properties:",
            "    InstanceArn: \"${2:String}\" # Required",
            "    PermissionSetArn: \"${3:String}\" # Required",
            "    PrincipalId: \"${4:String}\" # Required",
            "    PrincipalType: \"${5:String}\" # Required",
            "    TargetId: \"${6:String}\" # Required",
            "    TargetType: \"${7:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-assignment.html"
        ],
        "prefix": "sso-assignment",
        "scope": "yaml"
    },
    "AWS::SSO::InstanceAccessControlAttributeConfiguration": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SSO::InstanceAccessControlAttributeConfiguration",
            "  Properties:",
            "    AccessControlAttributes:",
            "      AccessControlAttributes",
            "    InstanceArn: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-instanceaccesscontrolattributeconfiguration.html"
        ],
        "prefix": "sso-instanceaccesscontrolattributeconfiguration",
        "scope": "yaml"
    },
    "AWS::SSO::PermissionSet": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SSO::PermissionSet",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    InlinePolicy: ${3:JSON}",
            "    InstanceArn: \"${4:String}\" # Required",
            "    ManagedPolicies:",
            "      ManagedPolicies",
            "    Name: \"${6:String}\" # Required",
            "    RelayStateType: \"${7:String}\"",
            "    SessionDuration: \"${8:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-permissionset.html",
            "Attributes: ",
            "  PermissionSetArn"
        ],
        "prefix": "sso-permissionset",
        "scope": "yaml"
    },
    "AWS::SageMaker::App": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SageMaker::App",
            "  Properties:",
            "    AppName: \"${2:String}\" # Required",
            "    AppType: \"${3:String}\" # Required",
            "    DomainId: \"${4:String}\" # Required",
            "    ResourceSpec:",
            "      InstanceType: \"${5:String}\"",
            "      SageMakerImageArn: \"${6:String}\"",
            "      SageMakerImageVersionArn: \"${7:String}\"",
            "    Tags:",
            "      Tags",
            "    UserProfileName: \"${7:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-app.html",
            "Attributes: ",
            "  AppArn"
        ],
        "prefix": "sagemaker-app",
        "scope": "yaml"
    },
    "AWS::SageMaker::AppImageConfig": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SageMaker::AppImageConfig",
            "  Properties:",
            "    AppImageConfigName: \"${2:String}\" # Required",
            "    KernelGatewayImageConfig:",
            "      KernelSpecs:",
            "        -",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-appimageconfig.html",
            "Attributes: ",
            "  AppImageConfigArn"
        ],
        "prefix": "sagemaker-appimageconfig",
        "scope": "yaml"
    },
    "AWS::SageMaker::CodeRepository": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SageMaker::CodeRepository",
            "  Properties:",
            "    CodeRepositoryName: \"${2:String}\"",
            "    GitConfig:",
            "      Branch: \"${3:String}\"",
            "      RepositoryUrl: \"${4:String}\"",
            "      SecretArn: \"${5:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-coderepository.html",
            "Attributes: ",
            "  CodeRepositoryName"
        ],
        "prefix": "sagemaker-coderepository",
        "scope": "yaml"
    },
    "AWS::SageMaker::DataQualityJobDefinition": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SageMaker::DataQualityJobDefinition",
            "  Properties:",
            "    DataQualityAppSpecification:",
            "      ContainerArguments:",
            "        -",
            "      ContainerEntrypoint:",
            "        -",
            "      ImageUri: \"${5:String}\"",
            "      PostAnalyticsProcessorSourceUri: \"${6:String}\"",
            "      RecordPreprocessorSourceUri: \"${7:String}\"",
            "    DataQualityBaselineConfig:",
            "      BaseliningJobName: \"${3:String}\"",
            "    DataQualityJobInput:",
            "    DataQualityJobOutputConfig:",
            "      KmsKeyId: \"${5:String}\"",
            "      MonitoringOutputs:",
            "        -",
            "    JobDefinitionName: \"${6:String}\"",
            "    JobResources:",
            "    NetworkConfig:",
            "      EnableInterContainerTrafficEncryption: ${8|false,true|}",
            "      EnableNetworkIsolation: ${9|false,true|}",
            "    RoleArn: \"${9:String}\" # Required",
            "    StoppingCondition:",
            "      MaxRuntimeInSeconds: ${10:Number}",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-dataqualityjobdefinition.html",
            "Attributes: ",
            "  JobDefinitionArn",
            "  CreationTime"
        ],
        "prefix": "sagemaker-dataqualityjobdefinition",
        "scope": "yaml"
    },
    "AWS::SageMaker::Device": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SageMaker::Device",
            "  Properties:",
            "    Device:",
            "      Description: \"${2:String}\"",
            "      DeviceName: \"${3:String}\"",
            "      IotThingName: \"${4:String}\"",
            "    DeviceFleetName: \"${3:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-device.html"
        ],
        "prefix": "sagemaker-device",
        "scope": "yaml"
    },
    "AWS::SageMaker::DeviceFleet": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SageMaker::DeviceFleet",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    DeviceFleetName: \"${3:String}\" # Required",
            "    OutputConfig:",
            "      KmsKeyId: \"${4:String}\"",
            "      S3OutputLocation: \"${5:String}\"",
            "    RoleArn: \"${5:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-devicefleet.html"
        ],
        "prefix": "sagemaker-devicefleet",
        "scope": "yaml"
    },
    "AWS::SageMaker::Domain": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SageMaker::Domain",
            "  Properties:",
            "    AppNetworkAccessType: \"${2:String}\"",
            "    AppSecurityGroupManagement: \"${3:String}\"",
            "    AuthMode: \"${4:String}\" # Required",
            "    DefaultUserSettings:",
            "      ExecutionRole: \"${5:String}\"",
            "      SecurityGroups:",
            "        -",
            "    DomainName: \"${6:String}\" # Required",
            "    DomainSettings:",
            "      SecurityGroupIds:",
            "        -",
            "    KmsKeyId: \"${8:String}\"",
            "    SubnetIds: # Required",
            "      SubnetIds",
            "    Tags:",
            "      Tags",
            "    VpcId: \"${11:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-domain.html",
            "Attributes: ",
            "  DomainArn",
            "  Url",
            "  DomainId",
            "  HomeEfsFileSystemId",
            "  SingleSignOnManagedApplicationInstanceId",
            "  SecurityGroupIdForDomainBoundary"
        ],
        "prefix": "sagemaker-domain",
        "scope": "yaml"
    },
    "AWS::SageMaker::Endpoint": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SageMaker::Endpoint",
            "  Properties:",
            "    DeploymentConfig:",
            "    EndpointConfigName: \"${3:String}\" # Required",
            "    EndpointName: \"${4:String}\"",
            "    ExcludeRetainedVariantProperties:",
            "      ExcludeRetainedVariantProperties",
            "    RetainAllVariantProperties: ${6|false,true|}",
            "    RetainDeploymentConfig: ${7|false,true|}",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-endpoint.html",
            "Attributes: ",
            "  EndpointName"
        ],
        "prefix": "sagemaker-endpoint",
        "scope": "yaml"
    },
    "AWS::SageMaker::EndpointConfig": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SageMaker::EndpointConfig",
            "  Properties:",
            "    AsyncInferenceConfig:",
            "    DataCaptureConfig:",
            "      CaptureOptions:",
            "        -",
            "      DestinationS3Uri: \"${5:String}\"",
            "      EnableCapture: ${6|false,true|}",
            "      InitialSamplingPercentage: ${7:Number}",
            "      KmsKeyId: \"${8:String}\"",
            "    EndpointConfigName: \"${4:String}\"",
            "    KmsKeyId: \"${5:String}\"",
            "    ProductionVariants: # Required",
            "      ProductionVariants",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-endpointconfig.html",
            "Attributes: ",
            "  EndpointConfigName"
        ],
        "prefix": "sagemaker-endpointconfig",
        "scope": "yaml"
    },
    "AWS::SageMaker::FeatureGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SageMaker::FeatureGroup",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    EventTimeFeatureName: \"${3:String}\" # Required",
            "    FeatureDefinitions: # Required",
            "      FeatureDefinitions",
            "    FeatureGroupName: \"${5:String}\" # Required",
            "    OfflineStoreConfig: ${6:JSON}",
            "    OnlineStoreConfig: ${7:JSON}",
            "    RecordIdentifierFeatureName: \"${8:String}\" # Required",
            "    RoleArn: \"${9:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-featuregroup.html"
        ],
        "prefix": "sagemaker-featuregroup",
        "scope": "yaml"
    },
    "AWS::SageMaker::Image": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SageMaker::Image",
            "  Properties:",
            "    ImageDescription: \"${2:String}\"",
            "    ImageDisplayName: \"${3:String}\"",
            "    ImageName: \"${4:String}\" # Required",
            "    ImageRoleArn: \"${5:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-image.html",
            "Attributes: ",
            "  ImageArn"
        ],
        "prefix": "sagemaker-image",
        "scope": "yaml"
    },
    "AWS::SageMaker::ImageVersion": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SageMaker::ImageVersion",
            "  Properties:",
            "    BaseImage: \"${2:String}\" # Required",
            "    ImageName: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-imageversion.html",
            "Attributes: ",
            "  ImageArn",
            "  ImageVersionArn",
            "  ContainerImage",
            "  Version"
        ],
        "prefix": "sagemaker-imageversion",
        "scope": "yaml"
    },
    "AWS::SageMaker::Model": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SageMaker::Model",
            "  Properties:",
            "    Containers:",
            "      Containers",
            "    EnableNetworkIsolation: ${3|false,true|}",
            "    ExecutionRoleArn: \"${4:String}\" # Required",
            "    InferenceExecutionConfig:",
            "      Mode: \"${5:String}\"",
            "    ModelName: \"${6:String}\"",
            "    PrimaryContainer:",
            "      ContainerHostname: \"${7:String}\"",
            "      Environment: ${8:JSON}",
            "      Image: \"${9:String}\"",
            "      InferenceSpecificationName: \"${11:String}\"",
            "      Mode: \"${12:String}\"",
            "      ModelDataUrl: \"${13:String}\"",
            "      ModelPackageName: \"${14:String}\"",
            "    Tags:",
            "      Tags",
            "    VpcConfig:",
            "      SecurityGroupIds:",
            "        -",
            "      Subnets:",
            "        -"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-model.html",
            "Attributes: ",
            "  ModelName"
        ],
        "prefix": "sagemaker-model",
        "scope": "yaml"
    },
    "AWS::SageMaker::ModelBiasJobDefinition": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SageMaker::ModelBiasJobDefinition",
            "  Properties:",
            "    JobDefinitionName: \"${2:String}\"",
            "    JobResources:",
            "    ModelBiasAppSpecification:",
            "      ConfigUri: \"${4:String}\"",
            "      ImageUri: \"${6:String}\"",
            "    ModelBiasBaselineConfig:",
            "      BaseliningJobName: \"${5:String}\"",
            "    ModelBiasJobInput:",
            "    ModelBiasJobOutputConfig:",
            "      KmsKeyId: \"${7:String}\"",
            "      MonitoringOutputs:",
            "        -",
            "    NetworkConfig:",
            "      EnableInterContainerTrafficEncryption: ${8|false,true|}",
            "      EnableNetworkIsolation: ${9|false,true|}",
            "    RoleArn: \"${9:String}\" # Required",
            "    StoppingCondition:",
            "      MaxRuntimeInSeconds: ${10:Number}",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelbiasjobdefinition.html",
            "Attributes: ",
            "  JobDefinitionArn",
            "  CreationTime"
        ],
        "prefix": "sagemaker-modelbiasjobdefinition",
        "scope": "yaml"
    },
    "AWS::SageMaker::ModelExplainabilityJobDefinition": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SageMaker::ModelExplainabilityJobDefinition",
            "  Properties:",
            "    JobDefinitionName: \"${2:String}\"",
            "    JobResources:",
            "    ModelExplainabilityAppSpecification:",
            "      ConfigUri: \"${4:String}\"",
            "      ImageUri: \"${6:String}\"",
            "    ModelExplainabilityBaselineConfig:",
            "      BaseliningJobName: \"${5:String}\"",
            "    ModelExplainabilityJobInput:",
            "    ModelExplainabilityJobOutputConfig:",
            "      KmsKeyId: \"${7:String}\"",
            "      MonitoringOutputs:",
            "        -",
            "    NetworkConfig:",
            "      EnableInterContainerTrafficEncryption: ${8|false,true|}",
            "      EnableNetworkIsolation: ${9|false,true|}",
            "    RoleArn: \"${9:String}\" # Required",
            "    StoppingCondition:",
            "      MaxRuntimeInSeconds: ${10:Number}",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelexplainabilityjobdefinition.html",
            "Attributes: ",
            "  JobDefinitionArn",
            "  CreationTime"
        ],
        "prefix": "sagemaker-modelexplainabilityjobdefinition",
        "scope": "yaml"
    },
    "AWS::SageMaker::ModelPackageGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SageMaker::ModelPackageGroup",
            "  Properties:",
            "    ModelPackageGroupDescription: \"${2:String}\"",
            "    ModelPackageGroupName: \"${3:String}\" # Required",
            "    ModelPackageGroupPolicy: ${4:JSON}",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelpackagegroup.html",
            "Attributes: ",
            "  ModelPackageGroupArn",
            "  CreationTime",
            "  ModelPackageGroupStatus"
        ],
        "prefix": "sagemaker-modelpackagegroup",
        "scope": "yaml"
    },
    "AWS::SageMaker::ModelQualityJobDefinition": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SageMaker::ModelQualityJobDefinition",
            "  Properties:",
            "    JobDefinitionName: \"${2:String}\"",
            "    JobResources:",
            "    ModelQualityAppSpecification:",
            "      ContainerArguments:",
            "        -",
            "      ContainerEntrypoint:",
            "        -",
            "      ImageUri: \"${7:String}\"",
            "      PostAnalyticsProcessorSourceUri: \"${8:String}\"",
            "      ProblemType: \"${9:String}\"",
            "      RecordPreprocessorSourceUri: \"${10:String}\"",
            "    ModelQualityBaselineConfig:",
            "      BaseliningJobName: \"${5:String}\"",
            "    ModelQualityJobInput:",
            "    ModelQualityJobOutputConfig:",
            "      KmsKeyId: \"${7:String}\"",
            "      MonitoringOutputs:",
            "        -",
            "    NetworkConfig:",
            "      EnableInterContainerTrafficEncryption: ${8|false,true|}",
            "      EnableNetworkIsolation: ${9|false,true|}",
            "    RoleArn: \"${9:String}\" # Required",
            "    StoppingCondition:",
            "      MaxRuntimeInSeconds: ${10:Number}",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelqualityjobdefinition.html",
            "Attributes: ",
            "  JobDefinitionArn",
            "  CreationTime"
        ],
        "prefix": "sagemaker-modelqualityjobdefinition",
        "scope": "yaml"
    },
    "AWS::SageMaker::MonitoringSchedule": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SageMaker::MonitoringSchedule",
            "  Properties:",
            "    EndpointName: \"${2:String}\"",
            "    FailureReason: \"${3:String}\"",
            "    LastMonitoringExecutionSummary:",
            "      CreationTime: \"${4:String}\"",
            "      EndpointName: \"${5:String}\"",
            "      FailureReason: \"${6:String}\"",
            "      LastModifiedTime: \"${7:String}\"",
            "      MonitoringExecutionStatus: \"${8:String}\"",
            "      MonitoringScheduleName: \"${9:String}\"",
            "      ProcessingJobArn: \"${10:String}\"",
            "      ScheduledTime: \"${11:String}\"",
            "    MonitoringScheduleConfig:",
            "      MonitoringJobDefinitionName: \"${6:String}\"",
            "      MonitoringType: \"${7:String}\"",
            "    MonitoringScheduleName: \"${6:String}\" # Required",
            "    MonitoringScheduleStatus: \"${7:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-monitoringschedule.html",
            "Attributes: ",
            "  MonitoringScheduleArn",
            "  CreationTime",
            "  LastModifiedTime"
        ],
        "prefix": "sagemaker-monitoringschedule",
        "scope": "yaml"
    },
    "AWS::SageMaker::NotebookInstance": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SageMaker::NotebookInstance",
            "  Properties:",
            "    AcceleratorTypes:",
            "      AcceleratorTypes",
            "    AdditionalCodeRepositories:",
            "      AdditionalCodeRepositories",
            "    DefaultCodeRepository: \"${4:String}\"",
            "    DirectInternetAccess: \"${5:String}\"",
            "    InstanceType: \"${6:String}\" # Required",
            "    KmsKeyId: \"${7:String}\"",
            "    LifecycleConfigName: \"${8:String}\"",
            "    NotebookInstanceName: \"${9:String}\"",
            "    PlatformIdentifier: \"${10:String}\"",
            "    RoleArn: \"${11:String}\" # Required",
            "    RootAccess: \"${12:String}\"",
            "    SecurityGroupIds:",
            "      SecurityGroupIds",
            "    SubnetId: \"${14:String}\"",
            "    Tags:",
            "      Tags",
            "    VolumeSizeInGB: ${16:Number}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html",
            "Attributes: ",
            "  NotebookInstanceName"
        ],
        "prefix": "sagemaker-notebookinstance",
        "scope": "yaml"
    },
    "AWS::SageMaker::NotebookInstanceLifecycleConfig": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SageMaker::NotebookInstanceLifecycleConfig",
            "  Properties:",
            "    NotebookInstanceLifecycleConfigName: \"${2:String}\"",
            "    OnCreate:",
            "      OnCreate",
            "    OnStart:",
            "      OnStart"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstancelifecycleconfig.html",
            "Attributes: ",
            "  NotebookInstanceLifecycleConfigName"
        ],
        "prefix": "sagemaker-notebookinstancelifecycleconfig",
        "scope": "yaml"
    },
    "AWS::SageMaker::Pipeline": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SageMaker::Pipeline",
            "  Properties:",
            "    ParallelismConfiguration: ${2:JSON}",
            "    PipelineDefinition: ${3:JSON} # Required",
            "    PipelineDescription: \"${4:String}\"",
            "    PipelineDisplayName: \"${5:String}\"",
            "    PipelineName: \"${6:String}\" # Required",
            "    RoleArn: \"${7:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-pipeline.html"
        ],
        "prefix": "sagemaker-pipeline",
        "scope": "yaml"
    },
    "AWS::SageMaker::Project": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SageMaker::Project",
            "  Properties:",
            "    ProjectDescription: \"${2:String}\"",
            "    ProjectName: \"${3:String}\" # Required",
            "    ServiceCatalogProvisioningDetails: ${4:JSON} # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-project.html",
            "Attributes: ",
            "  ProjectArn",
            "  ProjectId",
            "  CreationTime",
            "  ProjectStatus"
        ],
        "prefix": "sagemaker-project",
        "scope": "yaml"
    },
    "AWS::SageMaker::UserProfile": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SageMaker::UserProfile",
            "  Properties:",
            "    DomainId: \"${2:String}\" # Required",
            "    SingleSignOnUserIdentifier: \"${3:String}\"",
            "    SingleSignOnUserValue: \"${4:String}\"",
            "    Tags:",
            "      Tags",
            "    UserProfileName: \"${6:String}\" # Required",
            "    UserSettings:",
            "      ExecutionRole: \"${7:String}\"",
            "      SecurityGroups:",
            "        -"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-userprofile.html",
            "Attributes: ",
            "  UserProfileArn"
        ],
        "prefix": "sagemaker-userprofile",
        "scope": "yaml"
    },
    "AWS::SageMaker::Workteam": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SageMaker::Workteam",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    MemberDefinitions:",
            "      MemberDefinitions",
            "    NotificationConfiguration:",
            "      NotificationTopicArn: \"${4:String}\"",
            "    Tags:",
            "      Tags",
            "    WorkteamName: \"${6:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-workteam.html",
            "Attributes: ",
            "  WorkteamName"
        ],
        "prefix": "sagemaker-workteam",
        "scope": "yaml"
    },
    "AWS::SecretsManager::ResourcePolicy": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SecretsManager::ResourcePolicy",
            "  Properties:",
            "    BlockPublicPolicy: ${2|false,true|}",
            "    ResourcePolicy: ${3:JSON} # Required",
            "    SecretId: \"${4:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-resourcepolicy.html"
        ],
        "prefix": "secretsmanager-resourcepolicy",
        "scope": "yaml"
    },
    "AWS::SecretsManager::RotationSchedule": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SecretsManager::RotationSchedule",
            "  Properties:",
            "    HostedRotationLambda:",
            "      ExcludeCharacters: \"${2:String}\"",
            "      KmsKeyArn: \"${3:String}\"",
            "      MasterSecretArn: \"${4:String}\"",
            "      MasterSecretKmsKeyArn: \"${5:String}\"",
            "      RotationLambdaName: \"${6:String}\"",
            "      RotationType: \"${7:String}\"",
            "      SuperuserSecretArn: \"${8:String}\"",
            "      SuperuserSecretKmsKeyArn: \"${9:String}\"",
            "      VpcSecurityGroupIds: \"${10:String}\"",
            "      VpcSubnetIds: \"${11:String}\"",
            "    RotateImmediatelyOnUpdate: ${3|false,true|}",
            "    RotationLambdaARN: \"${4:String}\"",
            "    RotationRules:",
            "      AutomaticallyAfterDays: ${5:Number}",
            "      Duration: \"${6:String}\"",
            "      ScheduleExpression: \"${7:String}\"",
            "    SecretId: \"${6:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-rotationschedule.html"
        ],
        "prefix": "secretsmanager-rotationschedule",
        "scope": "yaml"
    },
    "AWS::SecretsManager::Secret": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SecretsManager::Secret",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    GenerateSecretString:",
            "      ExcludeCharacters: \"${3:String}\"",
            "      ExcludeLowercase: ${4|false,true|}",
            "      ExcludeNumbers: ${5|false,true|}",
            "      ExcludePunctuation: ${6|false,true|}",
            "      ExcludeUppercase: ${7|false,true|}",
            "      GenerateStringKey: \"${8:String}\"",
            "      IncludeSpace: ${9|false,true|}",
            "      PasswordLength: ${10:Number}",
            "      RequireEachIncludedType: ${11|false,true|}",
            "      SecretStringTemplate: \"${12:String}\"",
            "    KmsKeyId: \"${4:String}\"",
            "    Name: \"${5:String}\"",
            "    ReplicaRegions:",
            "      ReplicaRegions",
            "    SecretString: \"${7:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html"
        ],
        "prefix": "secretsmanager-secret",
        "scope": "yaml"
    },
    "AWS::SecretsManager::SecretTargetAttachment": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SecretsManager::SecretTargetAttachment",
            "  Properties:",
            "    SecretId: \"${2:String}\" # Required",
            "    TargetId: \"${3:String}\" # Required",
            "    TargetType: \"${4:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secrettargetattachment.html"
        ],
        "prefix": "secretsmanager-secrettargetattachment",
        "scope": "yaml"
    },
    "AWS::SecurityHub::Hub": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::SecurityHub::Hub",
            "  Properties:",
            "    Tags: ${2:JSON}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-hub.html"
        ],
        "prefix": "securityhub-hub",
        "scope": "yaml"
    },
    "AWS::ServiceCatalog::AcceptedPortfolioShare": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ServiceCatalog::AcceptedPortfolioShare",
            "  Properties:",
            "    AcceptLanguage: \"${2:String}\"",
            "    PortfolioId: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-acceptedportfolioshare.html"
        ],
        "prefix": "servicecatalog-acceptedportfolioshare",
        "scope": "yaml"
    },
    "AWS::ServiceCatalog::CloudFormationProduct": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ServiceCatalog::CloudFormationProduct",
            "  Properties:",
            "    AcceptLanguage: \"${2:String}\"",
            "    Description: \"${3:String}\"",
            "    Distributor: \"${4:String}\"",
            "    Name: \"${5:String}\" # Required",
            "    Owner: \"${6:String}\" # Required",
            "    ProvisioningArtifactParameters: # Required",
            "      ProvisioningArtifactParameters",
            "    ReplaceProvisioningArtifacts: ${8|false,true|}",
            "    SupportDescription: \"${9:String}\"",
            "    SupportEmail: \"${10:String}\"",
            "    SupportUrl: \"${11:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-cloudformationproduct.html",
            "Attributes: ",
            "  ProductName",
            "  ProvisioningArtifactIds",
            "  ProvisioningArtifactNames"
        ],
        "prefix": "servicecatalog-cloudformationproduct",
        "scope": "yaml"
    },
    "AWS::ServiceCatalog::CloudFormationProvisionedProduct": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ServiceCatalog::CloudFormationProvisionedProduct",
            "  Properties:",
            "    AcceptLanguage: \"${2:String}\"",
            "    NotificationArns:",
            "      NotificationArns",
            "    PathId: \"${4:String}\"",
            "    PathName: \"${5:String}\"",
            "    ProductId: \"${6:String}\"",
            "    ProductName: \"${7:String}\"",
            "    ProvisionedProductName: \"${8:String}\"",
            "    ProvisioningArtifactId: \"${9:String}\"",
            "    ProvisioningArtifactName: \"${10:String}\"",
            "    ProvisioningParameters:",
            "      ProvisioningParameters",
            "    ProvisioningPreferences:",
            "      StackSetAccounts:",
            "        -",
            "      StackSetFailureToleranceCount: ${13:Number}",
            "      StackSetFailureTolerancePercentage: ${14:Number}",
            "      StackSetMaxConcurrencyCount: ${15:Number}",
            "      StackSetMaxConcurrencyPercentage: ${16:Number}",
            "      StackSetOperationType: \"${17:String}\"",
            "      StackSetRegions:",
            "        -",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-cloudformationprovisionedproduct.html",
            "Attributes: ",
            "  ProvisionedProductId",
            "  RecordId",
            "  CloudformationStackArn"
        ],
        "prefix": "servicecatalog-cloudformationprovisionedproduct",
        "scope": "yaml"
    },
    "AWS::ServiceCatalog::LaunchNotificationConstraint": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ServiceCatalog::LaunchNotificationConstraint",
            "  Properties:",
            "    AcceptLanguage: \"${2:String}\"",
            "    Description: \"${3:String}\"",
            "    NotificationArns: # Required",
            "      NotificationArns",
            "    PortfolioId: \"${5:String}\" # Required",
            "    ProductId: \"${6:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-launchnotificationconstraint.html"
        ],
        "prefix": "servicecatalog-launchnotificationconstraint",
        "scope": "yaml"
    },
    "AWS::ServiceCatalog::LaunchRoleConstraint": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ServiceCatalog::LaunchRoleConstraint",
            "  Properties:",
            "    AcceptLanguage: \"${2:String}\"",
            "    Description: \"${3:String}\"",
            "    LocalRoleName: \"${4:String}\"",
            "    PortfolioId: \"${5:String}\" # Required",
            "    ProductId: \"${6:String}\" # Required",
            "    RoleArn: \"${7:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-launchroleconstraint.html"
        ],
        "prefix": "servicecatalog-launchroleconstraint",
        "scope": "yaml"
    },
    "AWS::ServiceCatalog::LaunchTemplateConstraint": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ServiceCatalog::LaunchTemplateConstraint",
            "  Properties:",
            "    AcceptLanguage: \"${2:String}\"",
            "    Description: \"${3:String}\"",
            "    PortfolioId: \"${4:String}\" # Required",
            "    ProductId: \"${5:String}\" # Required",
            "    Rules: \"${6:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-launchtemplateconstraint.html"
        ],
        "prefix": "servicecatalog-launchtemplateconstraint",
        "scope": "yaml"
    },
    "AWS::ServiceCatalog::Portfolio": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ServiceCatalog::Portfolio",
            "  Properties:",
            "    AcceptLanguage: \"${2:String}\"",
            "    Description: \"${3:String}\"",
            "    DisplayName: \"${4:String}\" # Required",
            "    ProviderName: \"${5:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-portfolio.html",
            "Attributes: ",
            "  PortfolioName"
        ],
        "prefix": "servicecatalog-portfolio",
        "scope": "yaml"
    },
    "AWS::ServiceCatalog::PortfolioPrincipalAssociation": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ServiceCatalog::PortfolioPrincipalAssociation",
            "  Properties:",
            "    AcceptLanguage: \"${2:String}\"",
            "    PortfolioId: \"${3:String}\" # Required",
            "    PrincipalARN: \"${4:String}\" # Required",
            "    PrincipalType: \"${5:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-portfolioprincipalassociation.html"
        ],
        "prefix": "servicecatalog-portfolioprincipalassociation",
        "scope": "yaml"
    },
    "AWS::ServiceCatalog::PortfolioProductAssociation": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ServiceCatalog::PortfolioProductAssociation",
            "  Properties:",
            "    AcceptLanguage: \"${2:String}\"",
            "    PortfolioId: \"${3:String}\" # Required",
            "    ProductId: \"${4:String}\" # Required",
            "    SourcePortfolioId: \"${5:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-portfolioproductassociation.html"
        ],
        "prefix": "servicecatalog-portfolioproductassociation",
        "scope": "yaml"
    },
    "AWS::ServiceCatalog::PortfolioShare": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ServiceCatalog::PortfolioShare",
            "  Properties:",
            "    AcceptLanguage: \"${2:String}\"",
            "    AccountId: \"${3:String}\" # Required",
            "    PortfolioId: \"${4:String}\" # Required",
            "    ShareTagOptions: ${5|false,true|}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-portfolioshare.html"
        ],
        "prefix": "servicecatalog-portfolioshare",
        "scope": "yaml"
    },
    "AWS::ServiceCatalog::ResourceUpdateConstraint": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ServiceCatalog::ResourceUpdateConstraint",
            "  Properties:",
            "    AcceptLanguage: \"${2:String}\"",
            "    Description: \"${3:String}\"",
            "    PortfolioId: \"${4:String}\" # Required",
            "    ProductId: \"${5:String}\" # Required",
            "    TagUpdateOnProvisionedProduct: \"${6:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-resourceupdateconstraint.html"
        ],
        "prefix": "servicecatalog-resourceupdateconstraint",
        "scope": "yaml"
    },
    "AWS::ServiceCatalog::ServiceAction": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ServiceCatalog::ServiceAction",
            "  Properties:",
            "    AcceptLanguage: \"${2:String}\"",
            "    Definition: # Required",
            "      Definition",
            "    DefinitionType: \"${4:String}\" # Required",
            "    Description: \"${5:String}\"",
            "    Name: \"${6:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-serviceaction.html",
            "Attributes: ",
            "  Id"
        ],
        "prefix": "servicecatalog-serviceaction",
        "scope": "yaml"
    },
    "AWS::ServiceCatalog::ServiceActionAssociation": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ServiceCatalog::ServiceActionAssociation",
            "  Properties:",
            "    ProductId: \"${2:String}\" # Required",
            "    ProvisioningArtifactId: \"${3:String}\" # Required",
            "    ServiceActionId: \"${4:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-serviceactionassociation.html"
        ],
        "prefix": "servicecatalog-serviceactionassociation",
        "scope": "yaml"
    },
    "AWS::ServiceCatalog::StackSetConstraint": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ServiceCatalog::StackSetConstraint",
            "  Properties:",
            "    AcceptLanguage: \"${2:String}\"",
            "    AccountList: # Required",
            "      AccountList",
            "    AdminRole: \"${4:String}\" # Required",
            "    Description: \"${5:String}\" # Required",
            "    ExecutionRole: \"${6:String}\" # Required",
            "    PortfolioId: \"${7:String}\" # Required",
            "    ProductId: \"${8:String}\" # Required",
            "    RegionList: # Required",
            "      RegionList",
            "    StackInstanceControl: \"${10:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-stacksetconstraint.html"
        ],
        "prefix": "servicecatalog-stacksetconstraint",
        "scope": "yaml"
    },
    "AWS::ServiceCatalog::TagOption": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ServiceCatalog::TagOption",
            "  Properties:",
            "    Active: ${2|false,true|}",
            "    Key: \"${3:String}\" # Required",
            "    Value: \"${4:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-tagoption.html"
        ],
        "prefix": "servicecatalog-tagoption",
        "scope": "yaml"
    },
    "AWS::ServiceCatalog::TagOptionAssociation": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ServiceCatalog::TagOptionAssociation",
            "  Properties:",
            "    ResourceId: \"${2:String}\" # Required",
            "    TagOptionId: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-tagoptionassociation.html"
        ],
        "prefix": "servicecatalog-tagoptionassociation",
        "scope": "yaml"
    },
    "AWS::ServiceCatalogAppRegistry::Application": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ServiceCatalogAppRegistry::Application",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    Name: \"${3:String}\" # Required",
            "    Tags:"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalogappregistry-application.html",
            "Attributes: ",
            "  Id",
            "  Arn"
        ],
        "prefix": "servicecatalogappregistry-application",
        "scope": "yaml"
    },
    "AWS::ServiceCatalogAppRegistry::AttributeGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ServiceCatalogAppRegistry::AttributeGroup",
            "  Properties:",
            "    Attributes: ${2:JSON} # Required",
            "    Description: \"${3:String}\"",
            "    Name: \"${4:String}\" # Required",
            "    Tags:"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalogappregistry-attributegroup.html",
            "Attributes: ",
            "  Id",
            "  Arn"
        ],
        "prefix": "servicecatalogappregistry-attributegroup",
        "scope": "yaml"
    },
    "AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation",
            "  Properties:",
            "    Application: \"${2:String}\" # Required",
            "    AttributeGroup: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalogappregistry-attributegroupassociation.html",
            "Attributes: ",
            "  ApplicationArn",
            "  AttributeGroupArn",
            "  Id"
        ],
        "prefix": "servicecatalogappregistry-attributegroupassociation",
        "scope": "yaml"
    },
    "AWS::ServiceCatalogAppRegistry::ResourceAssociation": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ServiceCatalogAppRegistry::ResourceAssociation",
            "  Properties:",
            "    Application: \"${2:String}\" # Required",
            "    Resource: \"${3:String}\" # Required",
            "    ResourceType: \"${4:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalogappregistry-resourceassociation.html",
            "Attributes: ",
            "  ApplicationArn",
            "  ResourceArn",
            "  Id"
        ],
        "prefix": "servicecatalogappregistry-resourceassociation",
        "scope": "yaml"
    },
    "AWS::ServiceDiscovery::HttpNamespace": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ServiceDiscovery::HttpNamespace",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    Name: \"${3:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-httpnamespace.html",
            "Attributes: ",
            "  Id",
            "  Arn"
        ],
        "prefix": "servicediscovery-httpnamespace",
        "scope": "yaml"
    },
    "AWS::ServiceDiscovery::Instance": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ServiceDiscovery::Instance",
            "  Properties:",
            "    InstanceAttributes: ${2:JSON} # Required",
            "    InstanceId: \"${3:String}\"",
            "    ServiceId: \"${4:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-instance.html"
        ],
        "prefix": "servicediscovery-instance",
        "scope": "yaml"
    },
    "AWS::ServiceDiscovery::PrivateDnsNamespace": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ServiceDiscovery::PrivateDnsNamespace",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    Name: \"${3:String}\" # Required",
            "    Properties:",
            "    Tags:",
            "      Tags",
            "    Vpc: \"${6:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-privatednsnamespace.html",
            "Attributes: ",
            "  HostedZoneId",
            "  Id",
            "  Arn"
        ],
        "prefix": "servicediscovery-privatednsnamespace",
        "scope": "yaml"
    },
    "AWS::ServiceDiscovery::PublicDnsNamespace": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ServiceDiscovery::PublicDnsNamespace",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    Name: \"${3:String}\" # Required",
            "    Properties:",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-publicdnsnamespace.html",
            "Attributes: ",
            "  HostedZoneId",
            "  Id",
            "  Arn"
        ],
        "prefix": "servicediscovery-publicdnsnamespace",
        "scope": "yaml"
    },
    "AWS::ServiceDiscovery::Service": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::ServiceDiscovery::Service",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    DnsConfig:",
            "      DnsRecords:",
            "        -",
            "      NamespaceId: \"${4:String}\"",
            "      RoutingPolicy: \"${5:String}\"",
            "    HealthCheckConfig:",
            "      FailureThreshold: ${4:Number}",
            "      ResourcePath: \"${5:String}\"",
            "      Type: \"${6:String}\"",
            "    HealthCheckCustomConfig:",
            "      FailureThreshold: ${5:Number}",
            "    Name: \"${6:String}\"",
            "    NamespaceId: \"${7:String}\"",
            "    Tags:",
            "      Tags",
            "    Type: \"${9:String}\""
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-service.html",
            "Attributes: ",
            "  Id",
            "  Arn",
            "  Name"
        ],
        "prefix": "servicediscovery-service",
        "scope": "yaml"
    },
    "AWS::Signer::ProfilePermission": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Signer::ProfilePermission",
            "  Properties:",
            "    Action: \"${2:String}\" # Required",
            "    Principal: \"${3:String}\" # Required",
            "    ProfileName: \"${4:String}\" # Required",
            "    ProfileVersion: \"${5:String}\"",
            "    StatementId: \"${6:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-signer-profilepermission.html"
        ],
        "prefix": "signer-profilepermission",
        "scope": "yaml"
    },
    "AWS::Signer::SigningProfile": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Signer::SigningProfile",
            "  Properties:",
            "    PlatformId: \"${2:String}\" # Required",
            "    SignatureValidityPeriod:",
            "      Type: \"${3:String}\"",
            "      Value: ${4:Number}",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-signer-signingprofile.html",
            "Attributes: ",
            "  ProfileName",
            "  ProfileVersion",
            "  Arn",
            "  ProfileVersionArn"
        ],
        "prefix": "signer-signingprofile",
        "scope": "yaml"
    },
    "AWS::StepFunctions::Activity": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::StepFunctions::Activity",
            "  Properties:",
            "    Name: \"${2:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-stepfunctions-activity.html",
            "Attributes: ",
            "  Arn",
            "  Name"
        ],
        "prefix": "stepfunctions-activity",
        "scope": "yaml"
    },
    "AWS::StepFunctions::StateMachine": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::StepFunctions::StateMachine",
            "  Properties:",
            "    Definition:",
            "    DefinitionS3Location:",
            "      Bucket: \"${3:String}\"",
            "      Key: \"${4:String}\"",
            "      Version: \"${5:String}\"",
            "    DefinitionString: \"${4:String}\"",
            "    DefinitionSubstitutions:",
            "    LoggingConfiguration:",
            "      Destinations:",
            "        -",
            "      IncludeExecutionData: ${7|false,true|}",
            "      Level: \"${8:String}\"",
            "    RoleArn: \"${7:String}\" # Required",
            "    StateMachineName: \"${8:String}\"",
            "    StateMachineType: \"${9:String}\"",
            "    Tags:",
            "      Tags",
            "    TracingConfiguration:",
            "      Enabled: ${11|false,true|}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-stepfunctions-statemachine.html",
            "Attributes: ",
            "  Arn",
            "  Name"
        ],
        "prefix": "stepfunctions-statemachine",
        "scope": "yaml"
    },
    "AWS::Synthetics::Canary": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Synthetics::Canary",
            "  Properties:",
            "    ArtifactConfig:",
            "    ArtifactS3Location: \"${3:String}\" # Required",
            "    Code:",
            "      Handler: \"${4:String}\"",
            "      S3Bucket: \"${5:String}\"",
            "      S3Key: \"${6:String}\"",
            "      S3ObjectVersion: \"${7:String}\"",
            "      Script: \"${8:String}\"",
            "    DeleteLambdaResourcesOnCanaryDeletion: ${5|false,true|}",
            "    ExecutionRoleArn: \"${6:String}\" # Required",
            "    FailureRetentionPeriod: ${7:Number}",
            "    Name: \"${8:String}\" # Required",
            "    RunConfig:",
            "      ActiveTracing: ${9|false,true|}",
            "      MemoryInMB: ${11:Number}",
            "      TimeoutInSeconds: ${12:Number}",
            "    RuntimeVersion: \"${10:String}\" # Required",
            "    Schedule:",
            "      DurationInSeconds: \"${11:String}\"",
            "      Expression: \"${12:String}\"",
            "    StartCanaryAfterCreation: ${12|false,true|} # Required",
            "    SuccessRetentionPeriod: ${13:Number}",
            "    Tags:",
            "      Tags",
            "    VPCConfig:",
            "      SecurityGroupIds:",
            "        -",
            "      SubnetIds:",
            "        -",
            "      VpcId: \"${17:String}\"",
            "    VisualReference:",
            "      BaseCanaryRunId: \"${16:String}\"",
            "      BaseScreenshots:",
            "        -"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-synthetics-canary.html",
            "Attributes: ",
            "  Id",
            "  State"
        ],
        "prefix": "synthetics-canary",
        "scope": "yaml"
    },
    "AWS::Timestream::Database": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Timestream::Database",
            "  Properties:",
            "    DatabaseName: \"${2:String}\"",
            "    KmsKeyId: \"${3:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-database.html",
            "Attributes: ",
            "  Arn"
        ],
        "prefix": "timestream-database",
        "scope": "yaml"
    },
    "AWS::Timestream::ScheduledQuery": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Timestream::ScheduledQuery",
            "  Properties:",
            "    ClientToken: \"${2:String}\"",
            "    ErrorReportConfiguration:",
            "    KmsKeyId: \"${4:String}\"",
            "    NotificationConfiguration:",
            "    QueryString: \"${6:String}\" # Required",
            "    ScheduleConfiguration:",
            "      ScheduleExpression: \"${7:String}\"",
            "    ScheduledQueryExecutionRoleArn: \"${8:String}\" # Required",
            "    ScheduledQueryName: \"${9:String}\"",
            "    Tags:",
            "      Tags",
            "    TargetConfiguration:"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-scheduledquery.html",
            "Attributes: ",
            "  Arn",
            "  SQName",
            "  SQQueryString",
            "  SQScheduleConfiguration",
            "  SQNotificationConfiguration",
            "  SQScheduledQueryExecutionRoleArn",
            "  SQTargetConfiguration",
            "  SQErrorReportConfiguration",
            "  SQKmsKeyId"
        ],
        "prefix": "timestream-scheduledquery",
        "scope": "yaml"
    },
    "AWS::Timestream::Table": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Timestream::Table",
            "  Properties:",
            "    DatabaseName: \"${2:String}\" # Required",
            "    MagneticStoreWriteProperties: ${3:JSON}",
            "    RetentionProperties: ${4:JSON}",
            "    TableName: \"${5:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-table.html",
            "Attributes: ",
            "  Arn",
            "  Name"
        ],
        "prefix": "timestream-table",
        "scope": "yaml"
    },
    "AWS::Transfer::Server": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Transfer::Server",
            "  Properties:",
            "    Certificate: \"${2:String}\"",
            "    Domain: \"${3:String}\"",
            "    EndpointDetails:",
            "      AddressAllocationIds:",
            "        -",
            "      SecurityGroupIds:",
            "        -",
            "      SubnetIds:",
            "        -",
            "      VpcEndpointId: \"${7:String}\"",
            "      VpcId: \"${8:String}\"",
            "    EndpointType: \"${5:String}\"",
            "    IdentityProviderDetails:",
            "      DirectoryId: \"${6:String}\"",
            "      Function: \"${7:String}\"",
            "      InvocationRole: \"${8:String}\"",
            "      Url: \"${9:String}\"",
            "    IdentityProviderType: \"${7:String}\"",
            "    LoggingRole: \"${8:String}\"",
            "    PostAuthenticationLoginBanner: \"${9:String}\"",
            "    PreAuthenticationLoginBanner: \"${10:String}\"",
            "    ProtocolDetails:",
            "      PassiveIp: \"${11:String}\"",
            "      TlsSessionResumptionMode: \"${12:String}\"",
            "    Protocols:",
            "      Protocols",
            "    SecurityPolicyName: \"${13:String}\"",
            "    Tags:",
            "      Tags",
            "    WorkflowDetails:",
            "      OnUpload:",
            "        -"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-server.html",
            "Attributes: ",
            "  ServerId",
            "  Arn"
        ],
        "prefix": "transfer-server",
        "scope": "yaml"
    },
    "AWS::Transfer::User": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Transfer::User",
            "  Properties:",
            "    HomeDirectory: \"${2:String}\"",
            "    HomeDirectoryMappings:",
            "      HomeDirectoryMappings",
            "    HomeDirectoryType: \"${4:String}\"",
            "    Policy: \"${5:String}\"",
            "    PosixProfile:",
            "      Gid: ${6:Number}",
            "      SecondaryGids:",
            "        -",
            "      Uid: ${8:Number}",
            "    Role: \"${7:String}\" # Required",
            "    ServerId: \"${8:String}\" # Required",
            "    SshPublicKeys:",
            "      SshPublicKeys",
            "    Tags:",
            "      Tags",
            "    UserName: \"${11:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-user.html",
            "Attributes: ",
            "  ServerId",
            "  UserName",
            "  Arn"
        ],
        "prefix": "transfer-user",
        "scope": "yaml"
    },
    "AWS::Transfer::Workflow": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Transfer::Workflow",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    OnExceptionSteps:",
            "      OnExceptionSteps",
            "    Steps: # Required",
            "      Steps",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-workflow.html",
            "Attributes: ",
            "  WorkflowId",
            "  Arn"
        ],
        "prefix": "transfer-workflow",
        "scope": "yaml"
    },
    "AWS::VoiceID::Domain": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::VoiceID::Domain",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    Name: \"${3:String}\" # Required",
            "    ServerSideEncryptionConfiguration:",
            "      KmsKeyId: \"${4:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-voiceid-domain.html",
            "Attributes: ",
            "  DomainId"
        ],
        "prefix": "voiceid-domain",
        "scope": "yaml"
    },
    "AWS::WAF::ByteMatchSet": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::WAF::ByteMatchSet",
            "  Properties:",
            "    ByteMatchTuples:",
            "      ByteMatchTuples",
            "    Name: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-bytematchset.html"
        ],
        "prefix": "waf-bytematchset",
        "scope": "yaml"
    },
    "AWS::WAF::IPSet": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::WAF::IPSet",
            "  Properties:",
            "    IPSetDescriptors:",
            "      IPSetDescriptors",
            "    Name: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-ipset.html"
        ],
        "prefix": "waf-ipset",
        "scope": "yaml"
    },
    "AWS::WAF::Rule": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::WAF::Rule",
            "  Properties:",
            "    MetricName: \"${2:String}\" # Required",
            "    Name: \"${3:String}\" # Required",
            "    Predicates:",
            "      Predicates"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-rule.html"
        ],
        "prefix": "waf-rule",
        "scope": "yaml"
    },
    "AWS::WAF::SizeConstraintSet": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::WAF::SizeConstraintSet",
            "  Properties:",
            "    Name: \"${2:String}\" # Required",
            "    SizeConstraints: # Required",
            "      SizeConstraints"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-sizeconstraintset.html"
        ],
        "prefix": "waf-sizeconstraintset",
        "scope": "yaml"
    },
    "AWS::WAF::SqlInjectionMatchSet": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::WAF::SqlInjectionMatchSet",
            "  Properties:",
            "    Name: \"${2:String}\" # Required",
            "    SqlInjectionMatchTuples:",
            "      SqlInjectionMatchTuples"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-sqlinjectionmatchset.html"
        ],
        "prefix": "waf-sqlinjectionmatchset",
        "scope": "yaml"
    },
    "AWS::WAF::WebACL": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::WAF::WebACL",
            "  Properties:",
            "    DefaultAction:",
            "      Type: \"${2:String}\"",
            "    MetricName: \"${3:String}\" # Required",
            "    Name: \"${4:String}\" # Required",
            "    Rules:",
            "      Rules"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-webacl.html"
        ],
        "prefix": "waf-webacl",
        "scope": "yaml"
    },
    "AWS::WAF::XssMatchSet": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::WAF::XssMatchSet",
            "  Properties:",
            "    Name: \"${2:String}\" # Required",
            "    XssMatchTuples: # Required",
            "      XssMatchTuples"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-xssmatchset.html"
        ],
        "prefix": "waf-xssmatchset",
        "scope": "yaml"
    },
    "AWS::WAFRegional::ByteMatchSet": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::WAFRegional::ByteMatchSet",
            "  Properties:",
            "    ByteMatchTuples:",
            "      ByteMatchTuples",
            "    Name: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-bytematchset.html"
        ],
        "prefix": "wafregional-bytematchset",
        "scope": "yaml"
    },
    "AWS::WAFRegional::GeoMatchSet": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::WAFRegional::GeoMatchSet",
            "  Properties:",
            "    GeoMatchConstraints:",
            "      GeoMatchConstraints",
            "    Name: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-geomatchset.html"
        ],
        "prefix": "wafregional-geomatchset",
        "scope": "yaml"
    },
    "AWS::WAFRegional::IPSet": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::WAFRegional::IPSet",
            "  Properties:",
            "    IPSetDescriptors:",
            "      IPSetDescriptors",
            "    Name: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-ipset.html"
        ],
        "prefix": "wafregional-ipset",
        "scope": "yaml"
    },
    "AWS::WAFRegional::RateBasedRule": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::WAFRegional::RateBasedRule",
            "  Properties:",
            "    MatchPredicates:",
            "      MatchPredicates",
            "    MetricName: \"${3:String}\" # Required",
            "    Name: \"${4:String}\" # Required",
            "    RateKey: \"${5:String}\" # Required",
            "    RateLimit: ${6:Number} # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-ratebasedrule.html"
        ],
        "prefix": "wafregional-ratebasedrule",
        "scope": "yaml"
    },
    "AWS::WAFRegional::RegexPatternSet": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::WAFRegional::RegexPatternSet",
            "  Properties:",
            "    Name: \"${2:String}\" # Required",
            "    RegexPatternStrings: # Required",
            "      RegexPatternStrings"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-regexpatternset.html"
        ],
        "prefix": "wafregional-regexpatternset",
        "scope": "yaml"
    },
    "AWS::WAFRegional::Rule": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::WAFRegional::Rule",
            "  Properties:",
            "    MetricName: \"${2:String}\" # Required",
            "    Name: \"${3:String}\" # Required",
            "    Predicates:",
            "      Predicates"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-rule.html"
        ],
        "prefix": "wafregional-rule",
        "scope": "yaml"
    },
    "AWS::WAFRegional::SizeConstraintSet": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::WAFRegional::SizeConstraintSet",
            "  Properties:",
            "    Name: \"${2:String}\" # Required",
            "    SizeConstraints:",
            "      SizeConstraints"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-sizeconstraintset.html"
        ],
        "prefix": "wafregional-sizeconstraintset",
        "scope": "yaml"
    },
    "AWS::WAFRegional::SqlInjectionMatchSet": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::WAFRegional::SqlInjectionMatchSet",
            "  Properties:",
            "    Name: \"${2:String}\" # Required",
            "    SqlInjectionMatchTuples:",
            "      SqlInjectionMatchTuples"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-sqlinjectionmatchset.html"
        ],
        "prefix": "wafregional-sqlinjectionmatchset",
        "scope": "yaml"
    },
    "AWS::WAFRegional::WebACL": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::WAFRegional::WebACL",
            "  Properties:",
            "    DefaultAction:",
            "      Type: \"${2:String}\"",
            "    MetricName: \"${3:String}\" # Required",
            "    Name: \"${4:String}\" # Required",
            "    Rules:",
            "      Rules"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-webacl.html"
        ],
        "prefix": "wafregional-webacl",
        "scope": "yaml"
    },
    "AWS::WAFRegional::WebACLAssociation": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::WAFRegional::WebACLAssociation",
            "  Properties:",
            "    ResourceArn: \"${2:String}\" # Required",
            "    WebACLId: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-webaclassociation.html"
        ],
        "prefix": "wafregional-webaclassociation",
        "scope": "yaml"
    },
    "AWS::WAFRegional::XssMatchSet": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::WAFRegional::XssMatchSet",
            "  Properties:",
            "    Name: \"${2:String}\" # Required",
            "    XssMatchTuples:",
            "      XssMatchTuples"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-xssmatchset.html"
        ],
        "prefix": "wafregional-xssmatchset",
        "scope": "yaml"
    },
    "AWS::WAFv2::IPSet": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::WAFv2::IPSet",
            "  Properties:",
            "    Addresses: # Required",
            "      Addresses",
            "    Description: \"${3:String}\"",
            "    IPAddressVersion: \"${4:String}\" # Required",
            "    Name: \"${5:String}\"",
            "    Scope: \"${6:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-ipset.html",
            "Attributes: ",
            "  Arn",
            "  Id"
        ],
        "prefix": "wafv2-ipset",
        "scope": "yaml"
    },
    "AWS::WAFv2::LoggingConfiguration": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::WAFv2::LoggingConfiguration",
            "  Properties:",
            "    LogDestinationConfigs: # Required",
            "      LogDestinationConfigs",
            "    LoggingFilter: ${3:JSON}",
            "    RedactedFields:",
            "      RedactedFields",
            "    ResourceArn: \"${5:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-loggingconfiguration.html",
            "Attributes: ",
            "  ManagedByFirewallManager"
        ],
        "prefix": "wafv2-loggingconfiguration",
        "scope": "yaml"
    },
    "AWS::WAFv2::RegexPatternSet": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::WAFv2::RegexPatternSet",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    Name: \"${3:String}\"",
            "    RegularExpressionList: # Required",
            "      RegularExpressionList",
            "    Scope: \"${5:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-regexpatternset.html",
            "Attributes: ",
            "  Arn",
            "  Id"
        ],
        "prefix": "wafv2-regexpatternset",
        "scope": "yaml"
    },
    "AWS::WAFv2::RuleGroup": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::WAFv2::RuleGroup",
            "  Properties:",
            "    Capacity: ${2:Number} # Required",
            "    CustomResponseBodies:",
            "    Description: \"${4:String}\"",
            "    Name: \"${5:String}\"",
            "    Rules:",
            "      Rules",
            "    Scope: \"${7:String}\" # Required",
            "    Tags:",
            "      Tags",
            "    VisibilityConfig:",
            "      CloudWatchMetricsEnabled: ${9|false,true|}",
            "      MetricName: \"${10:String}\"",
            "      SampledRequestsEnabled: ${11|false,true|}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-rulegroup.html",
            "Attributes: ",
            "  Arn",
            "  Id",
            "  LabelNamespace",
            "  AvailableLabels",
            "  ConsumedLabels"
        ],
        "prefix": "wafv2-rulegroup",
        "scope": "yaml"
    },
    "AWS::WAFv2::WebACL": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::WAFv2::WebACL",
            "  Properties:",
            "    CaptchaConfig:",
            "    CustomResponseBodies:",
            "    DefaultAction:",
            "    Description: \"${5:String}\"",
            "    Name: \"${6:String}\"",
            "    Rules:",
            "      Rules",
            "    Scope: \"${8:String}\" # Required",
            "    Tags:",
            "      Tags",
            "    VisibilityConfig:",
            "      CloudWatchMetricsEnabled: ${10|false,true|}",
            "      MetricName: \"${11:String}\"",
            "      SampledRequestsEnabled: ${12|false,true|}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webacl.html",
            "Attributes: ",
            "  Arn",
            "  Capacity",
            "  Id",
            "  LabelNamespace"
        ],
        "prefix": "wafv2-webacl",
        "scope": "yaml"
    },
    "AWS::WAFv2::WebACLAssociation": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::WAFv2::WebACLAssociation",
            "  Properties:",
            "    ResourceArn: \"${2:String}\" # Required",
            "    WebACLArn: \"${3:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webaclassociation.html"
        ],
        "prefix": "wafv2-webaclassociation",
        "scope": "yaml"
    },
    "AWS::Wisdom::Assistant": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Wisdom::Assistant",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    Name: \"${3:String}\" # Required",
            "    ServerSideEncryptionConfiguration:",
            "      KmsKeyId: \"${4:String}\"",
            "    Tags:",
            "      Tags",
            "    Type: \"${6:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-assistant.html",
            "Attributes: ",
            "  AssistantArn",
            "  AssistantId"
        ],
        "prefix": "wisdom-assistant",
        "scope": "yaml"
    },
    "AWS::Wisdom::AssistantAssociation": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Wisdom::AssistantAssociation",
            "  Properties:",
            "    AssistantId: \"${2:String}\" # Required",
            "    Association:",
            "      KnowledgeBaseId: \"${3:String}\"",
            "    AssociationType: \"${4:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-assistantassociation.html",
            "Attributes: ",
            "  AssistantAssociationArn",
            "  AssistantArn",
            "  AssistantAssociationId"
        ],
        "prefix": "wisdom-assistantassociation",
        "scope": "yaml"
    },
    "AWS::Wisdom::KnowledgeBase": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::Wisdom::KnowledgeBase",
            "  Properties:",
            "    Description: \"${2:String}\"",
            "    KnowledgeBaseType: \"${3:String}\" # Required",
            "    Name: \"${4:String}\" # Required",
            "    RenderingConfiguration:",
            "      TemplateUri: \"${5:String}\"",
            "    ServerSideEncryptionConfiguration:",
            "      KmsKeyId: \"${6:String}\"",
            "    SourceConfiguration:",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-knowledgebase.html",
            "Attributes: ",
            "  KnowledgeBaseArn",
            "  KnowledgeBaseId"
        ],
        "prefix": "wisdom-knowledgebase",
        "scope": "yaml"
    },
    "AWS::WorkSpaces::ConnectionAlias": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::WorkSpaces::ConnectionAlias",
            "  Properties:",
            "    ConnectionString: \"${2:String}\" # Required",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-connectionalias.html",
            "Attributes: ",
            "  Associations",
            "  AliasId",
            "  ConnectionAliasState"
        ],
        "prefix": "workspaces-connectionalias",
        "scope": "yaml"
    },
    "AWS::WorkSpaces::Workspace": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::WorkSpaces::Workspace",
            "  Properties:",
            "    BundleId: \"${2:String}\" # Required",
            "    DirectoryId: \"${3:String}\" # Required",
            "    RootVolumeEncryptionEnabled: ${4|false,true|}",
            "    Tags:",
            "      Tags",
            "    UserName: \"${6:String}\" # Required",
            "    UserVolumeEncryptionEnabled: ${7|false,true|}",
            "    VolumeEncryptionKey: \"${8:String}\"",
            "    WorkspaceProperties:",
            "      ComputeTypeName: \"${9:String}\"",
            "      RootVolumeSizeGib: ${10:Number}",
            "      RunningMode: \"${11:String}\"",
            "      RunningModeAutoStopTimeoutInMinutes: ${12:Number}",
            "      UserVolumeSizeGib: ${13:Number}"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-workspace.html"
        ],
        "prefix": "workspaces-workspace",
        "scope": "yaml"
    },
    "AWS::XRay::Group": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::XRay::Group",
            "  Properties:",
            "    FilterExpression: \"${2:String}\"",
            "    GroupName: \"${3:String}\"",
            "    InsightsConfiguration:",
            "      InsightsEnabled: ${4|false,true|}",
            "      NotificationsEnabled: ${5|false,true|}",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-xray-group.html",
            "Attributes: ",
            "  GroupARN"
        ],
        "prefix": "xray-group",
        "scope": "yaml"
    },
    "AWS::XRay::SamplingRule": {
        "body": [
            "${1:LogicalID}:",
            "  Type: AWS::XRay::SamplingRule",
            "  Properties:",
            "    RuleName: \"${2:String}\"",
            "    SamplingRule:",
            "      FixedRate: ${4:Number}",
            "      HTTPMethod: \"${5:String}\"",
            "      Host: \"${6:String}\"",
            "      Priority: ${7:Number}",
            "      ReservoirSize: ${8:Number}",
            "      ResourceARN: \"${9:String}\"",
            "      RuleARN: \"${10:String}\"",
            "      RuleName: \"${11:String}\"",
            "      ServiceName: \"${12:String}\"",
            "      ServiceType: \"${13:String}\"",
            "      URLPath: \"${14:String}\"",
            "      Version: ${15:Number}",
            "    SamplingRuleRecord:",
            "      CreatedAt: \"${4:String}\"",
            "      ModifiedAt: \"${5:String}\"",
            "    SamplingRuleUpdate:",
            "      FixedRate: ${6:Number}",
            "      HTTPMethod: \"${7:String}\"",
            "      Host: \"${8:String}\"",
            "      Priority: ${9:Number}",
            "      ReservoirSize: ${10:Number}",
            "      ResourceARN: \"${11:String}\"",
            "      RuleARN: \"${12:String}\"",
            "      RuleName: \"${13:String}\"",
            "      ServiceName: \"${14:String}\"",
            "      ServiceType: \"${15:String}\"",
            "      URLPath: \"${16:String}\"",
            "    Tags:",
            "      Tags"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-xray-samplingrule.html",
            "Attributes: ",
            "  RuleARN"
        ],
        "prefix": "xray-samplingrule",
        "scope": "yaml"
    },
    "Alexa::ASK::Skill": {
        "body": [
            "${1:LogicalID}:",
            "  Type: Alexa::ASK::Skill",
            "  Properties:",
            "    AuthenticationConfiguration:",
            "      ClientId: \"${2:String}\"",
            "      ClientSecret: \"${3:String}\"",
            "      RefreshToken: \"${4:String}\"",
            "    SkillPackage:",
            "      S3Bucket: \"${4:String}\"",
            "      S3BucketRole: \"${5:String}\"",
            "      S3Key: \"${6:String}\"",
            "      S3ObjectVersion: \"${7:String}\"",
            "    VendorId: \"${4:String}\" # Required"
        ],
        "description": [
            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ask-skill.html"
        ],
        "prefix": "alexa-ask-skill",
        "scope": "yaml"
    }
}